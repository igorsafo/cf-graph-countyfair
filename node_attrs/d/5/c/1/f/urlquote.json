{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "linux_aarch64": "linux_64",
   "linux_ppc64le": "linux_64",
   "osx_arm64": "osx_64"
  },
  "conda_build": {
   "pkg_format": "2"
  },
  "conda_forge_output_validation": true,
  "github": {
   "branch_name": "main",
   "tooling_branch_name": "main"
  },
  "provider": {
   "linux_aarch64": "default",
   "linux_ppc64le": "default",
   "win": "azure"
  },
  "test_on_native_only": true
 },
 "feedstock_name": "urlquote",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "urlquote is not intended to be a replacement for urllib. urllib is part of the Python standard\nlibrary and should be your go-to choice to quote and unquote URLs. However, should quoting or\nunquoting of URLs be known to be a performance bottleneck and you are fine with the encodings\nprovided, then by all means have fun using this library.\n",
   "dev_url": "https://github.com/blue-yonder/urlquote",
   "doc_url": "https://github.com/blue-yonder/urlquote/blob/v1.1.1/README.md",
   "home": "https://github.com/blue-yonder/urlquote",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Fast percent encoding / decoding for python."
  },
  "build": {
   "number": "2"
  },
  "extra": {
   "recipe-maintainers": [
    "pacman82",
    "xhochy",
    "pacman82",
    "xhochy",
    "pacman82",
    "xhochy",
    "pacman82",
    "xhochy",
    "pacman82",
    "xhochy",
    "pacman82",
    "xhochy"
   ]
  },
  "package": {
   "name": "urlquote",
   "version": "2.0.0"
  },
  "requirements": {
   "build": [
    "rust_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "rust_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "rust_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "rust_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "rust_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "rust_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "cffi",
    "maturin >=0.13,<0.14",
    "pip",
    "python",
    "cffi",
    "maturin >=0.13,<0.14",
    "pip",
    "python",
    "cffi",
    "maturin >=0.13,<0.14",
    "pip",
    "python",
    "cffi",
    "maturin >=0.13,<0.14",
    "pip",
    "python",
    "cffi",
    "maturin >=0.13,<0.14",
    "pip",
    "python",
    "cffi",
    "maturin >=0.13,<0.14",
    "pip"
   ],
   "run": [
    "python",
    "cffi",
    "python",
    "cffi",
    "python",
    "cffi",
    "python",
    "cffi",
    "python",
    "cffi",
    "python",
    "cffi"
   ]
  },
  "source": {
   "sha256": "03479d99bd2e3ebc7763770cde1276f05f8687c8b8356c83d4095def58754b1d",
   "url": "https://pypi.io/packages/source/u/urlquote/urlquote-2.0.0.tar.gz"
  },
  "test": {
   "imports": [
    "urlquote",
    "urlquote.quoting",
    "urlquote",
    "urlquote.quoting",
    "urlquote",
    "urlquote.quoting",
    "urlquote",
    "urlquote.quoting",
    "urlquote",
    "urlquote.quoting",
    "urlquote",
    "urlquote.quoting"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "rust_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cffi",
    "maturin",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cffi",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "linux_aarch64_meta_yaml": {
  "about": {
   "description": "urlquote is not intended to be a replacement for urllib. urllib is part of the Python standard\nlibrary and should be your go-to choice to quote and unquote URLs. However, should quoting or\nunquoting of URLs be known to be a performance bottleneck and you are fine with the encodings\nprovided, then by all means have fun using this library.\n",
   "dev_url": "https://github.com/blue-yonder/urlquote",
   "doc_url": "https://github.com/blue-yonder/urlquote/blob/v1.1.1/README.md",
   "home": "https://github.com/blue-yonder/urlquote",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Fast percent encoding / decoding for python."
  },
  "build": {
   "number": "2"
  },
  "extra": {
   "recipe-maintainers": [
    "pacman82",
    "xhochy",
    "pacman82",
    "xhochy",
    "pacman82",
    "xhochy",
    "pacman82",
    "xhochy",
    "pacman82",
    "xhochy",
    "pacman82",
    "xhochy"
   ]
  },
  "package": {
   "name": "urlquote",
   "version": "2.0.0"
  },
  "requirements": {
   "build": [
    "rust_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "rust_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "rust_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "rust_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "rust_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "rust_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "cffi",
    "maturin >=0.13,<0.14",
    "pip",
    "python",
    "cffi",
    "maturin >=0.13,<0.14",
    "pip",
    "python",
    "cffi",
    "maturin >=0.13,<0.14",
    "pip",
    "python",
    "cffi",
    "maturin >=0.13,<0.14",
    "pip",
    "python",
    "cffi",
    "maturin >=0.13,<0.14",
    "pip",
    "python",
    "cffi",
    "maturin >=0.13,<0.14",
    "pip"
   ],
   "run": [
    "python",
    "cffi",
    "python",
    "cffi",
    "python",
    "cffi",
    "python",
    "cffi",
    "python",
    "cffi",
    "python",
    "cffi"
   ]
  },
  "source": {
   "sha256": "03479d99bd2e3ebc7763770cde1276f05f8687c8b8356c83d4095def58754b1d",
   "url": "https://pypi.io/packages/source/u/urlquote/urlquote-2.0.0.tar.gz"
  },
  "test": {
   "imports": [
    "urlquote",
    "urlquote.quoting",
    "urlquote",
    "urlquote.quoting",
    "urlquote",
    "urlquote.quoting",
    "urlquote",
    "urlquote.quoting",
    "urlquote",
    "urlquote.quoting",
    "urlquote",
    "urlquote.quoting"
   ]
  }
 },
 "linux_aarch64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "rust_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cffi",
    "maturin",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cffi",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "linux_ppc64le_meta_yaml": {
  "about": {
   "description": "urlquote is not intended to be a replacement for urllib. urllib is part of the Python standard\nlibrary and should be your go-to choice to quote and unquote URLs. However, should quoting or\nunquoting of URLs be known to be a performance bottleneck and you are fine with the encodings\nprovided, then by all means have fun using this library.\n",
   "dev_url": "https://github.com/blue-yonder/urlquote",
   "doc_url": "https://github.com/blue-yonder/urlquote/blob/v1.1.1/README.md",
   "home": "https://github.com/blue-yonder/urlquote",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Fast percent encoding / decoding for python."
  },
  "build": {
   "number": "2"
  },
  "extra": {
   "recipe-maintainers": [
    "pacman82",
    "xhochy",
    "pacman82",
    "xhochy",
    "pacman82",
    "xhochy",
    "pacman82",
    "xhochy",
    "pacman82",
    "xhochy",
    "pacman82",
    "xhochy"
   ]
  },
  "package": {
   "name": "urlquote",
   "version": "2.0.0"
  },
  "requirements": {
   "build": [
    "rust_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "rust_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "rust_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "rust_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "rust_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "rust_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "cffi",
    "maturin >=0.13,<0.14",
    "pip",
    "python",
    "cffi",
    "maturin >=0.13,<0.14",
    "pip",
    "python",
    "cffi",
    "maturin >=0.13,<0.14",
    "pip",
    "python",
    "cffi",
    "maturin >=0.13,<0.14",
    "pip",
    "python",
    "cffi",
    "maturin >=0.13,<0.14",
    "pip",
    "python",
    "cffi",
    "maturin >=0.13,<0.14",
    "pip"
   ],
   "run": [
    "python",
    "cffi",
    "python",
    "cffi",
    "python",
    "cffi",
    "python",
    "cffi",
    "python",
    "cffi",
    "python",
    "cffi"
   ]
  },
  "source": {
   "sha256": "03479d99bd2e3ebc7763770cde1276f05f8687c8b8356c83d4095def58754b1d",
   "url": "https://pypi.io/packages/source/u/urlquote/urlquote-2.0.0.tar.gz"
  },
  "test": {
   "imports": [
    "urlquote",
    "urlquote.quoting",
    "urlquote",
    "urlquote.quoting",
    "urlquote",
    "urlquote.quoting",
    "urlquote",
    "urlquote.quoting",
    "urlquote",
    "urlquote.quoting",
    "urlquote",
    "urlquote.quoting"
   ]
  }
 },
 "linux_ppc64le_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "rust_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cffi",
    "maturin",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cffi",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "urlquote is not intended to be a replacement for urllib. urllib is part of the Python standard\nlibrary and should be your go-to choice to quote and unquote URLs. However, should quoting or\nunquoting of URLs be known to be a performance bottleneck and you are fine with the encodings\nprovided, then by all means have fun using this library.\n",
   "dev_url": "https://github.com/blue-yonder/urlquote",
   "doc_url": "https://github.com/blue-yonder/urlquote/blob/v1.1.1/README.md",
   "home": "https://github.com/blue-yonder/urlquote",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Fast percent encoding / decoding for python."
  },
  "build": {
   "number": "2"
  },
  "extra": {
   "recipe-maintainers": [
    "pacman82",
    "xhochy",
    "pacman82",
    "xhochy",
    "pacman82",
    "xhochy",
    "pacman82",
    "xhochy",
    "pacman82",
    "xhochy",
    "pacman82",
    "xhochy",
    "pacman82",
    "xhochy",
    "pacman82",
    "xhochy",
    "pacman82",
    "xhochy",
    "pacman82",
    "xhochy",
    "pacman82",
    "xhochy",
    "pacman82",
    "xhochy",
    "pacman82",
    "xhochy",
    "pacman82",
    "xhochy",
    "pacman82",
    "xhochy",
    "pacman82",
    "xhochy",
    "pacman82",
    "xhochy",
    "pacman82",
    "xhochy",
    "pacman82",
    "xhochy",
    "pacman82",
    "xhochy",
    "pacman82",
    "xhochy",
    "pacman82",
    "xhochy",
    "pacman82",
    "xhochy",
    "pacman82",
    "xhochy",
    "pacman82",
    "xhochy",
    "pacman82",
    "xhochy",
    "pacman82",
    "xhochy",
    "pacman82",
    "xhochy",
    "pacman82",
    "xhochy",
    "pacman82",
    "xhochy",
    "pacman82",
    "xhochy",
    "pacman82",
    "xhochy",
    "pacman82",
    "xhochy",
    "pacman82",
    "xhochy"
   ]
  },
  "package": {
   "name": "urlquote",
   "version": "2.0.0"
  },
  "requirements": {
   "build": [
    "rust_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "rust_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "rust_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "rust_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "rust_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "rust_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "rust_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "rust_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "rust_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "rust_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "rust_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "rust_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "rust_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "rust_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "rust_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "rust_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "rust_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "rust_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "rust_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "rust_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "rust_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "rust_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "rust_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "rust_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "rust_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "rust_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "rust_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "rust_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "rust_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "rust_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "rust_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "rust_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "rust_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "rust_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "cffi",
    "maturin >=0.13,<0.14",
    "pip",
    "python",
    "cffi",
    "maturin >=0.13,<0.14",
    "pip",
    "python",
    "cffi",
    "maturin >=0.13,<0.14",
    "pip",
    "python",
    "cffi",
    "maturin >=0.13,<0.14",
    "pip",
    "python",
    "cffi",
    "maturin >=0.13,<0.14",
    "pip",
    "python",
    "cffi",
    "maturin >=0.13,<0.14",
    "pip",
    "python",
    "cffi",
    "maturin >=0.13,<0.14",
    "pip",
    "python",
    "cffi",
    "maturin >=0.13,<0.14",
    "pip",
    "python",
    "cffi",
    "maturin >=0.13,<0.14",
    "pip",
    "python",
    "cffi",
    "maturin >=0.13,<0.14",
    "pip",
    "python",
    "cffi",
    "maturin >=0.13,<0.14",
    "pip",
    "python",
    "cffi",
    "maturin >=0.13,<0.14",
    "pip",
    "python",
    "cffi",
    "maturin >=0.13,<0.14",
    "pip",
    "python",
    "cffi",
    "maturin >=0.13,<0.14",
    "pip",
    "python",
    "cffi",
    "maturin >=0.13,<0.14",
    "pip",
    "python",
    "cffi",
    "maturin >=0.13,<0.14",
    "pip",
    "python",
    "cffi",
    "maturin >=0.13,<0.14",
    "pip",
    "python",
    "cffi",
    "maturin >=0.13,<0.14",
    "pip",
    "python",
    "cffi",
    "maturin >=0.13,<0.14",
    "pip",
    "python",
    "cffi",
    "maturin >=0.13,<0.14",
    "pip",
    "python",
    "cffi",
    "maturin >=0.13,<0.14",
    "pip",
    "python",
    "cffi",
    "maturin >=0.13,<0.14",
    "pip",
    "python",
    "cffi",
    "maturin >=0.13,<0.14",
    "pip",
    "python",
    "cffi",
    "maturin >=0.13,<0.14",
    "pip",
    "python",
    "cffi",
    "maturin >=0.13,<0.14",
    "pip",
    "python",
    "cffi",
    "maturin >=0.13,<0.14",
    "pip",
    "python",
    "cffi",
    "maturin >=0.13,<0.14",
    "pip",
    "python",
    "cffi",
    "maturin >=0.13,<0.14",
    "pip",
    "python",
    "cffi",
    "maturin >=0.13,<0.14",
    "pip",
    "python",
    "cffi",
    "maturin >=0.13,<0.14",
    "pip",
    "python",
    "cffi",
    "maturin >=0.13,<0.14",
    "pip",
    "python",
    "cffi",
    "maturin >=0.13,<0.14",
    "pip",
    "python",
    "cffi",
    "maturin >=0.13,<0.14",
    "pip",
    "python",
    "cffi",
    "maturin >=0.13,<0.14",
    "pip"
   ],
   "run": [
    "python",
    "cffi",
    "python",
    "cffi",
    "python",
    "cffi",
    "python",
    "cffi",
    "python",
    "cffi",
    "python",
    "cffi",
    "python",
    "cffi",
    "python",
    "cffi",
    "python",
    "cffi",
    "python",
    "cffi",
    "python",
    "cffi",
    "python",
    "cffi",
    "python",
    "cffi",
    "python",
    "cffi",
    "python",
    "cffi",
    "python",
    "cffi",
    "python",
    "cffi",
    "python",
    "cffi",
    "python",
    "cffi",
    "python",
    "cffi",
    "python",
    "cffi",
    "python",
    "cffi",
    "python",
    "cffi",
    "python",
    "cffi",
    "python",
    "cffi",
    "python",
    "cffi",
    "python",
    "cffi",
    "python",
    "cffi",
    "python",
    "cffi",
    "python",
    "cffi",
    "python",
    "cffi",
    "python",
    "cffi",
    "python",
    "cffi",
    "python",
    "cffi"
   ]
  },
  "source": {
   "sha256": "03479d99bd2e3ebc7763770cde1276f05f8687c8b8356c83d4095def58754b1d",
   "url": "https://pypi.io/packages/source/u/urlquote/urlquote-2.0.0.tar.gz"
  },
  "test": {
   "imports": [
    "urlquote",
    "urlquote.quoting",
    "urlquote",
    "urlquote.quoting",
    "urlquote",
    "urlquote.quoting",
    "urlquote",
    "urlquote.quoting",
    "urlquote",
    "urlquote.quoting",
    "urlquote",
    "urlquote.quoting",
    "urlquote",
    "urlquote.quoting",
    "urlquote",
    "urlquote.quoting",
    "urlquote",
    "urlquote.quoting",
    "urlquote",
    "urlquote.quoting",
    "urlquote",
    "urlquote.quoting",
    "urlquote",
    "urlquote.quoting",
    "urlquote",
    "urlquote.quoting",
    "urlquote",
    "urlquote.quoting",
    "urlquote",
    "urlquote.quoting",
    "urlquote",
    "urlquote.quoting",
    "urlquote",
    "urlquote.quoting",
    "urlquote",
    "urlquote.quoting",
    "urlquote",
    "urlquote.quoting",
    "urlquote",
    "urlquote.quoting",
    "urlquote",
    "urlquote.quoting",
    "urlquote",
    "urlquote.quoting",
    "urlquote",
    "urlquote.quoting",
    "urlquote",
    "urlquote.quoting",
    "urlquote",
    "urlquote.quoting",
    "urlquote",
    "urlquote.quoting",
    "urlquote",
    "urlquote.quoting",
    "urlquote",
    "urlquote.quoting",
    "urlquote",
    "urlquote.quoting",
    "urlquote",
    "urlquote.quoting",
    "urlquote",
    "urlquote.quoting",
    "urlquote",
    "urlquote.quoting",
    "urlquote",
    "urlquote.quoting",
    "urlquote",
    "urlquote.quoting"
   ]
  }
 },
 "name": "urlquote",
 "osx_64_meta_yaml": {
  "about": {
   "description": "urlquote is not intended to be a replacement for urllib. urllib is part of the Python standard\nlibrary and should be your go-to choice to quote and unquote URLs. However, should quoting or\nunquoting of URLs be known to be a performance bottleneck and you are fine with the encodings\nprovided, then by all means have fun using this library.\n",
   "dev_url": "https://github.com/blue-yonder/urlquote",
   "doc_url": "https://github.com/blue-yonder/urlquote/blob/v1.1.1/README.md",
   "home": "https://github.com/blue-yonder/urlquote",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Fast percent encoding / decoding for python."
  },
  "build": {
   "number": "2"
  },
  "extra": {
   "recipe-maintainers": [
    "pacman82",
    "xhochy",
    "pacman82",
    "xhochy",
    "pacman82",
    "xhochy",
    "pacman82",
    "xhochy",
    "pacman82",
    "xhochy",
    "pacman82",
    "xhochy"
   ]
  },
  "package": {
   "name": "urlquote",
   "version": "2.0.0"
  },
  "requirements": {
   "build": [
    "rust_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "rust_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "rust_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "rust_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "rust_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "rust_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "cffi",
    "maturin >=0.13,<0.14",
    "pip",
    "python",
    "cffi",
    "maturin >=0.13,<0.14",
    "pip",
    "python",
    "cffi",
    "maturin >=0.13,<0.14",
    "pip",
    "python",
    "cffi",
    "maturin >=0.13,<0.14",
    "pip",
    "python",
    "cffi",
    "maturin >=0.13,<0.14",
    "pip",
    "python",
    "cffi",
    "maturin >=0.13,<0.14",
    "pip"
   ],
   "run": [
    "python",
    "cffi",
    "python",
    "cffi",
    "python",
    "cffi",
    "python",
    "cffi",
    "python",
    "cffi",
    "python",
    "cffi"
   ]
  },
  "source": {
   "sha256": "03479d99bd2e3ebc7763770cde1276f05f8687c8b8356c83d4095def58754b1d",
   "url": "https://pypi.io/packages/source/u/urlquote/urlquote-2.0.0.tar.gz"
  },
  "test": {
   "imports": [
    "urlquote",
    "urlquote.quoting",
    "urlquote",
    "urlquote.quoting",
    "urlquote",
    "urlquote.quoting",
    "urlquote",
    "urlquote.quoting",
    "urlquote",
    "urlquote.quoting",
    "urlquote",
    "urlquote.quoting"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "rust_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cffi",
    "maturin",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cffi",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "description": "urlquote is not intended to be a replacement for urllib. urllib is part of the Python standard\nlibrary and should be your go-to choice to quote and unquote URLs. However, should quoting or\nunquoting of URLs be known to be a performance bottleneck and you are fine with the encodings\nprovided, then by all means have fun using this library.\n",
   "dev_url": "https://github.com/blue-yonder/urlquote",
   "doc_url": "https://github.com/blue-yonder/urlquote/blob/v1.1.1/README.md",
   "home": "https://github.com/blue-yonder/urlquote",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Fast percent encoding / decoding for python."
  },
  "build": {
   "number": "2"
  },
  "extra": {
   "recipe-maintainers": [
    "pacman82",
    "xhochy",
    "pacman82",
    "xhochy",
    "pacman82",
    "xhochy",
    "pacman82",
    "xhochy"
   ]
  },
  "package": {
   "name": "urlquote",
   "version": "2.0.0"
  },
  "requirements": {
   "build": [
    "rust_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "rust_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "rust_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "rust_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "cffi",
    "maturin >=0.13,<0.14",
    "pip",
    "python",
    "cffi",
    "maturin >=0.13,<0.14",
    "pip",
    "python",
    "cffi",
    "maturin >=0.13,<0.14",
    "pip",
    "python",
    "cffi",
    "maturin >=0.13,<0.14",
    "pip"
   ],
   "run": [
    "python",
    "cffi",
    "python",
    "cffi",
    "python",
    "cffi",
    "python",
    "cffi"
   ]
  },
  "source": {
   "sha256": "03479d99bd2e3ebc7763770cde1276f05f8687c8b8356c83d4095def58754b1d",
   "url": "https://pypi.io/packages/source/u/urlquote/urlquote-2.0.0.tar.gz"
  },
  "test": {
   "imports": [
    "urlquote",
    "urlquote.quoting",
    "urlquote",
    "urlquote.quoting",
    "urlquote",
    "urlquote.quoting",
    "urlquote",
    "urlquote.quoting"
   ]
  }
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "rust_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cffi",
    "maturin",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cffi",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "urlquote"
  ]
 },
 "parsing_error": "make_graph: 500",
 "platforms": [
  "linux_64",
  "linux_aarch64",
  "linux_ppc64le",
  "osx_64",
  "osx_arm64",
  "win_64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/urlquote.json"
 },
 "raw_meta_yaml": "{% set name = \"urlquote\" %}\n{% set version = \"2.0.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 03479d99bd2e3ebc7763770cde1276f05f8687c8b8356c83d4095def58754b1d\n\nbuild:\n  number: 2\n\nrequirements:\n  build:\n    - maturin >=0.13,<0.14                   # [build_platform != target_platform]\n    - cffi                                   # [build_platform != target_platform]\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n    - {{ compiler(\"rust\") }}\n    - {{ compiler(\"c\") }}\n    - {{ compiler(\"cxx\") }}\n  host:\n    - python\n    - cffi\n    - maturin >=0.13,<0.14\n    - pip\n  run:\n    - python\n    - cffi\n\ntest:\n  imports:\n    - urlquote\n    - urlquote.quoting\n\n\nabout:\n  home: https://github.com/blue-yonder/urlquote\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: Fast percent encoding / decoding for python.\n  description: |\n    urlquote is not intended to be a replacement for urllib. urllib is part of the Python standard\n    library and should be your go-to choice to quote and unquote URLs. However, should quoting or\n    unquoting of URLs be known to be a performance bottleneck and you are fine with the encodings\n    provided, then by all means have fun using this library.\n  doc_url: https://github.com/blue-yonder/urlquote/blob/v1.1.1/README.md\n  dev_url: https://github.com/blue-yonder/urlquote\n\nextra:\n  recipe-maintainers:\n    - pacman82\n    - xhochy\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "cffi",
   "cxx_compiler_stub",
   "maturin",
   "pip",
   "python",
   "rust_compiler_stub"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "rust_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cffi",
    "cxx_compiler_stub",
    "maturin",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cffi",
    "cxx_compiler_stub",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "rust_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cffi",
    "maturin >=0.13,<0.14",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cffi",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://pypi.io/packages/source/u/urlquote/urlquote-2.0.0.tar.gz",
 "version": "2.0.0",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/urlquote.json"
 },
 "win_64_meta_yaml": {
  "about": {
   "description": "urlquote is not intended to be a replacement for urllib. urllib is part of the Python standard\nlibrary and should be your go-to choice to quote and unquote URLs. However, should quoting or\nunquoting of URLs be known to be a performance bottleneck and you are fine with the encodings\nprovided, then by all means have fun using this library.\n",
   "dev_url": "https://github.com/blue-yonder/urlquote",
   "doc_url": "https://github.com/blue-yonder/urlquote/blob/v1.1.1/README.md",
   "home": "https://github.com/blue-yonder/urlquote",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Fast percent encoding / decoding for python."
  },
  "build": {
   "number": "2"
  },
  "extra": {
   "recipe-maintainers": [
    "pacman82",
    "xhochy",
    "pacman82",
    "xhochy",
    "pacman82",
    "xhochy",
    "pacman82",
    "xhochy",
    "pacman82",
    "xhochy",
    "pacman82",
    "xhochy"
   ]
  },
  "package": {
   "name": "urlquote",
   "version": "2.0.0"
  },
  "requirements": {
   "build": [
    "rust_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "rust_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "rust_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "rust_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "rust_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "rust_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "cffi",
    "maturin >=0.13,<0.14",
    "pip",
    "python",
    "cffi",
    "maturin >=0.13,<0.14",
    "pip",
    "python",
    "cffi",
    "maturin >=0.13,<0.14",
    "pip",
    "python",
    "cffi",
    "maturin >=0.13,<0.14",
    "pip",
    "python",
    "cffi",
    "maturin >=0.13,<0.14",
    "pip",
    "python",
    "cffi",
    "maturin >=0.13,<0.14",
    "pip"
   ],
   "run": [
    "python",
    "cffi",
    "python",
    "cffi",
    "python",
    "cffi",
    "python",
    "cffi",
    "python",
    "cffi",
    "python",
    "cffi"
   ]
  },
  "source": {
   "sha256": "03479d99bd2e3ebc7763770cde1276f05f8687c8b8356c83d4095def58754b1d",
   "url": "https://pypi.io/packages/source/u/urlquote/urlquote-2.0.0.tar.gz"
  },
  "test": {
   "imports": [
    "urlquote",
    "urlquote.quoting",
    "urlquote",
    "urlquote.quoting",
    "urlquote",
    "urlquote.quoting",
    "urlquote",
    "urlquote.quoting",
    "urlquote",
    "urlquote.quoting",
    "urlquote",
    "urlquote.quoting"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "rust_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cffi",
    "maturin",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cffi",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}