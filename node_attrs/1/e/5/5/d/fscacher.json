{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  },
  "conda_build": {
   "pkg_format": "2"
  },
  "conda_forge_output_validation": true,
  "github": {
   "branch_name": "main",
   "tooling_branch_name": "main"
  }
 },
 "feedstock_name": "fscacher",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "fscacher provides a cache & decorator for memoizing functions whose outputs\ndepend upon the contents of a file argument.\n",
   "dev_url": "https://github.com/con/fscacher",
   "doc_url": "https://pypi.org/project/fscacher/",
   "home": "https://github.com/con/fscacher",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE.txt",
   "summary": "Caching results of operations on heavy file trees"
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "PYTHON -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "jwodder",
    "yarikoptic"
   ]
  },
  "package": {
   "name": "fscacher",
   "version": "0.4.0"
  },
  "requirements": {
   "host": [
    "python >=3.7",
    "pip",
    "setuptools"
   ],
   "run": [
    "python >=3.7",
    "appdirs",
    "joblib"
   ]
  },
  "source": {
   "sha256": "3bd842711b836fb04e5f639944d29d637bb5de16399a926a865cffb2a7f27ce4",
   "url": "https://pypi.io/packages/source/f/fscacher/fscacher-0.4.0.tar.gz"
  },
  "test": {
   "commands": [
    "python -m pytest -vv --pyargs fscacher"
   ],
   "imports": [
    "fscacher",
    "fscacher.tests"
   ],
   "requires": [
    "pytest",
    "pytest-mock"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "appdirs",
    "joblib",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pytest",
    "pytest-mock"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "fscacher provides a cache & decorator for memoizing functions whose outputs\ndepend upon the contents of a file argument.\n",
   "dev_url": "https://github.com/con/fscacher",
   "doc_url": "https://pypi.org/project/fscacher/",
   "home": "https://github.com/con/fscacher",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE.txt",
   "summary": "Caching results of operations on heavy file trees"
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "PYTHON -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "jwodder",
    "yarikoptic"
   ]
  },
  "package": {
   "name": "fscacher",
   "version": "0.4.0"
  },
  "requirements": {
   "host": [
    "python >=3.7",
    "pip",
    "setuptools"
   ],
   "run": [
    "python >=3.7",
    "appdirs",
    "joblib"
   ]
  },
  "source": {
   "sha256": "3bd842711b836fb04e5f639944d29d637bb5de16399a926a865cffb2a7f27ce4",
   "url": "https://pypi.io/packages/source/f/fscacher/fscacher-0.4.0.tar.gz"
  },
  "test": {
   "commands": [
    "python -m pytest -vv --pyargs fscacher"
   ],
   "imports": [
    "fscacher",
    "fscacher.tests"
   ],
   "requires": [
    "pytest",
    "pytest-mock"
   ]
  }
 },
 "name": "fscacher",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "fscacher"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "linux_64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/fscacher.json"
 },
 "raw_meta_yaml": "{% set name = \"fscacher\" %}\n{% set version = \"0.4.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 3bd842711b836fb04e5f639944d29d637bb5de16399a926a865cffb2a7f27ce4\n\nbuild:\n  noarch: python\n  number: 0\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  host:\n    - python >=3.7\n    - pip\n    - setuptools\n  run:\n    - python >=3.7\n    - appdirs\n    - joblib\n\ntest:\n  requires:\n    - pytest\n    - pytest-mock\n  imports:\n    - fscacher\n    - fscacher.tests\n  commands:\n    - python -m pytest -vv --pyargs fscacher\n\nabout:\n  home: https://github.com/con/fscacher\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE.txt\n  summary: Caching results of operations on heavy file trees\n  description: |\n    fscacher provides a cache & decorator for memoizing functions whose outputs\n    depend upon the contents of a file argument.\n  dev_url: https://github.com/con/fscacher\n  doc_url: https://pypi.org/project/fscacher/\n\nextra:\n  recipe-maintainers:\n    - jwodder\n    - yarikoptic\n",
 "req": {
  "__set__": true,
  "elements": [
   "appdirs",
   "joblib",
   "pip",
   "python",
   "setuptools"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "appdirs",
    "joblib",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pytest",
    "pytest-mock"
   ]
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python >=3.7",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "appdirs",
    "joblib",
    "python >=3.7"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pytest",
    "pytest-mock"
   ]
  }
 },
 "url": "https://pypi.io/packages/source/f/fscacher/fscacher-0.4.0.tar.gz",
 "version": "0.4.0",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/fscacher.json"
 }
}