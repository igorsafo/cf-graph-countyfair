{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "conda_build": {
   "error_overlinking": true
  },
  "conda_forge_output_validation": true,
  "github": {
   "branch_name": "main",
   "tooling_branch_name": "main"
  }
 },
 "feedstock_name": "synopticpy",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "Load mesonet weather and environmental data from the Synoptic API into a\nPandas Dataframe.\n",
   "dev_url": "https://github.com/blaylockbk/SynopticPy",
   "doc_url": "https://SynopticPy.readthedocs.io/",
   "home": "https://github.com/blaylockbk/SynopticPy",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Get mesonet data from the Synoptic API."
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "PYTHON -m pip install . -vv",
   "script_env": [
    "PYTHONIOENCODING=utf8"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "blaylockbk"
   ]
  },
  "package": {
   "name": "synopticpy",
   "version": "2023.3.0"
  },
  "requirements": {
   "host": [
    "pip",
    "python >=3.8",
    "setuptools",
    "setuptools_scm"
   ],
   "run": [
    "numpy",
    "pandas",
    "python >=3.8",
    "requests",
    "toml",
    "matplotlib-base"
   ]
  },
  "source": {
   "sha256": "8e2bcdce432aa58f633e37893606401ca72495f9b49f8ce09aaa445aa64368e1",
   "url": "https://pypi.io/packages/source/S/SynopticPy/SynopticPy-2023.3.0.tar.gz"
  },
  "test": {
   "commands": [
    "pip check"
   ],
   "imports": null,
   "requires": [
    "pip"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "setuptools",
    "setuptools_scm"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "matplotlib-base",
    "numpy",
    "pandas",
    "python",
    "requests",
    "toml"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "Load mesonet weather and environmental data from the Synoptic API into a\nPandas Dataframe.\n",
   "dev_url": "https://github.com/blaylockbk/SynopticPy",
   "doc_url": "https://SynopticPy.readthedocs.io/",
   "home": "https://github.com/blaylockbk/SynopticPy",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Get mesonet data from the Synoptic API."
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "PYTHON -m pip install . -vv",
   "script_env": [
    "PYTHONIOENCODING=utf8"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "blaylockbk"
   ]
  },
  "package": {
   "name": "synopticpy",
   "version": "2023.3.0"
  },
  "requirements": {
   "host": [
    "pip",
    "python >=3.8",
    "setuptools",
    "setuptools_scm"
   ],
   "run": [
    "numpy",
    "pandas",
    "python >=3.8",
    "requests",
    "toml",
    "matplotlib-base"
   ]
  },
  "source": {
   "sha256": "8e2bcdce432aa58f633e37893606401ca72495f9b49f8ce09aaa445aa64368e1",
   "url": "https://pypi.io/packages/source/S/SynopticPy/SynopticPy-2023.3.0.tar.gz"
  },
  "test": {
   "commands": [
    "pip check"
   ],
   "imports": null,
   "requires": [
    "pip"
   ]
  }
 },
 "name": "synopticpy",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "synopticpy"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "linux_64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/synopticpy.json"
 },
 "raw_meta_yaml": "{% set name = \"SynopticPy\" %}\n{% set version = \"2023.3.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 8e2bcdce432aa58f633e37893606401ca72495f9b49f8ce09aaa445aa64368e1\n\nbuild:\n  number: 0\n  noarch: python\n  script: {{ PYTHON }} -m pip install . -vv\n  script_env:\n      - PYTHONIOENCODING=utf8\n\nrequirements:\n  host:\n    - pip\n    - python >=3.8\n    - setuptools\n    - setuptools_scm\n\n  run:\n    - numpy\n    - pandas\n    - python >=3.8\n    - requests\n    - toml\n    - matplotlib-base\n\ntest:\n  commands:\n    - pip check\n  imports:\n    #- synoptic.services  # Askes for User input, so don't do this.\n  requires:\n    - pip\n\nabout:\n  home: https://github.com/blaylockbk/SynopticPy\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: Get mesonet data from the Synoptic API.\n  description: |\n    Load mesonet weather and environmental data from the Synoptic API into a\n    Pandas Dataframe.\n  doc_url: https://SynopticPy.readthedocs.io/\n  dev_url: https://github.com/blaylockbk/SynopticPy\n\nextra:\n  recipe-maintainers:\n    - blaylockbk\n",
 "req": {
  "__set__": true,
  "elements": [
   "matplotlib-base",
   "numpy",
   "pandas",
   "pip",
   "python",
   "requests",
   "setuptools",
   "setuptools_scm",
   "toml"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "setuptools",
    "setuptools_scm"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "matplotlib-base",
    "numpy",
    "pandas",
    "python",
    "requests",
    "toml"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python >=3.8",
    "setuptools",
    "setuptools_scm"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "matplotlib-base",
    "numpy",
    "pandas",
    "python >=3.8",
    "requests",
    "toml"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "url": "https://pypi.io/packages/source/S/SynopticPy/SynopticPy-2023.3.0.tar.gz",
 "version": "2023.3.0",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/synopticpy.json"
 }
}