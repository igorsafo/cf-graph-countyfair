{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "gwdatafind",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "The DataFind service allows users to query for the location of\nGravitational-Wave Frame (GWF) files containing data from the current\ngravitational-wave detectors.\n",
   "dev_url": "https://git.ligo.org/gwdatafind/gwdatafind",
   "doc_url": "https://gwdatafind.readthedocs.io",
   "home": "https://gwdatafind.readthedocs.io",
   "license": "GPL-3.0-or-later",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "The client library for the LIGO Data Replicator (LDR) service."
  },
  "build": {
   "entry_points": [
    "gw_data_find = gwdatafind.__main__:main"
   ],
   "noarch": "python",
   "number": "0",
   "script": [
    "PYTHON -m pip install . -vv",
    "mkdir -p ${PREFIX}/man/man1",
    "argparse-manpage --description \"discover available GW data\" --function command_line --module gwdatafind.__main__ --output ${PREFIX}/man/man1/gw_data_find.1 --prog gw_data_find --project-name gwdatafind --version 1.2.0"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "duncanmmacleod"
   ]
  },
  "package": {
   "name": "gwdatafind",
   "version": "1.2.0"
  },
  "requirements": {
   "host": [
    "pip",
    "python >=3.6",
    "setuptools >=42",
    "argparse-manpage",
    "igwn-auth-utils >=0.3.1",
    "ligo-segments"
   ],
   "run": [
    "igwn-auth-utils >=0.3.1",
    "ligo-segments",
    "python >=3.6"
   ],
   "run_constrained": [
    "lscsoft-glue >=2.0.0"
   ]
  },
  "source": {
   "sha256": "8f74942e66cdb9a53030da29069110b3cb30afc2a034790957786028fb09f451",
   "url": "https://pypi.io/packages/source/g/gwdatafind/gwdatafind-1.2.0.tar.gz"
  },
  "test": {
   "commands": [
    "python -m pip check gwdatafind",
    "python -m pip show gwdatafind",
    "python -m pytest --pyargs gwdatafind",
    "python -m gwdatafind --help",
    "gw_data_find --help",
    "man -w gw_data_find",
    "man -Pcat gw_data_find"
   ],
   "requires": [
    "pip",
    "pytest",
    "requests-mock"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "argparse-manpage",
    "igwn-auth-utils",
    "ligo-segments",
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "igwn-auth-utils",
    "ligo-segments",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip",
    "pytest",
    "requests-mock"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "The DataFind service allows users to query for the location of\nGravitational-Wave Frame (GWF) files containing data from the current\ngravitational-wave detectors.\n",
   "dev_url": "https://git.ligo.org/gwdatafind/gwdatafind",
   "doc_url": "https://gwdatafind.readthedocs.io",
   "home": "https://gwdatafind.readthedocs.io",
   "license": "GPL-3.0-or-later",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "The client library for the LIGO Data Replicator (LDR) service."
  },
  "build": {
   "entry_points": [
    "gw_data_find = gwdatafind.__main__:main"
   ],
   "noarch": "python",
   "number": "0",
   "script": [
    "PYTHON -m pip install . -vv",
    "mkdir -p ${PREFIX}/man/man1",
    "argparse-manpage --description \"discover available GW data\" --function command_line --module gwdatafind.__main__ --output ${PREFIX}/man/man1/gw_data_find.1 --prog gw_data_find --project-name gwdatafind --version 1.2.0"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "duncanmmacleod"
   ]
  },
  "package": {
   "name": "gwdatafind",
   "version": "1.2.0"
  },
  "requirements": {
   "host": [
    "pip",
    "python >=3.6",
    "setuptools >=42",
    "argparse-manpage",
    "igwn-auth-utils >=0.3.1",
    "ligo-segments"
   ],
   "run": [
    "igwn-auth-utils >=0.3.1",
    "ligo-segments",
    "python >=3.6"
   ],
   "run_constrained": [
    "lscsoft-glue >=2.0.0"
   ]
  },
  "source": {
   "sha256": "8f74942e66cdb9a53030da29069110b3cb30afc2a034790957786028fb09f451",
   "url": "https://pypi.io/packages/source/g/gwdatafind/gwdatafind-1.2.0.tar.gz"
  },
  "test": {
   "commands": [
    "python -m pip check gwdatafind",
    "python -m pip show gwdatafind",
    "python -m pytest --pyargs gwdatafind",
    "python -m gwdatafind --help",
    "gw_data_find --help",
    "man -w gw_data_find",
    "man -Pcat gw_data_find"
   ],
   "requires": [
    "pip",
    "pytest",
    "requests-mock"
   ]
  }
 },
 "name": "gwdatafind",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "gwdatafind"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "linux_64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/gwdatafind.json"
 },
 "raw_meta_yaml": "{% set name = \"gwdatafind\" %}\n{% set version = \"1.2.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 8f74942e66cdb9a53030da29069110b3cb30afc2a034790957786028fb09f451\n\nbuild:\n  entry_points:\n    - gw_data_find = gwdatafind.__main__:main\n  noarch: python\n  number: 0\n  script:\n    - {{ PYTHON }} -m pip install . -vv\n    - mkdir -p ${PREFIX}/man/man1\n    - argparse-manpage\n          --description \"discover available GW data\"\n          --function command_line\n          --module gwdatafind.__main__\n          --output ${PREFIX}/man/man1/gw_data_find.1\n          --prog gw_data_find\n          --project-name {{ name }}\n          --version {{ version }}\n\nrequirements:\n  host:\n    - pip\n    - python >=3.6\n    - setuptools >=42\n    # for the man pages\n    - argparse-manpage\n    - igwn-auth-utils >=0.3.1\n    - ligo-segments\n  run:\n    - igwn-auth-utils >=0.3.1\n    - ligo-segments\n    - python >=3.6\n  run_constrained:\n    # pin to lscsoft-glue-2.0.0 to prevent file clobbering\n    - lscsoft-glue >=2.0.0\n\ntest:\n  requires:\n    - pip\n    - pytest\n    - requests-mock\n  commands:\n    # check metadata\n    - python -m pip check gwdatafind\n    - python -m pip show gwdatafind\n    # run test suite\n    - python -m pytest --pyargs gwdatafind\n    # check entry points\n    - python -m gwdatafind --help\n    - gw_data_find --help\n    # check man pages\n    - man -w gw_data_find\n    - man -Pcat gw_data_find\n\nabout:\n  home: https://gwdatafind.readthedocs.io\n  doc_url: https://gwdatafind.readthedocs.io\n  dev_url: https://git.ligo.org/gwdatafind/gwdatafind\n  license: GPL-3.0-or-later\n  license_file: LICENSE\n  license_family: GPL\n  summary: The client library for the LIGO Data Replicator (LDR) service.\n  description: |\n    The DataFind service allows users to query for the location of\n    Gravitational-Wave Frame (GWF) files containing data from the current\n    gravitational-wave detectors.\n\nextra:\n  recipe-maintainers:\n    - duncanmmacleod\n",
 "req": {
  "__set__": true,
  "elements": [
   "argparse-manpage",
   "igwn-auth-utils",
   "ligo-segments",
   "pip",
   "python",
   "setuptools"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "argparse-manpage",
    "igwn-auth-utils",
    "ligo-segments",
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "igwn-auth-utils",
    "ligo-segments",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip",
    "pytest",
    "requests-mock"
   ]
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "argparse-manpage",
    "igwn-auth-utils >=0.3.1",
    "ligo-segments",
    "pip",
    "python >=3.6",
    "setuptools >=42"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "igwn-auth-utils >=0.3.1",
    "ligo-segments",
    "python >=3.6"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip",
    "pytest",
    "requests-mock"
   ]
  }
 },
 "url": "https://pypi.io/packages/source/g/gwdatafind/gwdatafind-1.2.0.tar.gz",
 "version": "1.2.0",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/gwdatafind.json"
 }
}