{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  },
  "conda_build": {
   "pkg_format": "2"
  },
  "conda_forge_output_validation": true,
  "github": {
   "branch_name": "main",
   "tooling_branch_name": "main"
  },
  "test": "native_and_emulated"
 },
 "feedstock_name": "damask",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "At the core of DAMASK is a flexible and hierarchically structured\nmodel of material point behavior for the solution of elastoplastic\nboundary value problems along with damage and thermal physics. Its\nmain purpose is the simulation of crystal plasticity within a\nfinite-strain continuum mechanical framework.\n",
   "dev_url": "https://damask.mpie.de/development",
   "doc_url": "https://damask.mpie.de/documentation",
   "home": "https://damask.mpie.de/",
   "license": "AGPL-3.0-or-later",
   "license_file": [
    "LICENSE",
    "COPYING",
    "LICENSE",
    "COPYING"
   ],
   "summary": "Duesseldorf Advanced Material Simulation Kit"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "jan-janssen",
    "MarDiehl",
    "yangbai90",
    "jan-janssen",
    "MarDiehl",
    "yangbai90"
   ]
  },
  "outputs": [
   {
    "build": null,
    "name": "damask-grid",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "libgomp",
      "cmake",
      "make"
     ],
     "host": [
      "mpich",
      "petsc",
      "petsc * real_*",
      "hdf5",
      "hdf5 * mpi_mpich_*",
      "libfyaml",
      "fftw",
      "fftw * mpi_mpich_*"
     ],
     "run": [
      "hypre",
      "petsc",
      "hdf5"
     ],
     "run_constrained": [
      "damask ==3.0.0a8"
     ]
    },
    "script": "build_grid.sh",
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl=tcp,self",
      "export OMP_NUM_THREADS=2",
      "if [ $CONDA_BUILD_CROSS_COMPILATION != '1' ]; then mpirun -np 2 DAMASK_grid --help; fi"
     ]
    }
   },
   {
    "build": null,
    "name": "damask-mesh",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "libgomp",
      "cmake",
      "make"
     ],
     "host": [
      "mpich",
      "petsc",
      "petsc * real_*",
      "hdf5",
      "hdf5 * mpi_mpich_*",
      "libfyaml"
     ],
     "run": [
      "hypre",
      "petsc",
      "hdf5"
     ],
     "run_constrained": [
      "damask ==3.0.0a8"
     ]
    },
    "script": "build_mesh.sh",
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
      "export OMP_NUM_THREADS=2",
      "if [ $CONDA_BUILD_CROSS_COMPILATION != '1' ]; then mpirun -np 2 DAMASK_mesh --help; fi"
     ]
    }
   },
   {
    "build": {
     "script": "python -m pip install ./python --no-deps -vv"
    },
    "name": "python-damask",
    "requirements": {
     "build": [
      "cdt_stub",
      "cdt_stub",
      "cdt_stub",
      "cdt_stub",
      "cdt_stub",
      "cdt_stub"
     ],
     "host": [
      "xorg-libxfixes",
      "python",
      "pip"
     ],
     "run": [
      "python",
      "pandas",
      "scipy",
      "h5py >=3.3.0",
      "vtk",
      "matplotlib-base",
      "pyyaml"
     ],
     "run_constrained": [
      "damask ==3.0.0a8"
     ]
    },
    "test": {
     "imports": [
      "damask"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo DAMASK metapackage"
     ]
    },
    "name": "damask",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "mpich",
      "damask-mesh",
      "damask-grid",
      "python-damask"
     ]
    },
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
      "export OMPI_MCA_rmaps_base_oversubscribe=yes",
      "if [ $CONDA_BUILD_CROSS_COMPILATION != '1' ]; then DAMASK_grid -h; DAMASK_mesh -h; fi"
     ],
     "imports": [
      "damask"
     ]
    }
   },
   {
    "build": null,
    "name": "damask-grid",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "libgomp",
      "cmake",
      "make"
     ],
     "host": [
      "mpich",
      "petsc",
      "petsc * real_*",
      "hdf5",
      "hdf5 * mpi_mpich_*",
      "libfyaml",
      "fftw",
      "fftw * mpi_mpich_*"
     ],
     "run": [
      "hypre",
      "petsc",
      "hdf5"
     ],
     "run_constrained": [
      "damask ==3.0.0a8"
     ]
    },
    "script": "build_grid.sh",
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl=tcp,self",
      "export OMP_NUM_THREADS=2",
      "if [ $CONDA_BUILD_CROSS_COMPILATION != '1' ]; then mpirun -np 2 DAMASK_grid --help; fi"
     ]
    }
   },
   {
    "build": null,
    "name": "damask-mesh",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "libgomp",
      "cmake",
      "make"
     ],
     "host": [
      "mpich",
      "petsc",
      "petsc * real_*",
      "hdf5",
      "hdf5 * mpi_mpich_*",
      "libfyaml"
     ],
     "run": [
      "hypre",
      "petsc",
      "hdf5"
     ],
     "run_constrained": [
      "damask ==3.0.0a8"
     ]
    },
    "script": "build_mesh.sh",
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
      "export OMP_NUM_THREADS=2",
      "if [ $CONDA_BUILD_CROSS_COMPILATION != '1' ]; then mpirun -np 2 DAMASK_mesh --help; fi"
     ]
    }
   },
   {
    "build": {
     "script": "python -m pip install ./python --no-deps -vv"
    },
    "name": "python-damask",
    "requirements": {
     "build": [
      "cdt_stub",
      "cdt_stub",
      "cdt_stub",
      "cdt_stub",
      "cdt_stub",
      "cdt_stub"
     ],
     "host": [
      "xorg-libxfixes",
      "python",
      "pip"
     ],
     "run": [
      "python",
      "pandas",
      "scipy",
      "h5py >=3.3.0",
      "vtk",
      "matplotlib-base",
      "pyyaml"
     ],
     "run_constrained": [
      "damask ==3.0.0a8"
     ]
    },
    "test": {
     "imports": [
      "damask"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo DAMASK metapackage"
     ]
    },
    "name": "damask",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "mpich",
      "damask-mesh",
      "damask-grid",
      "python-damask"
     ]
    },
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
      "export OMPI_MCA_rmaps_base_oversubscribe=yes",
      "if [ $CONDA_BUILD_CROSS_COMPILATION != '1' ]; then DAMASK_grid -h; DAMASK_mesh -h; fi"
     ],
     "imports": [
      "damask"
     ]
    }
   }
  ],
  "package": {
   "name": "damask-pkgs",
   "version": "3.0.0a8"
  },
  "source": {
   "patches": [
    "HDF5-Fortran.patch",
    "HDF5-Fortran.patch"
   ],
   "sha256": "f62c38123213d1c1fe2eb8910b0ffbdc1cac56273c2520f3b64a553363190b9d",
   "url": "https://damask.mpie.de/download/damask-3.0.0-alpha8.tar.xz"
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cdt_stub",
    "cmake",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "libgomp",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "fftw",
    "hdf5",
    "libfyaml",
    "mpich",
    "petsc",
    "pip",
    "python",
    "xorg-libxfixes"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "damask-grid",
    "damask-mesh",
    "h5py",
    "hdf5",
    "hypre",
    "matplotlib-base",
    "mpich",
    "pandas",
    "petsc",
    "python",
    "python-damask",
    "pyyaml",
    "scipy",
    "vtk"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "At the core of DAMASK is a flexible and hierarchically structured\nmodel of material point behavior for the solution of elastoplastic\nboundary value problems along with damage and thermal physics. Its\nmain purpose is the simulation of crystal plasticity within a\nfinite-strain continuum mechanical framework.\n",
   "dev_url": "https://damask.mpie.de/development",
   "doc_url": "https://damask.mpie.de/documentation",
   "home": "https://damask.mpie.de/",
   "license": "AGPL-3.0-or-later",
   "license_file": [
    "LICENSE",
    "COPYING",
    "LICENSE",
    "COPYING",
    "LICENSE",
    "COPYING",
    "LICENSE",
    "COPYING",
    "LICENSE",
    "COPYING",
    "LICENSE",
    "COPYING",
    "LICENSE",
    "COPYING",
    "LICENSE",
    "COPYING",
    "LICENSE",
    "COPYING",
    "LICENSE",
    "COPYING"
   ],
   "summary": "Duesseldorf Advanced Material Simulation Kit"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "jan-janssen",
    "MarDiehl",
    "yangbai90",
    "jan-janssen",
    "MarDiehl",
    "yangbai90",
    "jan-janssen",
    "MarDiehl",
    "yangbai90",
    "jan-janssen",
    "MarDiehl",
    "yangbai90",
    "jan-janssen",
    "MarDiehl",
    "yangbai90",
    "jan-janssen",
    "MarDiehl",
    "yangbai90",
    "jan-janssen",
    "MarDiehl",
    "yangbai90",
    "jan-janssen",
    "MarDiehl",
    "yangbai90",
    "jan-janssen",
    "MarDiehl",
    "yangbai90",
    "jan-janssen",
    "MarDiehl",
    "yangbai90"
   ]
  },
  "outputs": [
   {
    "build": null,
    "name": "damask-grid",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "libgomp",
      "cmake",
      "make"
     ],
     "host": [
      "mpich",
      "petsc",
      "petsc * real_*",
      "hdf5",
      "hdf5 * mpi_mpich_*",
      "libfyaml",
      "fftw",
      "fftw * mpi_mpich_*"
     ],
     "run": [
      "hypre",
      "petsc",
      "hdf5"
     ],
     "run_constrained": [
      "damask ==3.0.0a8"
     ]
    },
    "script": "build_grid.sh",
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl=tcp,self",
      "export OMP_NUM_THREADS=2",
      "if [ $CONDA_BUILD_CROSS_COMPILATION != '1' ]; then mpirun -np 2 DAMASK_grid --help; fi"
     ]
    }
   },
   {
    "build": null,
    "name": "damask-mesh",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "libgomp",
      "cmake",
      "make"
     ],
     "host": [
      "mpich",
      "petsc",
      "petsc * real_*",
      "hdf5",
      "hdf5 * mpi_mpich_*",
      "libfyaml"
     ],
     "run": [
      "hypre",
      "petsc",
      "hdf5"
     ],
     "run_constrained": [
      "damask ==3.0.0a8"
     ]
    },
    "script": "build_mesh.sh",
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
      "export OMP_NUM_THREADS=2",
      "if [ $CONDA_BUILD_CROSS_COMPILATION != '1' ]; then mpirun -np 2 DAMASK_mesh --help; fi"
     ]
    }
   },
   {
    "build": {
     "script": "python -m pip install ./python --no-deps -vv"
    },
    "name": "python-damask",
    "requirements": {
     "build": [
      "cdt_stub",
      "cdt_stub",
      "cdt_stub",
      "cdt_stub",
      "cdt_stub",
      "cdt_stub"
     ],
     "host": [
      "xorg-libxfixes",
      "python",
      "pip"
     ],
     "run": [
      "python",
      "pandas",
      "scipy",
      "h5py >=3.3.0",
      "vtk",
      "matplotlib-base",
      "pyyaml"
     ],
     "run_constrained": [
      "damask ==3.0.0a8"
     ]
    },
    "test": {
     "imports": [
      "damask"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo DAMASK metapackage"
     ]
    },
    "name": "damask",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "mpich",
      "damask-mesh",
      "damask-grid",
      "python-damask"
     ]
    },
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
      "export OMPI_MCA_rmaps_base_oversubscribe=yes",
      "if [ $CONDA_BUILD_CROSS_COMPILATION != '1' ]; then DAMASK_grid -h; DAMASK_mesh -h; fi"
     ],
     "imports": [
      "damask"
     ]
    }
   },
   {
    "build": null,
    "name": "damask-grid",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "libgomp",
      "cmake",
      "make"
     ],
     "host": [
      "mpich",
      "petsc",
      "petsc * real_*",
      "hdf5",
      "hdf5 * mpi_mpich_*",
      "libfyaml",
      "fftw",
      "fftw * mpi_mpich_*"
     ],
     "run": [
      "hypre",
      "petsc",
      "hdf5"
     ],
     "run_constrained": [
      "damask ==3.0.0a8"
     ]
    },
    "script": "build_grid.sh",
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl=tcp,self",
      "export OMP_NUM_THREADS=2",
      "if [ $CONDA_BUILD_CROSS_COMPILATION != '1' ]; then mpirun -np 2 DAMASK_grid --help; fi"
     ]
    }
   },
   {
    "build": null,
    "name": "damask-mesh",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "libgomp",
      "cmake",
      "make"
     ],
     "host": [
      "mpich",
      "petsc",
      "petsc * real_*",
      "hdf5",
      "hdf5 * mpi_mpich_*",
      "libfyaml"
     ],
     "run": [
      "hypre",
      "petsc",
      "hdf5"
     ],
     "run_constrained": [
      "damask ==3.0.0a8"
     ]
    },
    "script": "build_mesh.sh",
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
      "export OMP_NUM_THREADS=2",
      "if [ $CONDA_BUILD_CROSS_COMPILATION != '1' ]; then mpirun -np 2 DAMASK_mesh --help; fi"
     ]
    }
   },
   {
    "build": {
     "script": "python -m pip install ./python --no-deps -vv"
    },
    "name": "python-damask",
    "requirements": {
     "build": [
      "cdt_stub",
      "cdt_stub",
      "cdt_stub",
      "cdt_stub",
      "cdt_stub",
      "cdt_stub"
     ],
     "host": [
      "xorg-libxfixes",
      "python",
      "pip"
     ],
     "run": [
      "python",
      "pandas",
      "scipy",
      "h5py >=3.3.0",
      "vtk",
      "matplotlib-base",
      "pyyaml"
     ],
     "run_constrained": [
      "damask ==3.0.0a8"
     ]
    },
    "test": {
     "imports": [
      "damask"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo DAMASK metapackage"
     ]
    },
    "name": "damask",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "mpich",
      "damask-mesh",
      "damask-grid",
      "python-damask"
     ]
    },
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
      "export OMPI_MCA_rmaps_base_oversubscribe=yes",
      "if [ $CONDA_BUILD_CROSS_COMPILATION != '1' ]; then DAMASK_grid -h; DAMASK_mesh -h; fi"
     ],
     "imports": [
      "damask"
     ]
    }
   },
   {
    "build": null,
    "name": "damask-grid",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "llvm-openmp",
      "pkg-config",
      "cmake",
      "make"
     ],
     "host": [
      "mpich",
      "petsc",
      "petsc * real_*",
      "hdf5",
      "hdf5 * mpi_mpich_*",
      "libfyaml",
      "fftw",
      "fftw * mpi_mpich_*"
     ],
     "run": [
      "hypre",
      "petsc",
      "hdf5"
     ],
     "run_constrained": [
      "damask ==3.0.0a8"
     ]
    },
    "script": "build_grid.sh",
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl=tcp,self",
      "export OMP_NUM_THREADS=2",
      "if [ $CONDA_BUILD_CROSS_COMPILATION != '1' ]; then mpirun -np 2 DAMASK_grid --help; fi"
     ]
    }
   },
   {
    "build": null,
    "name": "damask-mesh",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "llvm-openmp",
      "pkg-config",
      "cmake",
      "make"
     ],
     "host": [
      "mpich",
      "petsc",
      "petsc * real_*",
      "hdf5",
      "hdf5 * mpi_mpich_*",
      "libfyaml"
     ],
     "run": [
      "hypre",
      "petsc",
      "hdf5"
     ],
     "run_constrained": [
      "damask ==3.0.0a8"
     ]
    },
    "script": "build_mesh.sh",
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
      "export OMP_NUM_THREADS=2",
      "if [ $CONDA_BUILD_CROSS_COMPILATION != '1' ]; then mpirun -np 2 DAMASK_mesh --help; fi"
     ]
    }
   },
   {
    "build": {
     "script": "python -m pip install ./python --no-deps -vv"
    },
    "name": "python-damask",
    "requirements": {
     "build": [],
     "host": [
      "python",
      "pip"
     ],
     "run": [
      "python",
      "pandas",
      "scipy",
      "h5py >=3.3.0",
      "vtk",
      "matplotlib-base",
      "pyyaml"
     ],
     "run_constrained": [
      "damask ==3.0.0a8"
     ]
    },
    "test": {
     "imports": [
      "damask"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo DAMASK metapackage"
     ]
    },
    "name": "damask",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "mpich",
      "damask-mesh",
      "damask-grid",
      "python-damask"
     ]
    },
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
      "export OMPI_MCA_rmaps_base_oversubscribe=yes",
      "if [ $CONDA_BUILD_CROSS_COMPILATION != '1' ]; then DAMASK_grid -h; DAMASK_mesh -h; fi"
     ],
     "imports": [
      "damask"
     ]
    }
   },
   {
    "build": null,
    "name": "damask-grid",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "llvm-openmp",
      "pkg-config",
      "cmake",
      "make"
     ],
     "host": [
      "mpich",
      "petsc",
      "petsc * real_*",
      "hdf5",
      "hdf5 * mpi_mpich_*",
      "libfyaml",
      "fftw",
      "fftw * mpi_mpich_*"
     ],
     "run": [
      "hypre",
      "petsc",
      "hdf5"
     ],
     "run_constrained": [
      "damask ==3.0.0a8"
     ]
    },
    "script": "build_grid.sh",
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl=tcp,self",
      "export OMP_NUM_THREADS=2",
      "if [ $CONDA_BUILD_CROSS_COMPILATION != '1' ]; then mpirun -np 2 DAMASK_grid --help; fi"
     ]
    }
   },
   {
    "build": null,
    "name": "damask-mesh",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "llvm-openmp",
      "pkg-config",
      "cmake",
      "make"
     ],
     "host": [
      "mpich",
      "petsc",
      "petsc * real_*",
      "hdf5",
      "hdf5 * mpi_mpich_*",
      "libfyaml"
     ],
     "run": [
      "hypre",
      "petsc",
      "hdf5"
     ],
     "run_constrained": [
      "damask ==3.0.0a8"
     ]
    },
    "script": "build_mesh.sh",
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
      "export OMP_NUM_THREADS=2",
      "if [ $CONDA_BUILD_CROSS_COMPILATION != '1' ]; then mpirun -np 2 DAMASK_mesh --help; fi"
     ]
    }
   },
   {
    "build": {
     "script": "python -m pip install ./python --no-deps -vv"
    },
    "name": "python-damask",
    "requirements": {
     "build": [],
     "host": [
      "python",
      "pip"
     ],
     "run": [
      "python",
      "pandas",
      "scipy",
      "h5py >=3.3.0",
      "vtk",
      "matplotlib-base",
      "pyyaml"
     ],
     "run_constrained": [
      "damask ==3.0.0a8"
     ]
    },
    "test": {
     "imports": [
      "damask"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo DAMASK metapackage"
     ]
    },
    "name": "damask",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "mpich",
      "damask-mesh",
      "damask-grid",
      "python-damask"
     ]
    },
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
      "export OMPI_MCA_rmaps_base_oversubscribe=yes",
      "if [ $CONDA_BUILD_CROSS_COMPILATION != '1' ]; then DAMASK_grid -h; DAMASK_mesh -h; fi"
     ],
     "imports": [
      "damask"
     ]
    }
   },
   {
    "build": null,
    "name": "damask-grid",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "llvm-openmp",
      "pkg-config",
      "cmake",
      "make"
     ],
     "host": [
      "mpich",
      "petsc",
      "petsc * real_*",
      "hdf5",
      "hdf5 * mpi_mpich_*",
      "libfyaml",
      "fftw",
      "fftw * mpi_mpich_*"
     ],
     "run": [
      "hypre",
      "petsc",
      "hdf5"
     ],
     "run_constrained": [
      "damask ==3.0.0a8"
     ]
    },
    "script": "build_grid.sh",
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl=tcp,self",
      "export OMP_NUM_THREADS=2",
      "if [ $CONDA_BUILD_CROSS_COMPILATION != '1' ]; then mpirun -np 2 DAMASK_grid --help; fi"
     ]
    }
   },
   {
    "build": null,
    "name": "damask-mesh",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "llvm-openmp",
      "pkg-config",
      "cmake",
      "make"
     ],
     "host": [
      "mpich",
      "petsc",
      "petsc * real_*",
      "hdf5",
      "hdf5 * mpi_mpich_*",
      "libfyaml"
     ],
     "run": [
      "hypre",
      "petsc",
      "hdf5"
     ],
     "run_constrained": [
      "damask ==3.0.0a8"
     ]
    },
    "script": "build_mesh.sh",
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
      "export OMP_NUM_THREADS=2",
      "if [ $CONDA_BUILD_CROSS_COMPILATION != '1' ]; then mpirun -np 2 DAMASK_mesh --help; fi"
     ]
    }
   },
   {
    "build": {
     "script": "python -m pip install ./python --no-deps -vv"
    },
    "name": "python-damask",
    "requirements": {
     "build": [],
     "host": [
      "python",
      "pip"
     ],
     "run": [
      "python",
      "pandas",
      "scipy",
      "h5py >=3.3.0",
      "vtk",
      "matplotlib-base",
      "pyyaml"
     ],
     "run_constrained": [
      "damask ==3.0.0a8"
     ]
    },
    "test": {
     "imports": [
      "damask"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo DAMASK metapackage"
     ]
    },
    "name": "damask",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "mpich",
      "damask-mesh",
      "damask-grid",
      "python-damask"
     ]
    },
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
      "export OMPI_MCA_rmaps_base_oversubscribe=yes",
      "if [ $CONDA_BUILD_CROSS_COMPILATION != '1' ]; then DAMASK_grid -h; DAMASK_mesh -h; fi"
     ],
     "imports": [
      "damask"
     ]
    }
   },
   {
    "build": null,
    "name": "damask-grid",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "llvm-openmp",
      "pkg-config",
      "cmake",
      "make"
     ],
     "host": [
      "mpich",
      "petsc",
      "petsc * real_*",
      "hdf5",
      "hdf5 * mpi_mpich_*",
      "libfyaml",
      "fftw",
      "fftw * mpi_mpich_*"
     ],
     "run": [
      "hypre",
      "petsc",
      "hdf5"
     ],
     "run_constrained": [
      "damask ==3.0.0a8"
     ]
    },
    "script": "build_grid.sh",
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl=tcp,self",
      "export OMP_NUM_THREADS=2",
      "if [ $CONDA_BUILD_CROSS_COMPILATION != '1' ]; then mpirun -np 2 DAMASK_grid --help; fi"
     ]
    }
   },
   {
    "build": null,
    "name": "damask-mesh",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "llvm-openmp",
      "pkg-config",
      "cmake",
      "make"
     ],
     "host": [
      "mpich",
      "petsc",
      "petsc * real_*",
      "hdf5",
      "hdf5 * mpi_mpich_*",
      "libfyaml"
     ],
     "run": [
      "hypre",
      "petsc",
      "hdf5"
     ],
     "run_constrained": [
      "damask ==3.0.0a8"
     ]
    },
    "script": "build_mesh.sh",
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
      "export OMP_NUM_THREADS=2",
      "if [ $CONDA_BUILD_CROSS_COMPILATION != '1' ]; then mpirun -np 2 DAMASK_mesh --help; fi"
     ]
    }
   },
   {
    "build": {
     "script": "python -m pip install ./python --no-deps -vv"
    },
    "name": "python-damask",
    "requirements": {
     "build": [],
     "host": [
      "python",
      "pip"
     ],
     "run": [
      "python",
      "pandas",
      "scipy",
      "h5py >=3.3.0",
      "vtk",
      "matplotlib-base",
      "pyyaml"
     ],
     "run_constrained": [
      "damask ==3.0.0a8"
     ]
    },
    "test": {
     "imports": [
      "damask"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo DAMASK metapackage"
     ]
    },
    "name": "damask",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "mpich",
      "damask-mesh",
      "damask-grid",
      "python-damask"
     ]
    },
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
      "export OMPI_MCA_rmaps_base_oversubscribe=yes",
      "if [ $CONDA_BUILD_CROSS_COMPILATION != '1' ]; then DAMASK_grid -h; DAMASK_mesh -h; fi"
     ],
     "imports": [
      "damask"
     ]
    }
   },
   {
    "build": {
     "skip": true
    },
    "name": "damask-grid",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "mpich",
      "petsc",
      "petsc * real_*",
      "hdf5",
      "hdf5 * mpi_mpich_*",
      "libfyaml",
      "fftw",
      "fftw * mpi_mpich_*"
     ],
     "run": [
      "hypre",
      "petsc",
      "hdf5"
     ],
     "run_constrained": [
      "damask ==3.0.0a8"
     ]
    },
    "script": "build_grid.sh",
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl=tcp,self",
      "export OMP_NUM_THREADS=2",
      "if [ $CONDA_BUILD_CROSS_COMPILATION != '1' ]; then mpirun -np 2 DAMASK_grid --help; fi"
     ]
    }
   },
   {
    "build": {
     "skip": true
    },
    "name": "damask-mesh",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "mpich",
      "petsc",
      "petsc * real_*",
      "hdf5",
      "hdf5 * mpi_mpich_*",
      "libfyaml"
     ],
     "run": [
      "hypre",
      "petsc",
      "hdf5"
     ],
     "run_constrained": [
      "damask ==3.0.0a8"
     ]
    },
    "script": "build_mesh.sh",
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
      "export OMP_NUM_THREADS=2",
      "if [ $CONDA_BUILD_CROSS_COMPILATION != '1' ]; then mpirun -np 2 DAMASK_mesh --help; fi"
     ]
    }
   },
   {
    "build": {
     "script": "python -m pip install ./python --no-deps -vv"
    },
    "name": "python-damask",
    "requirements": {
     "build": [],
     "host": [
      "python",
      "pip"
     ],
     "run": [
      "python",
      "pandas",
      "scipy",
      "h5py >=3.3.0",
      "vtk",
      "matplotlib-base",
      "pyyaml"
     ],
     "run_constrained": [
      "damask ==3.0.0a8"
     ]
    },
    "test": {
     "imports": [
      "damask"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo DAMASK metapackage"
     ],
     "skip": true
    },
    "name": "damask",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "mpich",
      "damask-mesh",
      "damask-grid",
      "python-damask"
     ]
    },
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
      "export OMPI_MCA_rmaps_base_oversubscribe=yes",
      "if [ $CONDA_BUILD_CROSS_COMPILATION != '1' ]; then DAMASK_grid -h; DAMASK_mesh -h; fi"
     ],
     "imports": [
      "damask"
     ]
    }
   },
   {
    "build": {
     "skip": true
    },
    "name": "damask-grid",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "mpich",
      "petsc",
      "petsc * real_*",
      "hdf5",
      "hdf5 * mpi_mpich_*",
      "libfyaml",
      "fftw",
      "fftw * mpi_mpich_*"
     ],
     "run": [
      "hypre",
      "petsc",
      "hdf5"
     ],
     "run_constrained": [
      "damask ==3.0.0a8"
     ]
    },
    "script": "build_grid.sh",
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl=tcp,self",
      "export OMP_NUM_THREADS=2",
      "if [ $CONDA_BUILD_CROSS_COMPILATION != '1' ]; then mpirun -np 2 DAMASK_grid --help; fi"
     ]
    }
   },
   {
    "build": {
     "skip": true
    },
    "name": "damask-mesh",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "mpich",
      "petsc",
      "petsc * real_*",
      "hdf5",
      "hdf5 * mpi_mpich_*",
      "libfyaml"
     ],
     "run": [
      "hypre",
      "petsc",
      "hdf5"
     ],
     "run_constrained": [
      "damask ==3.0.0a8"
     ]
    },
    "script": "build_mesh.sh",
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
      "export OMP_NUM_THREADS=2",
      "if [ $CONDA_BUILD_CROSS_COMPILATION != '1' ]; then mpirun -np 2 DAMASK_mesh --help; fi"
     ]
    }
   },
   {
    "build": {
     "script": "python -m pip install ./python --no-deps -vv"
    },
    "name": "python-damask",
    "requirements": {
     "build": [],
     "host": [
      "python",
      "pip"
     ],
     "run": [
      "python",
      "pandas",
      "scipy",
      "h5py >=3.3.0",
      "vtk",
      "matplotlib-base",
      "pyyaml"
     ],
     "run_constrained": [
      "damask ==3.0.0a8"
     ]
    },
    "test": {
     "imports": [
      "damask"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo DAMASK metapackage"
     ],
     "skip": true
    },
    "name": "damask",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "mpich",
      "damask-mesh",
      "damask-grid",
      "python-damask"
     ]
    },
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
      "export OMPI_MCA_rmaps_base_oversubscribe=yes",
      "if [ $CONDA_BUILD_CROSS_COMPILATION != '1' ]; then DAMASK_grid -h; DAMASK_mesh -h; fi"
     ],
     "imports": [
      "damask"
     ]
    }
   },
   {
    "build": {
     "skip": true
    },
    "name": "damask-grid",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "mpich",
      "petsc",
      "petsc * real_*",
      "hdf5",
      "hdf5 * mpi_mpich_*",
      "libfyaml",
      "fftw",
      "fftw * mpi_mpich_*"
     ],
     "run": [
      "hypre",
      "petsc",
      "hdf5"
     ],
     "run_constrained": [
      "damask ==3.0.0a8"
     ]
    },
    "script": "build_grid.sh",
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl=tcp,self",
      "export OMP_NUM_THREADS=2",
      "if [ $CONDA_BUILD_CROSS_COMPILATION != '1' ]; then mpirun -np 2 DAMASK_grid --help; fi"
     ]
    }
   },
   {
    "build": {
     "skip": true
    },
    "name": "damask-mesh",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "mpich",
      "petsc",
      "petsc * real_*",
      "hdf5",
      "hdf5 * mpi_mpich_*",
      "libfyaml"
     ],
     "run": [
      "hypre",
      "petsc",
      "hdf5"
     ],
     "run_constrained": [
      "damask ==3.0.0a8"
     ]
    },
    "script": "build_mesh.sh",
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
      "export OMP_NUM_THREADS=2",
      "if [ $CONDA_BUILD_CROSS_COMPILATION != '1' ]; then mpirun -np 2 DAMASK_mesh --help; fi"
     ]
    }
   },
   {
    "build": {
     "script": "python -m pip install ./python --no-deps -vv"
    },
    "name": "python-damask",
    "requirements": {
     "build": [],
     "host": [
      "python",
      "pip"
     ],
     "run": [
      "python",
      "pandas",
      "scipy",
      "h5py >=3.3.0",
      "vtk",
      "matplotlib-base",
      "pyyaml"
     ],
     "run_constrained": [
      "damask ==3.0.0a8"
     ]
    },
    "test": {
     "imports": [
      "damask"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo DAMASK metapackage"
     ],
     "skip": true
    },
    "name": "damask",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "mpich",
      "damask-mesh",
      "damask-grid",
      "python-damask"
     ]
    },
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
      "export OMPI_MCA_rmaps_base_oversubscribe=yes",
      "if [ $CONDA_BUILD_CROSS_COMPILATION != '1' ]; then DAMASK_grid -h; DAMASK_mesh -h; fi"
     ],
     "imports": [
      "damask"
     ]
    }
   },
   {
    "build": {
     "skip": true
    },
    "name": "damask-grid",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "mpich",
      "petsc",
      "petsc * real_*",
      "hdf5",
      "hdf5 * mpi_mpich_*",
      "libfyaml",
      "fftw",
      "fftw * mpi_mpich_*"
     ],
     "run": [
      "hypre",
      "petsc",
      "hdf5"
     ],
     "run_constrained": [
      "damask ==3.0.0a8"
     ]
    },
    "script": "build_grid.sh",
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl=tcp,self",
      "export OMP_NUM_THREADS=2",
      "if [ $CONDA_BUILD_CROSS_COMPILATION != '1' ]; then mpirun -np 2 DAMASK_grid --help; fi"
     ]
    }
   },
   {
    "build": {
     "skip": true
    },
    "name": "damask-mesh",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "mpich",
      "petsc",
      "petsc * real_*",
      "hdf5",
      "hdf5 * mpi_mpich_*",
      "libfyaml"
     ],
     "run": [
      "hypre",
      "petsc",
      "hdf5"
     ],
     "run_constrained": [
      "damask ==3.0.0a8"
     ]
    },
    "script": "build_mesh.sh",
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
      "export OMP_NUM_THREADS=2",
      "if [ $CONDA_BUILD_CROSS_COMPILATION != '1' ]; then mpirun -np 2 DAMASK_mesh --help; fi"
     ]
    }
   },
   {
    "build": {
     "script": "python -m pip install ./python --no-deps -vv"
    },
    "name": "python-damask",
    "requirements": {
     "build": [],
     "host": [
      "python",
      "pip"
     ],
     "run": [
      "python",
      "pandas",
      "scipy",
      "h5py >=3.3.0",
      "vtk",
      "matplotlib-base",
      "pyyaml"
     ],
     "run_constrained": [
      "damask ==3.0.0a8"
     ]
    },
    "test": {
     "imports": [
      "damask"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo DAMASK metapackage"
     ],
     "skip": true
    },
    "name": "damask",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "mpich",
      "damask-mesh",
      "damask-grid",
      "python-damask"
     ]
    },
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
      "export OMPI_MCA_rmaps_base_oversubscribe=yes",
      "if [ $CONDA_BUILD_CROSS_COMPILATION != '1' ]; then DAMASK_grid -h; DAMASK_mesh -h; fi"
     ],
     "imports": [
      "damask"
     ]
    }
   }
  ],
  "package": {
   "name": "damask-pkgs",
   "version": "3.0.0a8"
  },
  "source": {
   "patches": [
    "HDF5-Fortran.patch",
    "HDF5-Fortran.patch",
    "HDF5-Fortran.patch",
    "HDF5-Fortran.patch",
    "HDF5-Fortran.patch",
    "HDF5-Fortran.patch",
    "HDF5-Fortran.patch",
    "HDF5-Fortran.patch",
    "HDF5-Fortran.patch",
    "HDF5-Fortran.patch"
   ],
   "sha256": "f62c38123213d1c1fe2eb8910b0ffbdc1cac56273c2520f3b64a553363190b9d",
   "url": "https://damask.mpie.de/download/damask-3.0.0-alpha8.tar.xz"
  }
 },
 "name": "damask-pkgs",
 "osx_64_meta_yaml": {
  "about": {
   "description": "At the core of DAMASK is a flexible and hierarchically structured\nmodel of material point behavior for the solution of elastoplastic\nboundary value problems along with damage and thermal physics. Its\nmain purpose is the simulation of crystal plasticity within a\nfinite-strain continuum mechanical framework.\n",
   "dev_url": "https://damask.mpie.de/development",
   "doc_url": "https://damask.mpie.de/documentation",
   "home": "https://damask.mpie.de/",
   "license": "AGPL-3.0-or-later",
   "license_file": [
    "LICENSE",
    "COPYING",
    "LICENSE",
    "COPYING"
   ],
   "summary": "Duesseldorf Advanced Material Simulation Kit"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "jan-janssen",
    "MarDiehl",
    "yangbai90",
    "jan-janssen",
    "MarDiehl",
    "yangbai90"
   ]
  },
  "outputs": [
   {
    "build": null,
    "name": "damask-grid",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "llvm-openmp",
      "pkg-config",
      "cmake",
      "make"
     ],
     "host": [
      "mpich",
      "petsc",
      "petsc * real_*",
      "hdf5",
      "hdf5 * mpi_mpich_*",
      "libfyaml",
      "fftw",
      "fftw * mpi_mpich_*"
     ],
     "run": [
      "hypre",
      "petsc",
      "hdf5"
     ],
     "run_constrained": [
      "damask ==3.0.0a8"
     ]
    },
    "script": "build_grid.sh",
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl=tcp,self",
      "export OMP_NUM_THREADS=2",
      "if [ $CONDA_BUILD_CROSS_COMPILATION != '1' ]; then mpirun -np 2 DAMASK_grid --help; fi"
     ]
    }
   },
   {
    "build": null,
    "name": "damask-mesh",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "llvm-openmp",
      "pkg-config",
      "cmake",
      "make"
     ],
     "host": [
      "mpich",
      "petsc",
      "petsc * real_*",
      "hdf5",
      "hdf5 * mpi_mpich_*",
      "libfyaml"
     ],
     "run": [
      "hypre",
      "petsc",
      "hdf5"
     ],
     "run_constrained": [
      "damask ==3.0.0a8"
     ]
    },
    "script": "build_mesh.sh",
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
      "export OMP_NUM_THREADS=2",
      "if [ $CONDA_BUILD_CROSS_COMPILATION != '1' ]; then mpirun -np 2 DAMASK_mesh --help; fi"
     ]
    }
   },
   {
    "build": {
     "script": "python -m pip install ./python --no-deps -vv"
    },
    "name": "python-damask",
    "requirements": {
     "build": [],
     "host": [
      "python",
      "pip"
     ],
     "run": [
      "python",
      "pandas",
      "scipy",
      "h5py >=3.3.0",
      "vtk",
      "matplotlib-base",
      "pyyaml"
     ],
     "run_constrained": [
      "damask ==3.0.0a8"
     ]
    },
    "test": {
     "imports": [
      "damask"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo DAMASK metapackage"
     ]
    },
    "name": "damask",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "mpich",
      "damask-mesh",
      "damask-grid",
      "python-damask"
     ]
    },
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
      "export OMPI_MCA_rmaps_base_oversubscribe=yes",
      "if [ $CONDA_BUILD_CROSS_COMPILATION != '1' ]; then DAMASK_grid -h; DAMASK_mesh -h; fi"
     ],
     "imports": [
      "damask"
     ]
    }
   },
   {
    "build": null,
    "name": "damask-grid",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "llvm-openmp",
      "pkg-config",
      "cmake",
      "make"
     ],
     "host": [
      "mpich",
      "petsc",
      "petsc * real_*",
      "hdf5",
      "hdf5 * mpi_mpich_*",
      "libfyaml",
      "fftw",
      "fftw * mpi_mpich_*"
     ],
     "run": [
      "hypre",
      "petsc",
      "hdf5"
     ],
     "run_constrained": [
      "damask ==3.0.0a8"
     ]
    },
    "script": "build_grid.sh",
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl=tcp,self",
      "export OMP_NUM_THREADS=2",
      "if [ $CONDA_BUILD_CROSS_COMPILATION != '1' ]; then mpirun -np 2 DAMASK_grid --help; fi"
     ]
    }
   },
   {
    "build": null,
    "name": "damask-mesh",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "llvm-openmp",
      "pkg-config",
      "cmake",
      "make"
     ],
     "host": [
      "mpich",
      "petsc",
      "petsc * real_*",
      "hdf5",
      "hdf5 * mpi_mpich_*",
      "libfyaml"
     ],
     "run": [
      "hypre",
      "petsc",
      "hdf5"
     ],
     "run_constrained": [
      "damask ==3.0.0a8"
     ]
    },
    "script": "build_mesh.sh",
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
      "export OMP_NUM_THREADS=2",
      "if [ $CONDA_BUILD_CROSS_COMPILATION != '1' ]; then mpirun -np 2 DAMASK_mesh --help; fi"
     ]
    }
   },
   {
    "build": {
     "script": "python -m pip install ./python --no-deps -vv"
    },
    "name": "python-damask",
    "requirements": {
     "build": [],
     "host": [
      "python",
      "pip"
     ],
     "run": [
      "python",
      "pandas",
      "scipy",
      "h5py >=3.3.0",
      "vtk",
      "matplotlib-base",
      "pyyaml"
     ],
     "run_constrained": [
      "damask ==3.0.0a8"
     ]
    },
    "test": {
     "imports": [
      "damask"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo DAMASK metapackage"
     ]
    },
    "name": "damask",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "mpich",
      "damask-mesh",
      "damask-grid",
      "python-damask"
     ]
    },
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
      "export OMPI_MCA_rmaps_base_oversubscribe=yes",
      "if [ $CONDA_BUILD_CROSS_COMPILATION != '1' ]; then DAMASK_grid -h; DAMASK_mesh -h; fi"
     ],
     "imports": [
      "damask"
     ]
    }
   }
  ],
  "package": {
   "name": "damask-pkgs",
   "version": "3.0.0a8"
  },
  "source": {
   "patches": [
    "HDF5-Fortran.patch",
    "HDF5-Fortran.patch"
   ],
   "sha256": "f62c38123213d1c1fe2eb8910b0ffbdc1cac56273c2520f3b64a553363190b9d",
   "url": "https://damask.mpie.de/download/damask-3.0.0-alpha8.tar.xz"
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "llvm-openmp",
    "make",
    "pkg-config"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "fftw",
    "hdf5",
    "libfyaml",
    "mpich",
    "petsc",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "damask-grid",
    "damask-mesh",
    "h5py",
    "hdf5",
    "hypre",
    "matplotlib-base",
    "mpich",
    "pandas",
    "petsc",
    "python",
    "python-damask",
    "pyyaml",
    "scipy",
    "vtk"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "description": "At the core of DAMASK is a flexible and hierarchically structured\nmodel of material point behavior for the solution of elastoplastic\nboundary value problems along with damage and thermal physics. Its\nmain purpose is the simulation of crystal plasticity within a\nfinite-strain continuum mechanical framework.\n",
   "dev_url": "https://damask.mpie.de/development",
   "doc_url": "https://damask.mpie.de/documentation",
   "home": "https://damask.mpie.de/",
   "license": "AGPL-3.0-or-later",
   "license_file": [
    "LICENSE",
    "COPYING",
    "LICENSE",
    "COPYING"
   ],
   "summary": "Duesseldorf Advanced Material Simulation Kit"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "jan-janssen",
    "MarDiehl",
    "yangbai90",
    "jan-janssen",
    "MarDiehl",
    "yangbai90"
   ]
  },
  "outputs": [
   {
    "build": null,
    "name": "damask-grid",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "llvm-openmp",
      "pkg-config",
      "cmake",
      "make"
     ],
     "host": [
      "mpich",
      "petsc",
      "petsc * real_*",
      "hdf5",
      "hdf5 * mpi_mpich_*",
      "libfyaml",
      "fftw",
      "fftw * mpi_mpich_*"
     ],
     "run": [
      "hypre",
      "petsc",
      "hdf5"
     ],
     "run_constrained": [
      "damask ==3.0.0a8"
     ]
    },
    "script": "build_grid.sh",
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl=tcp,self",
      "export OMP_NUM_THREADS=2",
      "if [ $CONDA_BUILD_CROSS_COMPILATION != '1' ]; then mpirun -np 2 DAMASK_grid --help; fi"
     ]
    }
   },
   {
    "build": null,
    "name": "damask-mesh",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "llvm-openmp",
      "pkg-config",
      "cmake",
      "make"
     ],
     "host": [
      "mpich",
      "petsc",
      "petsc * real_*",
      "hdf5",
      "hdf5 * mpi_mpich_*",
      "libfyaml"
     ],
     "run": [
      "hypre",
      "petsc",
      "hdf5"
     ],
     "run_constrained": [
      "damask ==3.0.0a8"
     ]
    },
    "script": "build_mesh.sh",
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
      "export OMP_NUM_THREADS=2",
      "if [ $CONDA_BUILD_CROSS_COMPILATION != '1' ]; then mpirun -np 2 DAMASK_mesh --help; fi"
     ]
    }
   },
   {
    "build": {
     "script": "python -m pip install ./python --no-deps -vv"
    },
    "name": "python-damask",
    "requirements": {
     "build": [],
     "host": [
      "python",
      "pip"
     ],
     "run": [
      "python",
      "pandas",
      "scipy",
      "h5py >=3.3.0",
      "vtk",
      "matplotlib-base",
      "pyyaml"
     ],
     "run_constrained": [
      "damask ==3.0.0a8"
     ]
    },
    "test": {
     "imports": [
      "damask"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo DAMASK metapackage"
     ]
    },
    "name": "damask",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "mpich",
      "damask-mesh",
      "damask-grid",
      "python-damask"
     ]
    },
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
      "export OMPI_MCA_rmaps_base_oversubscribe=yes",
      "if [ $CONDA_BUILD_CROSS_COMPILATION != '1' ]; then DAMASK_grid -h; DAMASK_mesh -h; fi"
     ],
     "imports": [
      "damask"
     ]
    }
   },
   {
    "build": null,
    "name": "damask-grid",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "llvm-openmp",
      "pkg-config",
      "cmake",
      "make"
     ],
     "host": [
      "mpich",
      "petsc",
      "petsc * real_*",
      "hdf5",
      "hdf5 * mpi_mpich_*",
      "libfyaml",
      "fftw",
      "fftw * mpi_mpich_*"
     ],
     "run": [
      "hypre",
      "petsc",
      "hdf5"
     ],
     "run_constrained": [
      "damask ==3.0.0a8"
     ]
    },
    "script": "build_grid.sh",
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl=tcp,self",
      "export OMP_NUM_THREADS=2",
      "if [ $CONDA_BUILD_CROSS_COMPILATION != '1' ]; then mpirun -np 2 DAMASK_grid --help; fi"
     ]
    }
   },
   {
    "build": null,
    "name": "damask-mesh",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "llvm-openmp",
      "pkg-config",
      "cmake",
      "make"
     ],
     "host": [
      "mpich",
      "petsc",
      "petsc * real_*",
      "hdf5",
      "hdf5 * mpi_mpich_*",
      "libfyaml"
     ],
     "run": [
      "hypre",
      "petsc",
      "hdf5"
     ],
     "run_constrained": [
      "damask ==3.0.0a8"
     ]
    },
    "script": "build_mesh.sh",
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
      "export OMP_NUM_THREADS=2",
      "if [ $CONDA_BUILD_CROSS_COMPILATION != '1' ]; then mpirun -np 2 DAMASK_mesh --help; fi"
     ]
    }
   },
   {
    "build": {
     "script": "python -m pip install ./python --no-deps -vv"
    },
    "name": "python-damask",
    "requirements": {
     "build": [],
     "host": [
      "python",
      "pip"
     ],
     "run": [
      "python",
      "pandas",
      "scipy",
      "h5py >=3.3.0",
      "vtk",
      "matplotlib-base",
      "pyyaml"
     ],
     "run_constrained": [
      "damask ==3.0.0a8"
     ]
    },
    "test": {
     "imports": [
      "damask"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo DAMASK metapackage"
     ]
    },
    "name": "damask",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "mpich",
      "damask-mesh",
      "damask-grid",
      "python-damask"
     ]
    },
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
      "export OMPI_MCA_rmaps_base_oversubscribe=yes",
      "if [ $CONDA_BUILD_CROSS_COMPILATION != '1' ]; then DAMASK_grid -h; DAMASK_mesh -h; fi"
     ],
     "imports": [
      "damask"
     ]
    }
   }
  ],
  "package": {
   "name": "damask-pkgs",
   "version": "3.0.0a8"
  },
  "source": {
   "patches": [
    "HDF5-Fortran.patch",
    "HDF5-Fortran.patch"
   ],
   "sha256": "f62c38123213d1c1fe2eb8910b0ffbdc1cac56273c2520f3b64a553363190b9d",
   "url": "https://damask.mpie.de/download/damask-3.0.0-alpha8.tar.xz"
  }
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "llvm-openmp",
    "make",
    "pkg-config"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "fftw",
    "hdf5",
    "libfyaml",
    "mpich",
    "petsc",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "damask-grid",
    "damask-mesh",
    "h5py",
    "hdf5",
    "hypre",
    "matplotlib-base",
    "mpich",
    "pandas",
    "petsc",
    "python",
    "python-damask",
    "pyyaml",
    "scipy",
    "vtk"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "damask",
   "damask-grid",
   "damask-mesh",
   "python-damask"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "linux_64",
  "osx_64",
  "osx_arm64",
  "win_64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/damask.json"
 },
 "raw_meta_yaml": "{% set build_number = 0 %}\n{% set version = \"3.0.0-alpha8\" %}\n{% set version_python = \"3.0.0a8\" %}\n{% set sha256 = \"f62c38123213d1c1fe2eb8910b0ffbdc1cac56273c2520f3b64a553363190b9d\" %}\n\n# win: no PETSc, only python\n\npackage:\n  name: damask-pkgs\n  version: {{ version_python }}\n\nsource:\n  url: https://damask.mpie.de/download/damask-{{ version }}.tar.xz\n  sha256: {{ sha256 }}\n  patches:\n    - HDF5-Fortran.patch\n\nbuild:\n  number: {{ build_number }}\n\noutputs:\n  - name: damask-grid\n    script: build_grid.sh\n    build:\n      skip: true  # [win]\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - {{ compiler('fortran') }}\n        - libgomp  # [linux]\n        - llvm-openmp  # [osx]\n        - pkg-config  # [osx]\n        - cmake\n        - make\n        - openmpi  # [mpi == 'openmpi' and build_platform != target_platform]\n      host:\n        - {{ mpi }}\n        - petsc\n        - petsc * real_*\n        - hdf5\n        - hdf5 * mpi_{{ mpi }}_*\n        - libfyaml\n        - fftw\n        - fftw * mpi_{{ mpi }}_*\n      run:\n        - hypre\n        - {{ pin_compatible('petsc', max_pin='x.x') }}\n        - {{ pin_compatible('hdf5', max_pin='x.x') }}\n      run_constrained:\n        - damask =={{ version_python }}\n    test:\n      commands:\n        - export OMPI_MCA_plm=isolated\n        - export OMPI_MCA_btl=tcp,self\n        - export OMP_NUM_THREADS=2\n        - if [ $CONDA_BUILD_CROSS_COMPILATION != '1' ]; then mpirun -np 2 DAMASK_grid --help; fi\n\n  - name: damask-mesh\n    script: build_mesh.sh\n    build:\n      skip: true  # [win]\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - {{ compiler('fortran') }}\n        - libgomp  # [linux]\n        - llvm-openmp  # [osx]\n        - pkg-config  # [osx]\n        - cmake\n        - make\n        - openmpi  # [mpi == 'openmpi' and build_platform != target_platform]\n      host:\n        - {{ mpi }}\n        - petsc\n        - petsc * real_*\n        - hdf5\n        - hdf5 * mpi_{{ mpi }}_*\n        - libfyaml\n      run:\n        - hypre\n        - {{ pin_compatible('petsc', max_pin='x.x') }}\n        - {{ pin_compatible('hdf5', max_pin='x.x') }}\n      run_constrained:\n        - damask =={{ version_python }}\n    test:\n      commands:\n        - export OMPI_MCA_plm=isolated\n        - export OMPI_MCA_btl_vader_single_copy_mechanism=none\n        - export OMP_NUM_THREADS=2\n        - if [ $CONDA_BUILD_CROSS_COMPILATION != '1' ]; then mpirun -np 2 DAMASK_mesh --help; fi\n\n  - name: python-damask\n    build:\n      script: python -m pip install ./python --no-deps -vv\n      skip: true  # [py<38]\n    requirements:\n      build:\n        - {{ cdt('mesa-libgl-devel') }}  # [linux]\n        - {{ cdt('mesa-dri-drivers') }}  # [linux]\n        - {{ cdt('libselinux') }}  # [linux]\n        - {{ cdt('libxdamage') }}  # [linux]\n        - {{ cdt('libxxf86vm') }}  # [linux]\n        - {{ cdt('libxext') }}     # [linux]\n        - python                                 # [build_platform != target_platform]\n        - pip                                    # [build_platform != target_platform]\n        - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n      host:\n        - xorg-libxfixes  # [linux]\n        - python\n        - pip\n      run:\n        - python\n        - pandas\n        - scipy\n        - h5py >=3.3.0\n        - vtk\n        - matplotlib-base\n        - pyyaml\n      run_constrained:\n        - damask =={{ version_python }}\n    test:\n      imports:\n        - damask\n\n  - name: damask\n    build:\n      script:\n        - \"echo DAMASK metapackage\"\n      skip: true  # [py<38 or win]\n    requirements:\n      host:\n        - python\n      run:\n        - python\n        - {{ mpi }}\n        - {{ pin_subpackage('damask-mesh', exact=True) }}\n        - {{ pin_subpackage('damask-grid', exact=True) }}\n        - {{ pin_subpackage('python-damask', exact=True) }}\n    test:\n      commands:\n        - export OMPI_MCA_plm=isolated\n        - export OMPI_MCA_btl_vader_single_copy_mechanism=none\n        - export OMPI_MCA_rmaps_base_oversubscribe=yes\n        - if [ $CONDA_BUILD_CROSS_COMPILATION != '1' ]; then DAMASK_grid -h; DAMASK_mesh -h; fi\n      imports:\n        - damask\n\nabout:\n  home: https://damask.mpie.de/\n  license: AGPL-3.0-or-later\n  license_file:\n    - LICENSE\n    - COPYING\n  summary: 'Duesseldorf Advanced Material Simulation Kit'\n\n  description: |\n    At the core of DAMASK is a flexible and hierarchically structured\n    model of material point behavior for the solution of elastoplastic\n    boundary value problems along with damage and thermal physics. Its\n    main purpose is the simulation of crystal plasticity within a\n    finite-strain continuum mechanical framework.\n  doc_url: https://damask.mpie.de/documentation\n  dev_url: https://damask.mpie.de/development\n\nextra:\n  recipe-maintainers:\n    - jan-janssen\n    - MarDiehl\n    - yangbai90\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "cdt_stub",
   "cmake",
   "cxx_compiler_stub",
   "damask-grid",
   "damask-mesh",
   "fftw",
   "fortran_compiler_stub",
   "h5py",
   "hdf5",
   "hypre",
   "libfyaml",
   "libgomp",
   "llvm-openmp",
   "make",
   "matplotlib-base",
   "mpich",
   "pandas",
   "petsc",
   "pip",
   "pkg-config",
   "python",
   "python-damask",
   "pyyaml",
   "scipy",
   "vtk",
   "xorg-libxfixes"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cdt_stub",
    "cmake",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "libgomp",
    "llvm-openmp",
    "make",
    "pkg-config"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "ctng-compilers",
    "cxx_compiler_stub",
    "fftw",
    "fortran_compiler_stub",
    "hdf5",
    "libfyaml",
    "mpich",
    "openmp",
    "petsc",
    "pip",
    "python",
    "xorg-libxfixes"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "ctng-compilers",
    "cxx_compiler_stub",
    "damask-grid",
    "damask-mesh",
    "fortran_compiler_stub",
    "h5py",
    "hdf5",
    "hypre",
    "matplotlib-base",
    "mpich",
    "openmp",
    "pandas",
    "petsc",
    "python",
    "python-damask",
    "pyyaml",
    "scipy",
    "vtk"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cdt_stub",
    "cmake",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "libgomp",
    "llvm-openmp",
    "make",
    "pkg-config"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "fftw",
    "fftw * mpi_mpich_*",
    "hdf5",
    "hdf5 * mpi_mpich_*",
    "libfyaml",
    "mpich",
    "petsc",
    "petsc * real_*",
    "pip",
    "python",
    "xorg-libxfixes"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "damask-grid",
    "damask-mesh",
    "h5py >=3.3.0",
    "hdf5",
    "hypre",
    "matplotlib-base",
    "mpich",
    "pandas",
    "petsc",
    "python",
    "python-damask",
    "pyyaml",
    "scipy",
    "vtk"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://damask.mpie.de/download/damask-3.0.0-alpha8.tar.xz",
 "version": "3.0.0a8",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/damask.json"
 },
 "win_64_meta_yaml": {
  "about": {
   "description": "At the core of DAMASK is a flexible and hierarchically structured\nmodel of material point behavior for the solution of elastoplastic\nboundary value problems along with damage and thermal physics. Its\nmain purpose is the simulation of crystal plasticity within a\nfinite-strain continuum mechanical framework.\n",
   "dev_url": "https://damask.mpie.de/development",
   "doc_url": "https://damask.mpie.de/documentation",
   "home": "https://damask.mpie.de/",
   "license": "AGPL-3.0-or-later",
   "license_file": [
    "LICENSE",
    "COPYING",
    "LICENSE",
    "COPYING",
    "LICENSE",
    "COPYING",
    "LICENSE",
    "COPYING"
   ],
   "summary": "Duesseldorf Advanced Material Simulation Kit"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "jan-janssen",
    "MarDiehl",
    "yangbai90",
    "jan-janssen",
    "MarDiehl",
    "yangbai90",
    "jan-janssen",
    "MarDiehl",
    "yangbai90",
    "jan-janssen",
    "MarDiehl",
    "yangbai90"
   ]
  },
  "outputs": [
   {
    "build": {
     "skip": true
    },
    "name": "damask-grid",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "mpich",
      "petsc",
      "petsc * real_*",
      "hdf5",
      "hdf5 * mpi_mpich_*",
      "libfyaml",
      "fftw",
      "fftw * mpi_mpich_*"
     ],
     "run": [
      "hypre",
      "petsc",
      "hdf5"
     ],
     "run_constrained": [
      "damask ==3.0.0a8"
     ]
    },
    "script": "build_grid.sh",
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl=tcp,self",
      "export OMP_NUM_THREADS=2",
      "if [ $CONDA_BUILD_CROSS_COMPILATION != '1' ]; then mpirun -np 2 DAMASK_grid --help; fi"
     ]
    }
   },
   {
    "build": {
     "skip": true
    },
    "name": "damask-mesh",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "mpich",
      "petsc",
      "petsc * real_*",
      "hdf5",
      "hdf5 * mpi_mpich_*",
      "libfyaml"
     ],
     "run": [
      "hypre",
      "petsc",
      "hdf5"
     ],
     "run_constrained": [
      "damask ==3.0.0a8"
     ]
    },
    "script": "build_mesh.sh",
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
      "export OMP_NUM_THREADS=2",
      "if [ $CONDA_BUILD_CROSS_COMPILATION != '1' ]; then mpirun -np 2 DAMASK_mesh --help; fi"
     ]
    }
   },
   {
    "build": {
     "script": "python -m pip install ./python --no-deps -vv"
    },
    "name": "python-damask",
    "requirements": {
     "build": [],
     "host": [
      "python",
      "pip"
     ],
     "run": [
      "python",
      "pandas",
      "scipy",
      "h5py >=3.3.0",
      "vtk",
      "matplotlib-base",
      "pyyaml"
     ],
     "run_constrained": [
      "damask ==3.0.0a8"
     ]
    },
    "test": {
     "imports": [
      "damask"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo DAMASK metapackage"
     ],
     "skip": true
    },
    "name": "damask",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "mpich",
      "damask-mesh",
      "damask-grid",
      "python-damask"
     ]
    },
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
      "export OMPI_MCA_rmaps_base_oversubscribe=yes",
      "if [ $CONDA_BUILD_CROSS_COMPILATION != '1' ]; then DAMASK_grid -h; DAMASK_mesh -h; fi"
     ],
     "imports": [
      "damask"
     ]
    }
   },
   {
    "build": {
     "skip": true
    },
    "name": "damask-grid",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "mpich",
      "petsc",
      "petsc * real_*",
      "hdf5",
      "hdf5 * mpi_mpich_*",
      "libfyaml",
      "fftw",
      "fftw * mpi_mpich_*"
     ],
     "run": [
      "hypre",
      "petsc",
      "hdf5"
     ],
     "run_constrained": [
      "damask ==3.0.0a8"
     ]
    },
    "script": "build_grid.sh",
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl=tcp,self",
      "export OMP_NUM_THREADS=2",
      "if [ $CONDA_BUILD_CROSS_COMPILATION != '1' ]; then mpirun -np 2 DAMASK_grid --help; fi"
     ]
    }
   },
   {
    "build": {
     "skip": true
    },
    "name": "damask-mesh",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "mpich",
      "petsc",
      "petsc * real_*",
      "hdf5",
      "hdf5 * mpi_mpich_*",
      "libfyaml"
     ],
     "run": [
      "hypre",
      "petsc",
      "hdf5"
     ],
     "run_constrained": [
      "damask ==3.0.0a8"
     ]
    },
    "script": "build_mesh.sh",
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
      "export OMP_NUM_THREADS=2",
      "if [ $CONDA_BUILD_CROSS_COMPILATION != '1' ]; then mpirun -np 2 DAMASK_mesh --help; fi"
     ]
    }
   },
   {
    "build": {
     "script": "python -m pip install ./python --no-deps -vv"
    },
    "name": "python-damask",
    "requirements": {
     "build": [],
     "host": [
      "python",
      "pip"
     ],
     "run": [
      "python",
      "pandas",
      "scipy",
      "h5py >=3.3.0",
      "vtk",
      "matplotlib-base",
      "pyyaml"
     ],
     "run_constrained": [
      "damask ==3.0.0a8"
     ]
    },
    "test": {
     "imports": [
      "damask"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo DAMASK metapackage"
     ],
     "skip": true
    },
    "name": "damask",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "mpich",
      "damask-mesh",
      "damask-grid",
      "python-damask"
     ]
    },
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
      "export OMPI_MCA_rmaps_base_oversubscribe=yes",
      "if [ $CONDA_BUILD_CROSS_COMPILATION != '1' ]; then DAMASK_grid -h; DAMASK_mesh -h; fi"
     ],
     "imports": [
      "damask"
     ]
    }
   },
   {
    "build": {
     "skip": true
    },
    "name": "damask-grid",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "mpich",
      "petsc",
      "petsc * real_*",
      "hdf5",
      "hdf5 * mpi_mpich_*",
      "libfyaml",
      "fftw",
      "fftw * mpi_mpich_*"
     ],
     "run": [
      "hypre",
      "petsc",
      "hdf5"
     ],
     "run_constrained": [
      "damask ==3.0.0a8"
     ]
    },
    "script": "build_grid.sh",
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl=tcp,self",
      "export OMP_NUM_THREADS=2",
      "if [ $CONDA_BUILD_CROSS_COMPILATION != '1' ]; then mpirun -np 2 DAMASK_grid --help; fi"
     ]
    }
   },
   {
    "build": {
     "skip": true
    },
    "name": "damask-mesh",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "mpich",
      "petsc",
      "petsc * real_*",
      "hdf5",
      "hdf5 * mpi_mpich_*",
      "libfyaml"
     ],
     "run": [
      "hypre",
      "petsc",
      "hdf5"
     ],
     "run_constrained": [
      "damask ==3.0.0a8"
     ]
    },
    "script": "build_mesh.sh",
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
      "export OMP_NUM_THREADS=2",
      "if [ $CONDA_BUILD_CROSS_COMPILATION != '1' ]; then mpirun -np 2 DAMASK_mesh --help; fi"
     ]
    }
   },
   {
    "build": {
     "script": "python -m pip install ./python --no-deps -vv"
    },
    "name": "python-damask",
    "requirements": {
     "build": [],
     "host": [
      "python",
      "pip"
     ],
     "run": [
      "python",
      "pandas",
      "scipy",
      "h5py >=3.3.0",
      "vtk",
      "matplotlib-base",
      "pyyaml"
     ],
     "run_constrained": [
      "damask ==3.0.0a8"
     ]
    },
    "test": {
     "imports": [
      "damask"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo DAMASK metapackage"
     ],
     "skip": true
    },
    "name": "damask",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "mpich",
      "damask-mesh",
      "damask-grid",
      "python-damask"
     ]
    },
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
      "export OMPI_MCA_rmaps_base_oversubscribe=yes",
      "if [ $CONDA_BUILD_CROSS_COMPILATION != '1' ]; then DAMASK_grid -h; DAMASK_mesh -h; fi"
     ],
     "imports": [
      "damask"
     ]
    }
   },
   {
    "build": {
     "skip": true
    },
    "name": "damask-grid",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "mpich",
      "petsc",
      "petsc * real_*",
      "hdf5",
      "hdf5 * mpi_mpich_*",
      "libfyaml",
      "fftw",
      "fftw * mpi_mpich_*"
     ],
     "run": [
      "hypre",
      "petsc",
      "hdf5"
     ],
     "run_constrained": [
      "damask ==3.0.0a8"
     ]
    },
    "script": "build_grid.sh",
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl=tcp,self",
      "export OMP_NUM_THREADS=2",
      "if [ $CONDA_BUILD_CROSS_COMPILATION != '1' ]; then mpirun -np 2 DAMASK_grid --help; fi"
     ]
    }
   },
   {
    "build": {
     "skip": true
    },
    "name": "damask-mesh",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "mpich",
      "petsc",
      "petsc * real_*",
      "hdf5",
      "hdf5 * mpi_mpich_*",
      "libfyaml"
     ],
     "run": [
      "hypre",
      "petsc",
      "hdf5"
     ],
     "run_constrained": [
      "damask ==3.0.0a8"
     ]
    },
    "script": "build_mesh.sh",
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
      "export OMP_NUM_THREADS=2",
      "if [ $CONDA_BUILD_CROSS_COMPILATION != '1' ]; then mpirun -np 2 DAMASK_mesh --help; fi"
     ]
    }
   },
   {
    "build": {
     "script": "python -m pip install ./python --no-deps -vv"
    },
    "name": "python-damask",
    "requirements": {
     "build": [],
     "host": [
      "python",
      "pip"
     ],
     "run": [
      "python",
      "pandas",
      "scipy",
      "h5py >=3.3.0",
      "vtk",
      "matplotlib-base",
      "pyyaml"
     ],
     "run_constrained": [
      "damask ==3.0.0a8"
     ]
    },
    "test": {
     "imports": [
      "damask"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo DAMASK metapackage"
     ],
     "skip": true
    },
    "name": "damask",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "mpich",
      "damask-mesh",
      "damask-grid",
      "python-damask"
     ]
    },
    "test": {
     "commands": [
      "export OMPI_MCA_plm=isolated",
      "export OMPI_MCA_btl_vader_single_copy_mechanism=none",
      "export OMPI_MCA_rmaps_base_oversubscribe=yes",
      "if [ $CONDA_BUILD_CROSS_COMPILATION != '1' ]; then DAMASK_grid -h; DAMASK_mesh -h; fi"
     ],
     "imports": [
      "damask"
     ]
    }
   }
  ],
  "package": {
   "name": "damask-pkgs",
   "version": "3.0.0a8"
  },
  "source": {
   "patches": [
    "HDF5-Fortran.patch",
    "HDF5-Fortran.patch",
    "HDF5-Fortran.patch",
    "HDF5-Fortran.patch"
   ],
   "sha256": "f62c38123213d1c1fe2eb8910b0ffbdc1cac56273c2520f3b64a553363190b9d",
   "url": "https://damask.mpie.de/download/damask-3.0.0-alpha8.tar.xz"
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "fftw",
    "hdf5",
    "libfyaml",
    "mpich",
    "petsc",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "damask-grid",
    "damask-mesh",
    "h5py",
    "hdf5",
    "hypre",
    "matplotlib-base",
    "mpich",
    "pandas",
    "petsc",
    "python",
    "python-damask",
    "pyyaml",
    "scipy",
    "vtk"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}