{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "linux_aarch64": "linux_64",
   "osx_arm64": "osx_64"
  }
 },
 "feedstock_name": "torchvision",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/pytorch/vision",
   "doc_url": "http://pytorch.org/docs/master/torchvision",
   "home": "http://pytorch.org/",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "Image and video datasets and models for torch deep learning"
  },
  "build": {
   "number": "0",
   "rpaths": [
    "lib/",
    "SP_DIR/torch/lib/",
    "lib/",
    "SP_DIR/torch/lib/",
    "lib/",
    "SP_DIR/torch/lib/",
    "lib/",
    "SP_DIR/torch/lib/",
    "lib/",
    "SP_DIR/torch/lib/",
    "lib/",
    "SP_DIR/torch/lib/",
    "lib/",
    "SP_DIR/torch/lib/",
    "lib/",
    "SP_DIR/torch/lib/"
   ]
  },
  "extra": {
   "feedstock-name": "torchvision",
   "recipe-maintainers": [
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari",
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari",
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari",
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari",
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari",
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari",
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari",
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari"
   ]
  },
  "outputs": [
   {
    "build": {
     "string": "cuda112py310h1234567_0"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "sysroot_linux-64 ==2.17"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "cudnn",
      "libjpeg-turbo",
      "libpng",
      "numpy",
      "pillow >=5.3.0,!=8.3.0,!=8.3.1",
      "pytorch =2.1=cuda112*",
      "requests"
     ],
     "run": [
      "python",
      "pytorch =2.1=cuda112*",
      "cudnn",
      "numpy",
      "pillow >=5.3.0,!=8.3.0,!=8.3.1",
      "requests"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest --verbose -k \"not (test_url_is_accessible or (test_transforms and test_adjust_saturation) or test_adjust_sharpness or test_forward_backward or test_jit_forward_backward or test_frame_reading or test_randomperspective_fill or test_frozenbatchnorm2d_eps or test_random_apply or test_write_video_with_audio or test_video_clips_custom_fps or test_memory_efficient_densenet or test_resnet_dilation or test_mobilenet_v2_residual_setting or test_mobilenet_norm_layer or test_inception_v3_eval or test_fasterrcnn_double or test_googlenet_eval or test_fasterrcnn_switch_devices or test_mobilenet_v2_residual_setting or test_vitc_models or test_classification_model or test_segmentation_model or test_detection_model or test_detection_model_validation or test_video_model or test_quantized_classification_model or test_detection_model_trainable_backbone_layers or test_raft or test_build_fx_feature_extractor or test_transformation_range or test_transformation_discrete or test_batched_vs_single or test_draw_boxes)\" --durations=50 test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "av",
      "requests",
      "scipy",
      "pytest-mock"
     ],
     "source_files": [
      "test",
      "references"
     ]
    }
   },
   {
    "build": {
     "string": "cuda112py38h1234567_0"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "sysroot_linux-64 ==2.17"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "cudnn",
      "libjpeg-turbo",
      "libpng",
      "numpy",
      "pillow >=5.3.0,!=8.3.0,!=8.3.1",
      "pytorch =2.1=cuda112*",
      "requests"
     ],
     "run": [
      "python",
      "pytorch =2.1=cuda112*",
      "cudnn",
      "numpy",
      "pillow >=5.3.0,!=8.3.0,!=8.3.1",
      "requests"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest --verbose -k \"not (test_url_is_accessible or (test_transforms and test_adjust_saturation) or test_adjust_sharpness or test_forward_backward or test_jit_forward_backward or test_frame_reading or test_randomperspective_fill or test_frozenbatchnorm2d_eps or test_random_apply or test_write_video_with_audio or test_video_clips_custom_fps or test_memory_efficient_densenet or test_resnet_dilation or test_mobilenet_v2_residual_setting or test_mobilenet_norm_layer or test_inception_v3_eval or test_fasterrcnn_double or test_googlenet_eval or test_fasterrcnn_switch_devices or test_mobilenet_v2_residual_setting or test_vitc_models or test_classification_model or test_segmentation_model or test_detection_model or test_detection_model_validation or test_video_model or test_quantized_classification_model or test_detection_model_trainable_backbone_layers or test_raft or test_build_fx_feature_extractor or test_transformation_range or test_transformation_discrete or test_batched_vs_single or test_draw_boxes)\" --durations=50 test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "av",
      "requests",
      "scipy",
      "pytest-mock"
     ],
     "source_files": [
      "test",
      "references"
     ]
    }
   },
   {
    "build": {
     "string": "cuda112py39h1234567_0"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "sysroot_linux-64 ==2.17"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "cudnn",
      "libjpeg-turbo",
      "libpng",
      "numpy",
      "pillow >=5.3.0,!=8.3.0,!=8.3.1",
      "pytorch =2.1=cuda112*",
      "requests"
     ],
     "run": [
      "python",
      "pytorch =2.1=cuda112*",
      "cudnn",
      "numpy",
      "pillow >=5.3.0,!=8.3.0,!=8.3.1",
      "requests"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest --verbose -k \"not (test_url_is_accessible or (test_transforms and test_adjust_saturation) or test_adjust_sharpness or test_forward_backward or test_jit_forward_backward or test_frame_reading or test_randomperspective_fill or test_frozenbatchnorm2d_eps or test_random_apply or test_write_video_with_audio or test_video_clips_custom_fps or test_memory_efficient_densenet or test_resnet_dilation or test_mobilenet_v2_residual_setting or test_mobilenet_norm_layer or test_inception_v3_eval or test_fasterrcnn_double or test_googlenet_eval or test_fasterrcnn_switch_devices or test_mobilenet_v2_residual_setting or test_vitc_models or test_classification_model or test_segmentation_model or test_detection_model or test_detection_model_validation or test_video_model or test_quantized_classification_model or test_detection_model_trainable_backbone_layers or test_raft or test_build_fx_feature_extractor or test_transformation_range or test_transformation_discrete or test_batched_vs_single or test_draw_boxes)\" --durations=50 test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "av",
      "requests",
      "scipy",
      "pytest-mock"
     ],
     "source_files": [
      "test",
      "references"
     ]
    }
   },
   {
    "build": {
     "string": "cuda112py311h1234567_0"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "sysroot_linux-64 ==2.17"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "cudnn",
      "libjpeg-turbo",
      "libpng",
      "numpy",
      "pillow >=5.3.0,!=8.3.0,!=8.3.1",
      "pytorch =2.1=cuda112*",
      "requests"
     ],
     "run": [
      "python",
      "pytorch =2.1=cuda112*",
      "cudnn",
      "numpy",
      "pillow >=5.3.0,!=8.3.0,!=8.3.1",
      "requests"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest --verbose -k \"not (test_url_is_accessible or (test_transforms and test_adjust_saturation) or test_adjust_sharpness or test_forward_backward or test_jit_forward_backward or test_frame_reading or test_randomperspective_fill or test_frozenbatchnorm2d_eps or test_random_apply or test_write_video_with_audio or test_video_clips_custom_fps or test_memory_efficient_densenet or test_resnet_dilation or test_mobilenet_v2_residual_setting or test_mobilenet_norm_layer or test_inception_v3_eval or test_fasterrcnn_double or test_googlenet_eval or test_fasterrcnn_switch_devices or test_mobilenet_v2_residual_setting or test_vitc_models or test_classification_model or test_segmentation_model or test_detection_model or test_detection_model_validation or test_video_model or test_quantized_classification_model or test_detection_model_trainable_backbone_layers or test_raft or test_build_fx_feature_extractor or test_transformation_range or test_transformation_discrete or test_batched_vs_single or test_draw_boxes)\" --durations=50 test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "av",
      "requests",
      "scipy",
      "pytest-mock"
     ],
     "source_files": [
      "test",
      "references"
     ]
    }
   },
   {
    "build": {
     "string": "cpu_py310h1234567_0"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "sysroot_linux-64 ==2.17"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "libjpeg-turbo",
      "libpng",
      "numpy",
      "pillow >=5.3.0,!=8.3.0,!=8.3.1",
      "pytorch =2.1=cpu*",
      "requests"
     ],
     "run": [
      "python",
      "pytorch =2.1=cpu*",
      "numpy",
      "pillow >=5.3.0,!=8.3.0,!=8.3.1",
      "requests"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest --verbose -k \"not (test_url_is_accessible or (test_transforms and test_adjust_saturation) or test_adjust_sharpness or test_forward_backward or test_jit_forward_backward or test_frame_reading or test_randomperspective_fill or test_frozenbatchnorm2d_eps or test_random_apply or test_write_video_with_audio or test_video_clips_custom_fps or test_memory_efficient_densenet or test_resnet_dilation or test_mobilenet_v2_residual_setting or test_mobilenet_norm_layer or test_inception_v3_eval or test_fasterrcnn_double or test_googlenet_eval or test_fasterrcnn_switch_devices or test_mobilenet_v2_residual_setting or test_vitc_models or test_classification_model or test_segmentation_model or test_detection_model or test_detection_model_validation or test_video_model or test_quantized_classification_model or test_detection_model_trainable_backbone_layers or test_raft or test_build_fx_feature_extractor or test_transformation_range or test_transformation_discrete or test_batched_vs_single or test_draw_boxes)\" --durations=50 test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "av",
      "requests",
      "scipy",
      "pytest-mock"
     ],
     "source_files": [
      "test",
      "references"
     ]
    }
   },
   {
    "build": {
     "string": "cpu_py38h1234567_0"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "sysroot_linux-64 ==2.17"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "libjpeg-turbo",
      "libpng",
      "numpy",
      "pillow >=5.3.0,!=8.3.0,!=8.3.1",
      "pytorch =2.1=cpu*",
      "requests"
     ],
     "run": [
      "python",
      "pytorch =2.1=cpu*",
      "numpy",
      "pillow >=5.3.0,!=8.3.0,!=8.3.1",
      "requests"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest --verbose -k \"not (test_url_is_accessible or (test_transforms and test_adjust_saturation) or test_adjust_sharpness or test_forward_backward or test_jit_forward_backward or test_frame_reading or test_randomperspective_fill or test_frozenbatchnorm2d_eps or test_random_apply or test_write_video_with_audio or test_video_clips_custom_fps or test_memory_efficient_densenet or test_resnet_dilation or test_mobilenet_v2_residual_setting or test_mobilenet_norm_layer or test_inception_v3_eval or test_fasterrcnn_double or test_googlenet_eval or test_fasterrcnn_switch_devices or test_mobilenet_v2_residual_setting or test_vitc_models or test_classification_model or test_segmentation_model or test_detection_model or test_detection_model_validation or test_video_model or test_quantized_classification_model or test_detection_model_trainable_backbone_layers or test_raft or test_build_fx_feature_extractor or test_transformation_range or test_transformation_discrete or test_batched_vs_single or test_draw_boxes)\" --durations=50 test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "av",
      "requests",
      "scipy",
      "pytest-mock"
     ],
     "source_files": [
      "test",
      "references"
     ]
    }
   },
   {
    "build": {
     "string": "cpu_py39h1234567_0"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "sysroot_linux-64 ==2.17"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "libjpeg-turbo",
      "libpng",
      "numpy",
      "pillow >=5.3.0,!=8.3.0,!=8.3.1",
      "pytorch =2.1=cpu*",
      "requests"
     ],
     "run": [
      "python",
      "pytorch =2.1=cpu*",
      "numpy",
      "pillow >=5.3.0,!=8.3.0,!=8.3.1",
      "requests"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest --verbose -k \"not (test_url_is_accessible or (test_transforms and test_adjust_saturation) or test_adjust_sharpness or test_forward_backward or test_jit_forward_backward or test_frame_reading or test_randomperspective_fill or test_frozenbatchnorm2d_eps or test_random_apply or test_write_video_with_audio or test_video_clips_custom_fps or test_memory_efficient_densenet or test_resnet_dilation or test_mobilenet_v2_residual_setting or test_mobilenet_norm_layer or test_inception_v3_eval or test_fasterrcnn_double or test_googlenet_eval or test_fasterrcnn_switch_devices or test_mobilenet_v2_residual_setting or test_vitc_models or test_classification_model or test_segmentation_model or test_detection_model or test_detection_model_validation or test_video_model or test_quantized_classification_model or test_detection_model_trainable_backbone_layers or test_raft or test_build_fx_feature_extractor or test_transformation_range or test_transformation_discrete or test_batched_vs_single or test_draw_boxes)\" --durations=50 test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "av",
      "requests",
      "scipy",
      "pytest-mock"
     ],
     "source_files": [
      "test",
      "references"
     ]
    }
   },
   {
    "build": {
     "string": "cpu_py311h1234567_0"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "sysroot_linux-64 ==2.17"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "libjpeg-turbo",
      "libpng",
      "numpy",
      "pillow >=5.3.0,!=8.3.0,!=8.3.1",
      "pytorch =2.1=cpu*",
      "requests"
     ],
     "run": [
      "python",
      "pytorch =2.1=cpu*",
      "numpy",
      "pillow >=5.3.0,!=8.3.0,!=8.3.1",
      "requests"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest --verbose -k \"not (test_url_is_accessible or (test_transforms and test_adjust_saturation) or test_adjust_sharpness or test_forward_backward or test_jit_forward_backward or test_frame_reading or test_randomperspective_fill or test_frozenbatchnorm2d_eps or test_random_apply or test_write_video_with_audio or test_video_clips_custom_fps or test_memory_efficient_densenet or test_resnet_dilation or test_mobilenet_v2_residual_setting or test_mobilenet_norm_layer or test_inception_v3_eval or test_fasterrcnn_double or test_googlenet_eval or test_fasterrcnn_switch_devices or test_mobilenet_v2_residual_setting or test_vitc_models or test_classification_model or test_segmentation_model or test_detection_model or test_detection_model_validation or test_video_model or test_quantized_classification_model or test_detection_model_trainable_backbone_layers or test_raft or test_build_fx_feature_extractor or test_transformation_range or test_transformation_discrete or test_batched_vs_single or test_draw_boxes)\" --durations=50 test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "av",
      "requests",
      "scipy",
      "pytest-mock"
     ],
     "source_files": [
      "test",
      "references"
     ]
    }
   }
  ],
  "package": {
   "name": "torchvision-split",
   "version": "0.16.1"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "source": {
   "patches": [
    "0001-Monkeypatch-TORCH_LIB_PATH.patch",
    "0001-Monkeypatch-TORCH_LIB_PATH.patch",
    "0001-Monkeypatch-TORCH_LIB_PATH.patch",
    "0001-Monkeypatch-TORCH_LIB_PATH.patch",
    "0001-Monkeypatch-TORCH_LIB_PATH.patch",
    "0001-Monkeypatch-TORCH_LIB_PATH.patch",
    "0001-Monkeypatch-TORCH_LIB_PATH.patch",
    "0001-Monkeypatch-TORCH_LIB_PATH.patch"
   ],
   "sha256": "d31fe52e4540750c8d372b0f38f1bfa81d8261193f2c2c06577332831d203c50",
   "url": "https://github.com/pytorch/vision/archive/v0.16.1.tar.gz"
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "sysroot_linux-64"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cudnn",
    "libjpeg-turbo",
    "libpng",
    "numpy",
    "pillow",
    "pip",
    "python",
    "pytorch",
    "requests",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cudnn",
    "numpy",
    "pillow",
    "python",
    "pytorch",
    "requests"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "av",
    "pytest",
    "pytest-mock",
    "requests",
    "scipy"
   ]
  }
 },
 "linux_aarch64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/pytorch/vision",
   "doc_url": "http://pytorch.org/docs/master/torchvision",
   "home": "http://pytorch.org/",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "Image and video datasets and models for torch deep learning"
  },
  "build": {
   "number": "0",
   "rpaths": [
    "lib/",
    "SP_DIR/torch/lib/",
    "lib/",
    "SP_DIR/torch/lib/",
    "lib/",
    "SP_DIR/torch/lib/",
    "lib/",
    "SP_DIR/torch/lib/"
   ]
  },
  "extra": {
   "feedstock-name": "torchvision",
   "recipe-maintainers": [
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari",
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari",
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari",
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari"
   ]
  },
  "outputs": [
   {
    "build": {
     "string": "cpu_py310h1234567_0"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "libjpeg-turbo",
      "libpng",
      "numpy",
      "pillow >=5.3.0,!=8.3.0,!=8.3.1",
      "pytorch =2.1=cpu*",
      "requests"
     ],
     "run": [
      "python",
      "pytorch =2.1=cpu*",
      "numpy",
      "pillow >=5.3.0,!=8.3.0,!=8.3.1",
      "requests"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest -k \"not (test_url_is_accessible or (test_transforms and test_adjust_saturation) or test_adjust_sharpness or test_forward_backward or test_jit_forward_backward or test_frame_reading or test_randomperspective_fill or test_frozenbatchnorm2d_eps or test_random_apply or test_write_video_with_audio or test_video_clips_custom_fps or test_memory_efficient_densenet or test_resnet_dilation or test_mobilenet_v2_residual_setting or test_mobilenet_norm_layer or test_inception_v3_eval or test_fasterrcnn_double or test_googlenet_eval or test_fasterrcnn_switch_devices or test_mobilenet_v2_residual_setting or test_vitc_models or test_classification_model or test_segmentation_model or test_detection_model or test_detection_model_validation or test_video_model or test_quantized_classification_model or test_detection_model_trainable_backbone_layers or test_raft or test_build_fx_feature_extractor or test_transformation_range or test_transformation_discrete or test_batched_vs_single or test_draw_boxes)\" --durations=50 test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "av",
      "requests",
      "scipy",
      "pytest-mock"
     ],
     "source_files": [
      "test",
      "references"
     ]
    }
   },
   {
    "build": {
     "string": "cpu_py38h1234567_0"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "libjpeg-turbo",
      "libpng",
      "numpy",
      "pillow >=5.3.0,!=8.3.0,!=8.3.1",
      "pytorch =2.1=cpu*",
      "requests"
     ],
     "run": [
      "python",
      "pytorch =2.1=cpu*",
      "numpy",
      "pillow >=5.3.0,!=8.3.0,!=8.3.1",
      "requests"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest -k \"not (test_url_is_accessible or (test_transforms and test_adjust_saturation) or test_adjust_sharpness or test_forward_backward or test_jit_forward_backward or test_frame_reading or test_randomperspective_fill or test_frozenbatchnorm2d_eps or test_random_apply or test_write_video_with_audio or test_video_clips_custom_fps or test_memory_efficient_densenet or test_resnet_dilation or test_mobilenet_v2_residual_setting or test_mobilenet_norm_layer or test_inception_v3_eval or test_fasterrcnn_double or test_googlenet_eval or test_fasterrcnn_switch_devices or test_mobilenet_v2_residual_setting or test_vitc_models or test_classification_model or test_segmentation_model or test_detection_model or test_detection_model_validation or test_video_model or test_quantized_classification_model or test_detection_model_trainable_backbone_layers or test_raft or test_build_fx_feature_extractor or test_transformation_range or test_transformation_discrete or test_batched_vs_single or test_draw_boxes)\" --durations=50 test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "av",
      "requests",
      "scipy",
      "pytest-mock"
     ],
     "source_files": [
      "test",
      "references"
     ]
    }
   },
   {
    "build": {
     "string": "cpu_py39h1234567_0"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "libjpeg-turbo",
      "libpng",
      "numpy",
      "pillow >=5.3.0,!=8.3.0,!=8.3.1",
      "pytorch =2.1=cpu*",
      "requests"
     ],
     "run": [
      "python",
      "pytorch =2.1=cpu*",
      "numpy",
      "pillow >=5.3.0,!=8.3.0,!=8.3.1",
      "requests"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest -k \"not (test_url_is_accessible or (test_transforms and test_adjust_saturation) or test_adjust_sharpness or test_forward_backward or test_jit_forward_backward or test_frame_reading or test_randomperspective_fill or test_frozenbatchnorm2d_eps or test_random_apply or test_write_video_with_audio or test_video_clips_custom_fps or test_memory_efficient_densenet or test_resnet_dilation or test_mobilenet_v2_residual_setting or test_mobilenet_norm_layer or test_inception_v3_eval or test_fasterrcnn_double or test_googlenet_eval or test_fasterrcnn_switch_devices or test_mobilenet_v2_residual_setting or test_vitc_models or test_classification_model or test_segmentation_model or test_detection_model or test_detection_model_validation or test_video_model or test_quantized_classification_model or test_detection_model_trainable_backbone_layers or test_raft or test_build_fx_feature_extractor or test_transformation_range or test_transformation_discrete or test_batched_vs_single or test_draw_boxes)\" --durations=50 test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "av",
      "requests",
      "scipy",
      "pytest-mock"
     ],
     "source_files": [
      "test",
      "references"
     ]
    }
   },
   {
    "build": {
     "string": "cpu_py311h1234567_0"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "libjpeg-turbo",
      "libpng",
      "numpy",
      "pillow >=5.3.0,!=8.3.0,!=8.3.1",
      "pytorch =2.1=cpu*",
      "requests"
     ],
     "run": [
      "python",
      "pytorch =2.1=cpu*",
      "numpy",
      "pillow >=5.3.0,!=8.3.0,!=8.3.1",
      "requests"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest -k \"not (test_url_is_accessible or (test_transforms and test_adjust_saturation) or test_adjust_sharpness or test_forward_backward or test_jit_forward_backward or test_frame_reading or test_randomperspective_fill or test_frozenbatchnorm2d_eps or test_random_apply or test_write_video_with_audio or test_video_clips_custom_fps or test_memory_efficient_densenet or test_resnet_dilation or test_mobilenet_v2_residual_setting or test_mobilenet_norm_layer or test_inception_v3_eval or test_fasterrcnn_double or test_googlenet_eval or test_fasterrcnn_switch_devices or test_mobilenet_v2_residual_setting or test_vitc_models or test_classification_model or test_segmentation_model or test_detection_model or test_detection_model_validation or test_video_model or test_quantized_classification_model or test_detection_model_trainable_backbone_layers or test_raft or test_build_fx_feature_extractor or test_transformation_range or test_transformation_discrete or test_batched_vs_single or test_draw_boxes)\" --durations=50 test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "av",
      "requests",
      "scipy",
      "pytest-mock"
     ],
     "source_files": [
      "test",
      "references"
     ]
    }
   }
  ],
  "package": {
   "name": "torchvision-split",
   "version": "0.16.1"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "source": {
   "patches": [
    "0001-Monkeypatch-TORCH_LIB_PATH.patch",
    "0001-Monkeypatch-TORCH_LIB_PATH.patch",
    "0001-Monkeypatch-TORCH_LIB_PATH.patch",
    "0001-Monkeypatch-TORCH_LIB_PATH.patch"
   ],
   "sha256": "d31fe52e4540750c8d372b0f38f1bfa81d8261193f2c2c06577332831d203c50",
   "url": "https://github.com/pytorch/vision/archive/v0.16.1.tar.gz"
  }
 },
 "linux_aarch64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "libjpeg-turbo",
    "libpng",
    "numpy",
    "pillow",
    "pip",
    "python",
    "pytorch",
    "requests",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "pillow",
    "python",
    "pytorch",
    "requests"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "av",
    "pytest",
    "pytest-mock",
    "requests",
    "scipy"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "dev_url": "https://github.com/pytorch/vision",
   "doc_url": "http://pytorch.org/docs/master/torchvision",
   "home": "http://pytorch.org/",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "Image and video datasets and models for torch deep learning"
  },
  "build": {
   "number": "0",
   "rpaths": [
    "lib/",
    "SP_DIR/torch/lib/",
    "lib/",
    "SP_DIR/torch/lib/",
    "lib/",
    "SP_DIR/torch/lib/",
    "lib/",
    "SP_DIR/torch/lib/",
    "lib/",
    "SP_DIR/torch/lib/",
    "lib/",
    "SP_DIR/torch/lib/",
    "lib/",
    "SP_DIR/torch/lib/",
    "lib/",
    "SP_DIR/torch/lib/",
    "lib/",
    "SP_DIR/torch/lib/",
    "lib/",
    "SP_DIR/torch/lib/",
    "lib/",
    "SP_DIR/torch/lib/",
    "lib/",
    "SP_DIR/torch/lib/",
    "lib/",
    "SP_DIR/torch/lib/",
    "lib/",
    "SP_DIR/torch/lib/",
    "lib/",
    "SP_DIR/torch/lib/",
    "lib/",
    "SP_DIR/torch/lib/",
    "lib/",
    "SP_DIR/torch/lib/",
    "lib/",
    "SP_DIR/torch/lib/",
    "lib/",
    "SP_DIR/torch/lib/",
    "lib/",
    "SP_DIR/torch/lib/"
   ]
  },
  "extra": {
   "feedstock-name": "torchvision",
   "recipe-maintainers": [
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari",
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari",
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari",
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari",
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari",
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari",
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari",
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari",
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari",
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari",
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari",
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari",
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari",
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari",
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari",
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari",
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari",
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari",
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari",
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari"
   ]
  },
  "outputs": [
   {
    "build": {
     "string": "cuda112py310h1234567_0"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "sysroot_linux-64 ==2.17"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "cudnn",
      "libjpeg-turbo",
      "libpng",
      "numpy",
      "pillow >=5.3.0,!=8.3.0,!=8.3.1",
      "pytorch =2.1=cuda112*",
      "requests"
     ],
     "run": [
      "python",
      "pytorch =2.1=cuda112*",
      "cudnn",
      "numpy",
      "pillow >=5.3.0,!=8.3.0,!=8.3.1",
      "requests"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest --verbose -k \"not (test_url_is_accessible or (test_transforms and test_adjust_saturation) or test_adjust_sharpness or test_forward_backward or test_jit_forward_backward or test_frame_reading or test_randomperspective_fill or test_frozenbatchnorm2d_eps or test_random_apply or test_write_video_with_audio or test_video_clips_custom_fps or test_memory_efficient_densenet or test_resnet_dilation or test_mobilenet_v2_residual_setting or test_mobilenet_norm_layer or test_inception_v3_eval or test_fasterrcnn_double or test_googlenet_eval or test_fasterrcnn_switch_devices or test_mobilenet_v2_residual_setting or test_vitc_models or test_classification_model or test_segmentation_model or test_detection_model or test_detection_model_validation or test_video_model or test_quantized_classification_model or test_detection_model_trainable_backbone_layers or test_raft or test_build_fx_feature_extractor or test_transformation_range or test_transformation_discrete or test_batched_vs_single or test_draw_boxes)\" --durations=50 test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "av",
      "requests",
      "scipy",
      "pytest-mock"
     ],
     "source_files": [
      "test",
      "references"
     ]
    }
   },
   {
    "build": {
     "string": "cuda112py38h1234567_0"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "sysroot_linux-64 ==2.17"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "cudnn",
      "libjpeg-turbo",
      "libpng",
      "numpy",
      "pillow >=5.3.0,!=8.3.0,!=8.3.1",
      "pytorch =2.1=cuda112*",
      "requests"
     ],
     "run": [
      "python",
      "pytorch =2.1=cuda112*",
      "cudnn",
      "numpy",
      "pillow >=5.3.0,!=8.3.0,!=8.3.1",
      "requests"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest --verbose -k \"not (test_url_is_accessible or (test_transforms and test_adjust_saturation) or test_adjust_sharpness or test_forward_backward or test_jit_forward_backward or test_frame_reading or test_randomperspective_fill or test_frozenbatchnorm2d_eps or test_random_apply or test_write_video_with_audio or test_video_clips_custom_fps or test_memory_efficient_densenet or test_resnet_dilation or test_mobilenet_v2_residual_setting or test_mobilenet_norm_layer or test_inception_v3_eval or test_fasterrcnn_double or test_googlenet_eval or test_fasterrcnn_switch_devices or test_mobilenet_v2_residual_setting or test_vitc_models or test_classification_model or test_segmentation_model or test_detection_model or test_detection_model_validation or test_video_model or test_quantized_classification_model or test_detection_model_trainable_backbone_layers or test_raft or test_build_fx_feature_extractor or test_transformation_range or test_transformation_discrete or test_batched_vs_single or test_draw_boxes)\" --durations=50 test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "av",
      "requests",
      "scipy",
      "pytest-mock"
     ],
     "source_files": [
      "test",
      "references"
     ]
    }
   },
   {
    "build": {
     "string": "cuda112py39h1234567_0"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "sysroot_linux-64 ==2.17"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "cudnn",
      "libjpeg-turbo",
      "libpng",
      "numpy",
      "pillow >=5.3.0,!=8.3.0,!=8.3.1",
      "pytorch =2.1=cuda112*",
      "requests"
     ],
     "run": [
      "python",
      "pytorch =2.1=cuda112*",
      "cudnn",
      "numpy",
      "pillow >=5.3.0,!=8.3.0,!=8.3.1",
      "requests"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest --verbose -k \"not (test_url_is_accessible or (test_transforms and test_adjust_saturation) or test_adjust_sharpness or test_forward_backward or test_jit_forward_backward or test_frame_reading or test_randomperspective_fill or test_frozenbatchnorm2d_eps or test_random_apply or test_write_video_with_audio or test_video_clips_custom_fps or test_memory_efficient_densenet or test_resnet_dilation or test_mobilenet_v2_residual_setting or test_mobilenet_norm_layer or test_inception_v3_eval or test_fasterrcnn_double or test_googlenet_eval or test_fasterrcnn_switch_devices or test_mobilenet_v2_residual_setting or test_vitc_models or test_classification_model or test_segmentation_model or test_detection_model or test_detection_model_validation or test_video_model or test_quantized_classification_model or test_detection_model_trainable_backbone_layers or test_raft or test_build_fx_feature_extractor or test_transformation_range or test_transformation_discrete or test_batched_vs_single or test_draw_boxes)\" --durations=50 test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "av",
      "requests",
      "scipy",
      "pytest-mock"
     ],
     "source_files": [
      "test",
      "references"
     ]
    }
   },
   {
    "build": {
     "string": "cuda112py311h1234567_0"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "sysroot_linux-64 ==2.17"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "cudnn",
      "libjpeg-turbo",
      "libpng",
      "numpy",
      "pillow >=5.3.0,!=8.3.0,!=8.3.1",
      "pytorch =2.1=cuda112*",
      "requests"
     ],
     "run": [
      "python",
      "pytorch =2.1=cuda112*",
      "cudnn",
      "numpy",
      "pillow >=5.3.0,!=8.3.0,!=8.3.1",
      "requests"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest --verbose -k \"not (test_url_is_accessible or (test_transforms and test_adjust_saturation) or test_adjust_sharpness or test_forward_backward or test_jit_forward_backward or test_frame_reading or test_randomperspective_fill or test_frozenbatchnorm2d_eps or test_random_apply or test_write_video_with_audio or test_video_clips_custom_fps or test_memory_efficient_densenet or test_resnet_dilation or test_mobilenet_v2_residual_setting or test_mobilenet_norm_layer or test_inception_v3_eval or test_fasterrcnn_double or test_googlenet_eval or test_fasterrcnn_switch_devices or test_mobilenet_v2_residual_setting or test_vitc_models or test_classification_model or test_segmentation_model or test_detection_model or test_detection_model_validation or test_video_model or test_quantized_classification_model or test_detection_model_trainable_backbone_layers or test_raft or test_build_fx_feature_extractor or test_transformation_range or test_transformation_discrete or test_batched_vs_single or test_draw_boxes)\" --durations=50 test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "av",
      "requests",
      "scipy",
      "pytest-mock"
     ],
     "source_files": [
      "test",
      "references"
     ]
    }
   },
   {
    "build": {
     "string": "cpu_py310h1234567_0"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "sysroot_linux-64 ==2.17"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "libjpeg-turbo",
      "libpng",
      "numpy",
      "pillow >=5.3.0,!=8.3.0,!=8.3.1",
      "pytorch =2.1=cpu*",
      "requests"
     ],
     "run": [
      "python",
      "pytorch =2.1=cpu*",
      "numpy",
      "pillow >=5.3.0,!=8.3.0,!=8.3.1",
      "requests"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest --verbose -k \"not (test_url_is_accessible or (test_transforms and test_adjust_saturation) or test_adjust_sharpness or test_forward_backward or test_jit_forward_backward or test_frame_reading or test_randomperspective_fill or test_frozenbatchnorm2d_eps or test_random_apply or test_write_video_with_audio or test_video_clips_custom_fps or test_memory_efficient_densenet or test_resnet_dilation or test_mobilenet_v2_residual_setting or test_mobilenet_norm_layer or test_inception_v3_eval or test_fasterrcnn_double or test_googlenet_eval or test_fasterrcnn_switch_devices or test_mobilenet_v2_residual_setting or test_vitc_models or test_classification_model or test_segmentation_model or test_detection_model or test_detection_model_validation or test_video_model or test_quantized_classification_model or test_detection_model_trainable_backbone_layers or test_raft or test_build_fx_feature_extractor or test_transformation_range or test_transformation_discrete or test_batched_vs_single or test_draw_boxes)\" --durations=50 test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "av",
      "requests",
      "scipy",
      "pytest-mock"
     ],
     "source_files": [
      "test",
      "references"
     ]
    }
   },
   {
    "build": {
     "string": "cpu_py38h1234567_0"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "sysroot_linux-64 ==2.17"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "libjpeg-turbo",
      "libpng",
      "numpy",
      "pillow >=5.3.0,!=8.3.0,!=8.3.1",
      "pytorch =2.1=cpu*",
      "requests"
     ],
     "run": [
      "python",
      "pytorch =2.1=cpu*",
      "numpy",
      "pillow >=5.3.0,!=8.3.0,!=8.3.1",
      "requests"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest --verbose -k \"not (test_url_is_accessible or (test_transforms and test_adjust_saturation) or test_adjust_sharpness or test_forward_backward or test_jit_forward_backward or test_frame_reading or test_randomperspective_fill or test_frozenbatchnorm2d_eps or test_random_apply or test_write_video_with_audio or test_video_clips_custom_fps or test_memory_efficient_densenet or test_resnet_dilation or test_mobilenet_v2_residual_setting or test_mobilenet_norm_layer or test_inception_v3_eval or test_fasterrcnn_double or test_googlenet_eval or test_fasterrcnn_switch_devices or test_mobilenet_v2_residual_setting or test_vitc_models or test_classification_model or test_segmentation_model or test_detection_model or test_detection_model_validation or test_video_model or test_quantized_classification_model or test_detection_model_trainable_backbone_layers or test_raft or test_build_fx_feature_extractor or test_transformation_range or test_transformation_discrete or test_batched_vs_single or test_draw_boxes)\" --durations=50 test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "av",
      "requests",
      "scipy",
      "pytest-mock"
     ],
     "source_files": [
      "test",
      "references"
     ]
    }
   },
   {
    "build": {
     "string": "cpu_py39h1234567_0"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "sysroot_linux-64 ==2.17"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "libjpeg-turbo",
      "libpng",
      "numpy",
      "pillow >=5.3.0,!=8.3.0,!=8.3.1",
      "pytorch =2.1=cpu*",
      "requests"
     ],
     "run": [
      "python",
      "pytorch =2.1=cpu*",
      "numpy",
      "pillow >=5.3.0,!=8.3.0,!=8.3.1",
      "requests"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest --verbose -k \"not (test_url_is_accessible or (test_transforms and test_adjust_saturation) or test_adjust_sharpness or test_forward_backward or test_jit_forward_backward or test_frame_reading or test_randomperspective_fill or test_frozenbatchnorm2d_eps or test_random_apply or test_write_video_with_audio or test_video_clips_custom_fps or test_memory_efficient_densenet or test_resnet_dilation or test_mobilenet_v2_residual_setting or test_mobilenet_norm_layer or test_inception_v3_eval or test_fasterrcnn_double or test_googlenet_eval or test_fasterrcnn_switch_devices or test_mobilenet_v2_residual_setting or test_vitc_models or test_classification_model or test_segmentation_model or test_detection_model or test_detection_model_validation or test_video_model or test_quantized_classification_model or test_detection_model_trainable_backbone_layers or test_raft or test_build_fx_feature_extractor or test_transformation_range or test_transformation_discrete or test_batched_vs_single or test_draw_boxes)\" --durations=50 test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "av",
      "requests",
      "scipy",
      "pytest-mock"
     ],
     "source_files": [
      "test",
      "references"
     ]
    }
   },
   {
    "build": {
     "string": "cpu_py311h1234567_0"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "sysroot_linux-64 ==2.17"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "libjpeg-turbo",
      "libpng",
      "numpy",
      "pillow >=5.3.0,!=8.3.0,!=8.3.1",
      "pytorch =2.1=cpu*",
      "requests"
     ],
     "run": [
      "python",
      "pytorch =2.1=cpu*",
      "numpy",
      "pillow >=5.3.0,!=8.3.0,!=8.3.1",
      "requests"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest --verbose -k \"not (test_url_is_accessible or (test_transforms and test_adjust_saturation) or test_adjust_sharpness or test_forward_backward or test_jit_forward_backward or test_frame_reading or test_randomperspective_fill or test_frozenbatchnorm2d_eps or test_random_apply or test_write_video_with_audio or test_video_clips_custom_fps or test_memory_efficient_densenet or test_resnet_dilation or test_mobilenet_v2_residual_setting or test_mobilenet_norm_layer or test_inception_v3_eval or test_fasterrcnn_double or test_googlenet_eval or test_fasterrcnn_switch_devices or test_mobilenet_v2_residual_setting or test_vitc_models or test_classification_model or test_segmentation_model or test_detection_model or test_detection_model_validation or test_video_model or test_quantized_classification_model or test_detection_model_trainable_backbone_layers or test_raft or test_build_fx_feature_extractor or test_transformation_range or test_transformation_discrete or test_batched_vs_single or test_draw_boxes)\" --durations=50 test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "av",
      "requests",
      "scipy",
      "pytest-mock"
     ],
     "source_files": [
      "test",
      "references"
     ]
    }
   },
   {
    "build": {
     "string": "cpu_py310h1234567_0"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "libjpeg-turbo",
      "libpng",
      "numpy",
      "pillow >=5.3.0,!=8.3.0,!=8.3.1",
      "pytorch =2.1=cpu*",
      "requests"
     ],
     "run": [
      "python",
      "pytorch =2.1=cpu*",
      "numpy",
      "pillow >=5.3.0,!=8.3.0,!=8.3.1",
      "requests"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest -k \"not (test_url_is_accessible or (test_transforms and test_adjust_saturation) or test_adjust_sharpness or test_forward_backward or test_jit_forward_backward or test_frame_reading or test_randomperspective_fill or test_frozenbatchnorm2d_eps or test_random_apply or test_write_video_with_audio or test_video_clips_custom_fps or test_memory_efficient_densenet or test_resnet_dilation or test_mobilenet_v2_residual_setting or test_mobilenet_norm_layer or test_inception_v3_eval or test_fasterrcnn_double or test_googlenet_eval or test_fasterrcnn_switch_devices or test_mobilenet_v2_residual_setting or test_vitc_models or test_classification_model or test_segmentation_model or test_detection_model or test_detection_model_validation or test_video_model or test_quantized_classification_model or test_detection_model_trainable_backbone_layers or test_raft or test_build_fx_feature_extractor or test_transformation_range or test_transformation_discrete or test_batched_vs_single or test_draw_boxes)\" --durations=50 test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "av",
      "requests",
      "scipy",
      "pytest-mock"
     ],
     "source_files": [
      "test",
      "references"
     ]
    }
   },
   {
    "build": {
     "string": "cpu_py38h1234567_0"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "libjpeg-turbo",
      "libpng",
      "numpy",
      "pillow >=5.3.0,!=8.3.0,!=8.3.1",
      "pytorch =2.1=cpu*",
      "requests"
     ],
     "run": [
      "python",
      "pytorch =2.1=cpu*",
      "numpy",
      "pillow >=5.3.0,!=8.3.0,!=8.3.1",
      "requests"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest -k \"not (test_url_is_accessible or (test_transforms and test_adjust_saturation) or test_adjust_sharpness or test_forward_backward or test_jit_forward_backward or test_frame_reading or test_randomperspective_fill or test_frozenbatchnorm2d_eps or test_random_apply or test_write_video_with_audio or test_video_clips_custom_fps or test_memory_efficient_densenet or test_resnet_dilation or test_mobilenet_v2_residual_setting or test_mobilenet_norm_layer or test_inception_v3_eval or test_fasterrcnn_double or test_googlenet_eval or test_fasterrcnn_switch_devices or test_mobilenet_v2_residual_setting or test_vitc_models or test_classification_model or test_segmentation_model or test_detection_model or test_detection_model_validation or test_video_model or test_quantized_classification_model or test_detection_model_trainable_backbone_layers or test_raft or test_build_fx_feature_extractor or test_transformation_range or test_transformation_discrete or test_batched_vs_single or test_draw_boxes)\" --durations=50 test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "av",
      "requests",
      "scipy",
      "pytest-mock"
     ],
     "source_files": [
      "test",
      "references"
     ]
    }
   },
   {
    "build": {
     "string": "cpu_py39h1234567_0"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "libjpeg-turbo",
      "libpng",
      "numpy",
      "pillow >=5.3.0,!=8.3.0,!=8.3.1",
      "pytorch =2.1=cpu*",
      "requests"
     ],
     "run": [
      "python",
      "pytorch =2.1=cpu*",
      "numpy",
      "pillow >=5.3.0,!=8.3.0,!=8.3.1",
      "requests"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest -k \"not (test_url_is_accessible or (test_transforms and test_adjust_saturation) or test_adjust_sharpness or test_forward_backward or test_jit_forward_backward or test_frame_reading or test_randomperspective_fill or test_frozenbatchnorm2d_eps or test_random_apply or test_write_video_with_audio or test_video_clips_custom_fps or test_memory_efficient_densenet or test_resnet_dilation or test_mobilenet_v2_residual_setting or test_mobilenet_norm_layer or test_inception_v3_eval or test_fasterrcnn_double or test_googlenet_eval or test_fasterrcnn_switch_devices or test_mobilenet_v2_residual_setting or test_vitc_models or test_classification_model or test_segmentation_model or test_detection_model or test_detection_model_validation or test_video_model or test_quantized_classification_model or test_detection_model_trainable_backbone_layers or test_raft or test_build_fx_feature_extractor or test_transformation_range or test_transformation_discrete or test_batched_vs_single or test_draw_boxes)\" --durations=50 test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "av",
      "requests",
      "scipy",
      "pytest-mock"
     ],
     "source_files": [
      "test",
      "references"
     ]
    }
   },
   {
    "build": {
     "string": "cpu_py311h1234567_0"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "libjpeg-turbo",
      "libpng",
      "numpy",
      "pillow >=5.3.0,!=8.3.0,!=8.3.1",
      "pytorch =2.1=cpu*",
      "requests"
     ],
     "run": [
      "python",
      "pytorch =2.1=cpu*",
      "numpy",
      "pillow >=5.3.0,!=8.3.0,!=8.3.1",
      "requests"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest -k \"not (test_url_is_accessible or (test_transforms and test_adjust_saturation) or test_adjust_sharpness or test_forward_backward or test_jit_forward_backward or test_frame_reading or test_randomperspective_fill or test_frozenbatchnorm2d_eps or test_random_apply or test_write_video_with_audio or test_video_clips_custom_fps or test_memory_efficient_densenet or test_resnet_dilation or test_mobilenet_v2_residual_setting or test_mobilenet_norm_layer or test_inception_v3_eval or test_fasterrcnn_double or test_googlenet_eval or test_fasterrcnn_switch_devices or test_mobilenet_v2_residual_setting or test_vitc_models or test_classification_model or test_segmentation_model or test_detection_model or test_detection_model_validation or test_video_model or test_quantized_classification_model or test_detection_model_trainable_backbone_layers or test_raft or test_build_fx_feature_extractor or test_transformation_range or test_transformation_discrete or test_batched_vs_single or test_draw_boxes)\" --durations=50 test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "av",
      "requests",
      "scipy",
      "pytest-mock"
     ],
     "source_files": [
      "test",
      "references"
     ]
    }
   },
   {
    "build": {
     "string": "cpu_py310h1234567_0"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "libjpeg-turbo",
      "libpng",
      "numpy",
      "pillow >=5.3.0,!=8.3.0,!=8.3.1",
      "pytorch =2.1=cpu*",
      "requests"
     ],
     "run": [
      "python",
      "pytorch =2.1=cpu*",
      "numpy",
      "pillow >=5.3.0,!=8.3.0,!=8.3.1",
      "requests"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest --verbose -k \"not (test_url_is_accessible or (test_transforms and test_adjust_saturation) or test_adjust_sharpness or test_forward_backward or test_jit_forward_backward or test_frame_reading or test_randomperspective_fill or test_frozenbatchnorm2d_eps or test_random_apply or test_write_video_with_audio or test_video_clips_custom_fps or test_memory_efficient_densenet or test_resnet_dilation or test_mobilenet_v2_residual_setting or test_mobilenet_norm_layer or test_inception_v3_eval or test_fasterrcnn_double or test_googlenet_eval or test_fasterrcnn_switch_devices or test_mobilenet_v2_residual_setting or test_vitc_models or test_classification_model or test_segmentation_model or test_detection_model or test_detection_model_validation or test_video_model or test_quantized_classification_model or test_detection_model_trainable_backbone_layers or test_raft or test_build_fx_feature_extractor or test_transformation_range or test_transformation_discrete or test_batched_vs_single or test_draw_boxes)\" --durations=50 test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "av",
      "requests",
      "scipy",
      "pytest-mock"
     ],
     "source_files": [
      "test",
      "references"
     ]
    }
   },
   {
    "build": {
     "string": "cpu_py38h1234567_0"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "libjpeg-turbo",
      "libpng",
      "numpy",
      "pillow >=5.3.0,!=8.3.0,!=8.3.1",
      "pytorch =2.1=cpu*",
      "requests"
     ],
     "run": [
      "python",
      "pytorch =2.1=cpu*",
      "numpy",
      "pillow >=5.3.0,!=8.3.0,!=8.3.1",
      "requests"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest --verbose -k \"not (test_url_is_accessible or (test_transforms and test_adjust_saturation) or test_adjust_sharpness or test_forward_backward or test_jit_forward_backward or test_frame_reading or test_randomperspective_fill or test_frozenbatchnorm2d_eps or test_random_apply or test_write_video_with_audio or test_video_clips_custom_fps or test_memory_efficient_densenet or test_resnet_dilation or test_mobilenet_v2_residual_setting or test_mobilenet_norm_layer or test_inception_v3_eval or test_fasterrcnn_double or test_googlenet_eval or test_fasterrcnn_switch_devices or test_mobilenet_v2_residual_setting or test_vitc_models or test_classification_model or test_segmentation_model or test_detection_model or test_detection_model_validation or test_video_model or test_quantized_classification_model or test_detection_model_trainable_backbone_layers or test_raft or test_build_fx_feature_extractor or test_transformation_range or test_transformation_discrete or test_batched_vs_single or test_draw_boxes)\" --durations=50 test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "av",
      "requests",
      "scipy",
      "pytest-mock"
     ],
     "source_files": [
      "test",
      "references"
     ]
    }
   },
   {
    "build": {
     "string": "cpu_py39h1234567_0"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "libjpeg-turbo",
      "libpng",
      "numpy",
      "pillow >=5.3.0,!=8.3.0,!=8.3.1",
      "pytorch =2.1=cpu*",
      "requests"
     ],
     "run": [
      "python",
      "pytorch =2.1=cpu*",
      "numpy",
      "pillow >=5.3.0,!=8.3.0,!=8.3.1",
      "requests"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest --verbose -k \"not (test_url_is_accessible or (test_transforms and test_adjust_saturation) or test_adjust_sharpness or test_forward_backward or test_jit_forward_backward or test_frame_reading or test_randomperspective_fill or test_frozenbatchnorm2d_eps or test_random_apply or test_write_video_with_audio or test_video_clips_custom_fps or test_memory_efficient_densenet or test_resnet_dilation or test_mobilenet_v2_residual_setting or test_mobilenet_norm_layer or test_inception_v3_eval or test_fasterrcnn_double or test_googlenet_eval or test_fasterrcnn_switch_devices or test_mobilenet_v2_residual_setting or test_vitc_models or test_classification_model or test_segmentation_model or test_detection_model or test_detection_model_validation or test_video_model or test_quantized_classification_model or test_detection_model_trainable_backbone_layers or test_raft or test_build_fx_feature_extractor or test_transformation_range or test_transformation_discrete or test_batched_vs_single or test_draw_boxes)\" --durations=50 test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "av",
      "requests",
      "scipy",
      "pytest-mock"
     ],
     "source_files": [
      "test",
      "references"
     ]
    }
   },
   {
    "build": {
     "string": "cpu_py311h1234567_0"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "libjpeg-turbo",
      "libpng",
      "numpy",
      "pillow >=5.3.0,!=8.3.0,!=8.3.1",
      "pytorch =2.1=cpu*",
      "requests"
     ],
     "run": [
      "python",
      "pytorch =2.1=cpu*",
      "numpy",
      "pillow >=5.3.0,!=8.3.0,!=8.3.1",
      "requests"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest --verbose -k \"not (test_url_is_accessible or (test_transforms and test_adjust_saturation) or test_adjust_sharpness or test_forward_backward or test_jit_forward_backward or test_frame_reading or test_randomperspective_fill or test_frozenbatchnorm2d_eps or test_random_apply or test_write_video_with_audio or test_video_clips_custom_fps or test_memory_efficient_densenet or test_resnet_dilation or test_mobilenet_v2_residual_setting or test_mobilenet_norm_layer or test_inception_v3_eval or test_fasterrcnn_double or test_googlenet_eval or test_fasterrcnn_switch_devices or test_mobilenet_v2_residual_setting or test_vitc_models or test_classification_model or test_segmentation_model or test_detection_model or test_detection_model_validation or test_video_model or test_quantized_classification_model or test_detection_model_trainable_backbone_layers or test_raft or test_build_fx_feature_extractor or test_transformation_range or test_transformation_discrete or test_batched_vs_single or test_draw_boxes)\" --durations=50 test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "av",
      "requests",
      "scipy",
      "pytest-mock"
     ],
     "source_files": [
      "test",
      "references"
     ]
    }
   },
   {
    "build": {
     "string": "cpu_py310h1234567_0"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "libjpeg-turbo",
      "libpng",
      "numpy",
      "pillow >=5.3.0,!=8.3.0,!=8.3.1",
      "pytorch =2.1=cpu*",
      "requests"
     ],
     "run": [
      "python",
      "pytorch =2.1=cpu*",
      "numpy",
      "pillow >=5.3.0,!=8.3.0,!=8.3.1",
      "requests"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest --verbose -k \"not (test_url_is_accessible or (test_transforms and test_adjust_saturation) or test_adjust_sharpness or test_forward_backward or test_jit_forward_backward or test_frame_reading or test_randomperspective_fill or test_frozenbatchnorm2d_eps or test_random_apply or test_write_video_with_audio or test_video_clips_custom_fps or test_memory_efficient_densenet or test_resnet_dilation or test_mobilenet_v2_residual_setting or test_mobilenet_norm_layer or test_inception_v3_eval or test_fasterrcnn_double or test_googlenet_eval or test_fasterrcnn_switch_devices or test_mobilenet_v2_residual_setting or test_vitc_models or test_classification_model or test_segmentation_model or test_detection_model or test_detection_model_validation or test_video_model or test_quantized_classification_model or test_detection_model_trainable_backbone_layers or test_raft or test_build_fx_feature_extractor or test_transformation_range or test_transformation_discrete or test_batched_vs_single or test_draw_boxes)\" --durations=50 test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "av",
      "requests",
      "scipy",
      "pytest-mock"
     ],
     "source_files": [
      "test",
      "references"
     ]
    }
   },
   {
    "build": {
     "string": "cpu_py38h1234567_0"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "libjpeg-turbo",
      "libpng",
      "numpy",
      "pillow >=5.3.0,!=8.3.0,!=8.3.1",
      "pytorch =2.1=cpu*",
      "requests"
     ],
     "run": [
      "python",
      "pytorch =2.1=cpu*",
      "numpy",
      "pillow >=5.3.0,!=8.3.0,!=8.3.1",
      "requests"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest --verbose -k \"not (test_url_is_accessible or (test_transforms and test_adjust_saturation) or test_adjust_sharpness or test_forward_backward or test_jit_forward_backward or test_frame_reading or test_randomperspective_fill or test_frozenbatchnorm2d_eps or test_random_apply or test_write_video_with_audio or test_video_clips_custom_fps or test_memory_efficient_densenet or test_resnet_dilation or test_mobilenet_v2_residual_setting or test_mobilenet_norm_layer or test_inception_v3_eval or test_fasterrcnn_double or test_googlenet_eval or test_fasterrcnn_switch_devices or test_mobilenet_v2_residual_setting or test_vitc_models or test_classification_model or test_segmentation_model or test_detection_model or test_detection_model_validation or test_video_model or test_quantized_classification_model or test_detection_model_trainable_backbone_layers or test_raft or test_build_fx_feature_extractor or test_transformation_range or test_transformation_discrete or test_batched_vs_single or test_draw_boxes)\" --durations=50 test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "av",
      "requests",
      "scipy",
      "pytest-mock"
     ],
     "source_files": [
      "test",
      "references"
     ]
    }
   },
   {
    "build": {
     "string": "cpu_py39h1234567_0"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "libjpeg-turbo",
      "libpng",
      "numpy",
      "pillow >=5.3.0,!=8.3.0,!=8.3.1",
      "pytorch =2.1=cpu*",
      "requests"
     ],
     "run": [
      "python",
      "pytorch =2.1=cpu*",
      "numpy",
      "pillow >=5.3.0,!=8.3.0,!=8.3.1",
      "requests"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest --verbose -k \"not (test_url_is_accessible or (test_transforms and test_adjust_saturation) or test_adjust_sharpness or test_forward_backward or test_jit_forward_backward or test_frame_reading or test_randomperspective_fill or test_frozenbatchnorm2d_eps or test_random_apply or test_write_video_with_audio or test_video_clips_custom_fps or test_memory_efficient_densenet or test_resnet_dilation or test_mobilenet_v2_residual_setting or test_mobilenet_norm_layer or test_inception_v3_eval or test_fasterrcnn_double or test_googlenet_eval or test_fasterrcnn_switch_devices or test_mobilenet_v2_residual_setting or test_vitc_models or test_classification_model or test_segmentation_model or test_detection_model or test_detection_model_validation or test_video_model or test_quantized_classification_model or test_detection_model_trainable_backbone_layers or test_raft or test_build_fx_feature_extractor or test_transformation_range or test_transformation_discrete or test_batched_vs_single or test_draw_boxes)\" --durations=50 test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "av",
      "requests",
      "scipy",
      "pytest-mock"
     ],
     "source_files": [
      "test",
      "references"
     ]
    }
   },
   {
    "build": {
     "string": "cpu_py311h1234567_0"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "libjpeg-turbo",
      "libpng",
      "numpy",
      "pillow >=5.3.0,!=8.3.0,!=8.3.1",
      "pytorch =2.1=cpu*",
      "requests"
     ],
     "run": [
      "python",
      "pytorch =2.1=cpu*",
      "numpy",
      "pillow >=5.3.0,!=8.3.0,!=8.3.1",
      "requests"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest --verbose -k \"not (test_url_is_accessible or (test_transforms and test_adjust_saturation) or test_adjust_sharpness or test_forward_backward or test_jit_forward_backward or test_frame_reading or test_randomperspective_fill or test_frozenbatchnorm2d_eps or test_random_apply or test_write_video_with_audio or test_video_clips_custom_fps or test_memory_efficient_densenet or test_resnet_dilation or test_mobilenet_v2_residual_setting or test_mobilenet_norm_layer or test_inception_v3_eval or test_fasterrcnn_double or test_googlenet_eval or test_fasterrcnn_switch_devices or test_mobilenet_v2_residual_setting or test_vitc_models or test_classification_model or test_segmentation_model or test_detection_model or test_detection_model_validation or test_video_model or test_quantized_classification_model or test_detection_model_trainable_backbone_layers or test_raft or test_build_fx_feature_extractor or test_transformation_range or test_transformation_discrete or test_batched_vs_single or test_draw_boxes)\" --durations=50 test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "av",
      "requests",
      "scipy",
      "pytest-mock"
     ],
     "source_files": [
      "test",
      "references"
     ]
    }
   }
  ],
  "package": {
   "name": "torchvision-split",
   "version": "0.16.1"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "source": {
   "patches": [
    "0001-Monkeypatch-TORCH_LIB_PATH.patch",
    "0001-Monkeypatch-TORCH_LIB_PATH.patch",
    "0001-Monkeypatch-TORCH_LIB_PATH.patch",
    "0001-Monkeypatch-TORCH_LIB_PATH.patch",
    "0001-Monkeypatch-TORCH_LIB_PATH.patch",
    "0001-Monkeypatch-TORCH_LIB_PATH.patch",
    "0001-Monkeypatch-TORCH_LIB_PATH.patch",
    "0001-Monkeypatch-TORCH_LIB_PATH.patch",
    "0001-Monkeypatch-TORCH_LIB_PATH.patch",
    "0001-Monkeypatch-TORCH_LIB_PATH.patch",
    "0001-Monkeypatch-TORCH_LIB_PATH.patch",
    "0001-Monkeypatch-TORCH_LIB_PATH.patch",
    "0001-Monkeypatch-TORCH_LIB_PATH.patch",
    "0001-Monkeypatch-TORCH_LIB_PATH.patch",
    "0001-Monkeypatch-TORCH_LIB_PATH.patch",
    "0001-Monkeypatch-TORCH_LIB_PATH.patch",
    "0001-Monkeypatch-TORCH_LIB_PATH.patch",
    "0001-Monkeypatch-TORCH_LIB_PATH.patch",
    "0001-Monkeypatch-TORCH_LIB_PATH.patch",
    "0001-Monkeypatch-TORCH_LIB_PATH.patch"
   ],
   "sha256": "d31fe52e4540750c8d372b0f38f1bfa81d8261193f2c2c06577332831d203c50",
   "url": "https://github.com/pytorch/vision/archive/v0.16.1.tar.gz"
  }
 },
 "name": "torchvision-split",
 "osx_64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/pytorch/vision",
   "doc_url": "http://pytorch.org/docs/master/torchvision",
   "home": "http://pytorch.org/",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "Image and video datasets and models for torch deep learning"
  },
  "build": {
   "number": "0",
   "rpaths": [
    "lib/",
    "SP_DIR/torch/lib/",
    "lib/",
    "SP_DIR/torch/lib/",
    "lib/",
    "SP_DIR/torch/lib/",
    "lib/",
    "SP_DIR/torch/lib/"
   ]
  },
  "extra": {
   "feedstock-name": "torchvision",
   "recipe-maintainers": [
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari",
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari",
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari",
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari"
   ]
  },
  "outputs": [
   {
    "build": {
     "string": "cpu_py310h1234567_0"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "libjpeg-turbo",
      "libpng",
      "numpy",
      "pillow >=5.3.0,!=8.3.0,!=8.3.1",
      "pytorch =2.1=cpu*",
      "requests"
     ],
     "run": [
      "python",
      "pytorch =2.1=cpu*",
      "numpy",
      "pillow >=5.3.0,!=8.3.0,!=8.3.1",
      "requests"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest --verbose -k \"not (test_url_is_accessible or (test_transforms and test_adjust_saturation) or test_adjust_sharpness or test_forward_backward or test_jit_forward_backward or test_frame_reading or test_randomperspective_fill or test_frozenbatchnorm2d_eps or test_random_apply or test_write_video_with_audio or test_video_clips_custom_fps or test_memory_efficient_densenet or test_resnet_dilation or test_mobilenet_v2_residual_setting or test_mobilenet_norm_layer or test_inception_v3_eval or test_fasterrcnn_double or test_googlenet_eval or test_fasterrcnn_switch_devices or test_mobilenet_v2_residual_setting or test_vitc_models or test_classification_model or test_segmentation_model or test_detection_model or test_detection_model_validation or test_video_model or test_quantized_classification_model or test_detection_model_trainable_backbone_layers or test_raft or test_build_fx_feature_extractor or test_transformation_range or test_transformation_discrete or test_batched_vs_single or test_draw_boxes)\" --durations=50 test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "av",
      "requests",
      "scipy",
      "pytest-mock"
     ],
     "source_files": [
      "test",
      "references"
     ]
    }
   },
   {
    "build": {
     "string": "cpu_py38h1234567_0"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "libjpeg-turbo",
      "libpng",
      "numpy",
      "pillow >=5.3.0,!=8.3.0,!=8.3.1",
      "pytorch =2.1=cpu*",
      "requests"
     ],
     "run": [
      "python",
      "pytorch =2.1=cpu*",
      "numpy",
      "pillow >=5.3.0,!=8.3.0,!=8.3.1",
      "requests"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest --verbose -k \"not (test_url_is_accessible or (test_transforms and test_adjust_saturation) or test_adjust_sharpness or test_forward_backward or test_jit_forward_backward or test_frame_reading or test_randomperspective_fill or test_frozenbatchnorm2d_eps or test_random_apply or test_write_video_with_audio or test_video_clips_custom_fps or test_memory_efficient_densenet or test_resnet_dilation or test_mobilenet_v2_residual_setting or test_mobilenet_norm_layer or test_inception_v3_eval or test_fasterrcnn_double or test_googlenet_eval or test_fasterrcnn_switch_devices or test_mobilenet_v2_residual_setting or test_vitc_models or test_classification_model or test_segmentation_model or test_detection_model or test_detection_model_validation or test_video_model or test_quantized_classification_model or test_detection_model_trainable_backbone_layers or test_raft or test_build_fx_feature_extractor or test_transformation_range or test_transformation_discrete or test_batched_vs_single or test_draw_boxes)\" --durations=50 test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "av",
      "requests",
      "scipy",
      "pytest-mock"
     ],
     "source_files": [
      "test",
      "references"
     ]
    }
   },
   {
    "build": {
     "string": "cpu_py39h1234567_0"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "libjpeg-turbo",
      "libpng",
      "numpy",
      "pillow >=5.3.0,!=8.3.0,!=8.3.1",
      "pytorch =2.1=cpu*",
      "requests"
     ],
     "run": [
      "python",
      "pytorch =2.1=cpu*",
      "numpy",
      "pillow >=5.3.0,!=8.3.0,!=8.3.1",
      "requests"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest --verbose -k \"not (test_url_is_accessible or (test_transforms and test_adjust_saturation) or test_adjust_sharpness or test_forward_backward or test_jit_forward_backward or test_frame_reading or test_randomperspective_fill or test_frozenbatchnorm2d_eps or test_random_apply or test_write_video_with_audio or test_video_clips_custom_fps or test_memory_efficient_densenet or test_resnet_dilation or test_mobilenet_v2_residual_setting or test_mobilenet_norm_layer or test_inception_v3_eval or test_fasterrcnn_double or test_googlenet_eval or test_fasterrcnn_switch_devices or test_mobilenet_v2_residual_setting or test_vitc_models or test_classification_model or test_segmentation_model or test_detection_model or test_detection_model_validation or test_video_model or test_quantized_classification_model or test_detection_model_trainable_backbone_layers or test_raft or test_build_fx_feature_extractor or test_transformation_range or test_transformation_discrete or test_batched_vs_single or test_draw_boxes)\" --durations=50 test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "av",
      "requests",
      "scipy",
      "pytest-mock"
     ],
     "source_files": [
      "test",
      "references"
     ]
    }
   },
   {
    "build": {
     "string": "cpu_py311h1234567_0"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "libjpeg-turbo",
      "libpng",
      "numpy",
      "pillow >=5.3.0,!=8.3.0,!=8.3.1",
      "pytorch =2.1=cpu*",
      "requests"
     ],
     "run": [
      "python",
      "pytorch =2.1=cpu*",
      "numpy",
      "pillow >=5.3.0,!=8.3.0,!=8.3.1",
      "requests"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest --verbose -k \"not (test_url_is_accessible or (test_transforms and test_adjust_saturation) or test_adjust_sharpness or test_forward_backward or test_jit_forward_backward or test_frame_reading or test_randomperspective_fill or test_frozenbatchnorm2d_eps or test_random_apply or test_write_video_with_audio or test_video_clips_custom_fps or test_memory_efficient_densenet or test_resnet_dilation or test_mobilenet_v2_residual_setting or test_mobilenet_norm_layer or test_inception_v3_eval or test_fasterrcnn_double or test_googlenet_eval or test_fasterrcnn_switch_devices or test_mobilenet_v2_residual_setting or test_vitc_models or test_classification_model or test_segmentation_model or test_detection_model or test_detection_model_validation or test_video_model or test_quantized_classification_model or test_detection_model_trainable_backbone_layers or test_raft or test_build_fx_feature_extractor or test_transformation_range or test_transformation_discrete or test_batched_vs_single or test_draw_boxes)\" --durations=50 test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "av",
      "requests",
      "scipy",
      "pytest-mock"
     ],
     "source_files": [
      "test",
      "references"
     ]
    }
   }
  ],
  "package": {
   "name": "torchvision-split",
   "version": "0.16.1"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "source": {
   "patches": [
    "0001-Monkeypatch-TORCH_LIB_PATH.patch",
    "0001-Monkeypatch-TORCH_LIB_PATH.patch",
    "0001-Monkeypatch-TORCH_LIB_PATH.patch",
    "0001-Monkeypatch-TORCH_LIB_PATH.patch"
   ],
   "sha256": "d31fe52e4540750c8d372b0f38f1bfa81d8261193f2c2c06577332831d203c50",
   "url": "https://github.com/pytorch/vision/archive/v0.16.1.tar.gz"
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "libjpeg-turbo",
    "libpng",
    "numpy",
    "pillow",
    "pip",
    "python",
    "pytorch",
    "requests",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "pillow",
    "python",
    "pytorch",
    "requests"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "av",
    "pytest",
    "pytest-mock",
    "requests",
    "scipy"
   ]
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/pytorch/vision",
   "doc_url": "http://pytorch.org/docs/master/torchvision",
   "home": "http://pytorch.org/",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "Image and video datasets and models for torch deep learning"
  },
  "build": {
   "number": "0",
   "rpaths": [
    "lib/",
    "SP_DIR/torch/lib/",
    "lib/",
    "SP_DIR/torch/lib/",
    "lib/",
    "SP_DIR/torch/lib/",
    "lib/",
    "SP_DIR/torch/lib/"
   ]
  },
  "extra": {
   "feedstock-name": "torchvision",
   "recipe-maintainers": [
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari",
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari",
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari",
    "nehaljwani",
    "hmaarrfk",
    "h-vetinari"
   ]
  },
  "outputs": [
   {
    "build": {
     "string": "cpu_py310h1234567_0"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "libjpeg-turbo",
      "libpng",
      "numpy",
      "pillow >=5.3.0,!=8.3.0,!=8.3.1",
      "pytorch =2.1=cpu*",
      "requests"
     ],
     "run": [
      "python",
      "pytorch =2.1=cpu*",
      "numpy",
      "pillow >=5.3.0,!=8.3.0,!=8.3.1",
      "requests"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest --verbose -k \"not (test_url_is_accessible or (test_transforms and test_adjust_saturation) or test_adjust_sharpness or test_forward_backward or test_jit_forward_backward or test_frame_reading or test_randomperspective_fill or test_frozenbatchnorm2d_eps or test_random_apply or test_write_video_with_audio or test_video_clips_custom_fps or test_memory_efficient_densenet or test_resnet_dilation or test_mobilenet_v2_residual_setting or test_mobilenet_norm_layer or test_inception_v3_eval or test_fasterrcnn_double or test_googlenet_eval or test_fasterrcnn_switch_devices or test_mobilenet_v2_residual_setting or test_vitc_models or test_classification_model or test_segmentation_model or test_detection_model or test_detection_model_validation or test_video_model or test_quantized_classification_model or test_detection_model_trainable_backbone_layers or test_raft or test_build_fx_feature_extractor or test_transformation_range or test_transformation_discrete or test_batched_vs_single or test_draw_boxes)\" --durations=50 test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "av",
      "requests",
      "scipy",
      "pytest-mock"
     ],
     "source_files": [
      "test",
      "references"
     ]
    }
   },
   {
    "build": {
     "string": "cpu_py38h1234567_0"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "libjpeg-turbo",
      "libpng",
      "numpy",
      "pillow >=5.3.0,!=8.3.0,!=8.3.1",
      "pytorch =2.1=cpu*",
      "requests"
     ],
     "run": [
      "python",
      "pytorch =2.1=cpu*",
      "numpy",
      "pillow >=5.3.0,!=8.3.0,!=8.3.1",
      "requests"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest --verbose -k \"not (test_url_is_accessible or (test_transforms and test_adjust_saturation) or test_adjust_sharpness or test_forward_backward or test_jit_forward_backward or test_frame_reading or test_randomperspective_fill or test_frozenbatchnorm2d_eps or test_random_apply or test_write_video_with_audio or test_video_clips_custom_fps or test_memory_efficient_densenet or test_resnet_dilation or test_mobilenet_v2_residual_setting or test_mobilenet_norm_layer or test_inception_v3_eval or test_fasterrcnn_double or test_googlenet_eval or test_fasterrcnn_switch_devices or test_mobilenet_v2_residual_setting or test_vitc_models or test_classification_model or test_segmentation_model or test_detection_model or test_detection_model_validation or test_video_model or test_quantized_classification_model or test_detection_model_trainable_backbone_layers or test_raft or test_build_fx_feature_extractor or test_transformation_range or test_transformation_discrete or test_batched_vs_single or test_draw_boxes)\" --durations=50 test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "av",
      "requests",
      "scipy",
      "pytest-mock"
     ],
     "source_files": [
      "test",
      "references"
     ]
    }
   },
   {
    "build": {
     "string": "cpu_py39h1234567_0"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "libjpeg-turbo",
      "libpng",
      "numpy",
      "pillow >=5.3.0,!=8.3.0,!=8.3.1",
      "pytorch =2.1=cpu*",
      "requests"
     ],
     "run": [
      "python",
      "pytorch =2.1=cpu*",
      "numpy",
      "pillow >=5.3.0,!=8.3.0,!=8.3.1",
      "requests"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest --verbose -k \"not (test_url_is_accessible or (test_transforms and test_adjust_saturation) or test_adjust_sharpness or test_forward_backward or test_jit_forward_backward or test_frame_reading or test_randomperspective_fill or test_frozenbatchnorm2d_eps or test_random_apply or test_write_video_with_audio or test_video_clips_custom_fps or test_memory_efficient_densenet or test_resnet_dilation or test_mobilenet_v2_residual_setting or test_mobilenet_norm_layer or test_inception_v3_eval or test_fasterrcnn_double or test_googlenet_eval or test_fasterrcnn_switch_devices or test_mobilenet_v2_residual_setting or test_vitc_models or test_classification_model or test_segmentation_model or test_detection_model or test_detection_model_validation or test_video_model or test_quantized_classification_model or test_detection_model_trainable_backbone_layers or test_raft or test_build_fx_feature_extractor or test_transformation_range or test_transformation_discrete or test_batched_vs_single or test_draw_boxes)\" --durations=50 test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "av",
      "requests",
      "scipy",
      "pytest-mock"
     ],
     "source_files": [
      "test",
      "references"
     ]
    }
   },
   {
    "build": {
     "string": "cpu_py311h1234567_0"
    },
    "name": "torchvision",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "libjpeg-turbo",
      "libpng",
      "numpy",
      "pillow >=5.3.0,!=8.3.0,!=8.3.1",
      "pytorch =2.1=cpu*",
      "requests"
     ],
     "run": [
      "python",
      "pytorch =2.1=cpu*",
      "numpy",
      "pillow >=5.3.0,!=8.3.0,!=8.3.1",
      "requests"
     ]
    },
    "script": "build-torch.sh",
    "test": {
     "commands": [
      "pytest --verbose -k \"not (test_url_is_accessible or (test_transforms and test_adjust_saturation) or test_adjust_sharpness or test_forward_backward or test_jit_forward_backward or test_frame_reading or test_randomperspective_fill or test_frozenbatchnorm2d_eps or test_random_apply or test_write_video_with_audio or test_video_clips_custom_fps or test_memory_efficient_densenet or test_resnet_dilation or test_mobilenet_v2_residual_setting or test_mobilenet_norm_layer or test_inception_v3_eval or test_fasterrcnn_double or test_googlenet_eval or test_fasterrcnn_switch_devices or test_mobilenet_v2_residual_setting or test_vitc_models or test_classification_model or test_segmentation_model or test_detection_model or test_detection_model_validation or test_video_model or test_quantized_classification_model or test_detection_model_trainable_backbone_layers or test_raft or test_build_fx_feature_extractor or test_transformation_range or test_transformation_discrete or test_batched_vs_single or test_draw_boxes)\" --durations=50 test/"
     ],
     "imports": [
      "torchvision",
      "torchvision.datasets",
      "torchvision.models",
      "torchvision.transforms",
      "torchvision.utils"
     ],
     "requires": [
      "pytest",
      "av",
      "requests",
      "scipy",
      "pytest-mock"
     ],
     "source_files": [
      "test",
      "references"
     ]
    }
   }
  ],
  "package": {
   "name": "torchvision-split",
   "version": "0.16.1"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "source": {
   "patches": [
    "0001-Monkeypatch-TORCH_LIB_PATH.patch",
    "0001-Monkeypatch-TORCH_LIB_PATH.patch",
    "0001-Monkeypatch-TORCH_LIB_PATH.patch",
    "0001-Monkeypatch-TORCH_LIB_PATH.patch"
   ],
   "sha256": "d31fe52e4540750c8d372b0f38f1bfa81d8261193f2c2c06577332831d203c50",
   "url": "https://github.com/pytorch/vision/archive/v0.16.1.tar.gz"
  }
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "libjpeg-turbo",
    "libpng",
    "numpy",
    "pillow",
    "pip",
    "python",
    "pytorch",
    "requests",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "pillow",
    "python",
    "pytorch",
    "requests"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "av",
    "pytest",
    "pytest-mock",
    "requests",
    "scipy"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "torchvision"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "linux_64",
  "linux_aarch64",
  "osx_64",
  "osx_arm64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/torchvision.json"
 },
 "raw_meta_yaml": "{% set version = \"0.16.1\" %}\n# see github.com/conda-forge/conda-forge.github.io/issues/1059 for naming discussion\n# torchvision requires that CUDA major and minor versions match with pytorch\n# https://github.com/pytorch/vision/blob/fa99a5360fbcd1683311d57a76fcc0e7323a4c1e/torchvision/extension.py#L79C1-L85C1\n{% set torch_proc_type = \"cuda\" ~ cuda_compiler_version | replace('.', '') if cuda_compiler_version != \"None\" else \"cpu\" %}\n# Upstream has specific compatability ranges for pytorch and python which are\n# updated every 0.x release. https://github.com/pytorch/vision#installation\n{% set compatible_pytorch = \"2.1\" %}\n\npackage:\n  name: torchvision-split\n  version: {{ version }}\n\nsource:\n  url: https://github.com/pytorch/vision/archive/v{{ version }}.tar.gz\n  sha256: d31fe52e4540750c8d372b0f38f1bfa81d8261193f2c2c06577332831d203c50\n  patches:\n    - 0001-Monkeypatch-TORCH_LIB_PATH.patch\n\nbuild:\n  number: 0\n  skip: true  # [win]\n  # as of pytorch 1.13, conda-forge only builds for CUDA 11.2+, see\n  # https://github.com/conda-forge/conda-forge-pinning-feedstock/issues/3491\n  skip: true  # [cuda_compiler_version in (\"10.2\", \"11.0\", \"11.1\")]\n  # no CUDA-enabled pytorch on aarch yet\n  skip: true  # [cuda_compiler_version != \"None\" and aarch64]\n  # Upstream has specific compatability ranges for pytorch and python which are\n  # updated every 0.x release. https://github.com/pytorch/vision#installation\n  skip: true  # [py < 38]\n  skip: true  # [py > 311]\n  rpaths:\n    - lib/\n  # PyTorch libs are in site-packages intead of with other shared objects\n    - {{ SP_DIR }}/torch/lib/\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n\noutputs:\n  - name: torchvision\n    script: build-torch.sh  # [not win]\n    script: build-torch.bat  # [win]\n    build:\n      string: cpu_py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version == \"None\"]\n      string: cuda{{ cuda_compiler_version | replace('.', '') }}py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version != \"None\"]\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - {{ compiler('cuda') }}                 # [cuda_compiler_version != \"None\"]\n        - sysroot_linux-64 ==2.17                # [linux64]\n        - python                                 # [build_platform != target_platform]\n        - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n        - numpy                                  # [build_platform != target_platform]\n        - pytorch ={{ compatible_pytorch }}={{ torch_proc_type }}*  # [build_platform != target_platform]\n      host:\n        - python\n        - pip\n        - setuptools\n        - cudnn                                  # [cuda_compiler_version != \"None\"]\n        # split off image/video into separate outputs?\n        - libjpeg-turbo\n        - libpng\n        # Specify lgpl version of ffmpeg so that there are\n        # no quesitons about the license of the resulting binary\n        # hmaarrfk: 2022/07, I think that torchvision just has bugs with ffmpeg\n        # - ffmpeg {{ ffmpeg }}=lgpl_*\n        - numpy\n        # exclude 8.3.0 and 8.3.1 specifically due to pytorch/vision#4146, python-pillow/Pillow#5571\n        - pillow >=5.3.0,!=8.3.0,!=8.3.1\n        - pytorch ={{ compatible_pytorch }}={{ torch_proc_type }}*\n        - requests\n      run:\n        - python\n        - pytorch ={{ compatible_pytorch }}={{ torch_proc_type }}*\n        - {{ pin_compatible('cudnn') }}          # [cuda_compiler_version != \"None\"]\n        - {{ pin_compatible('numpy') }}\n        - pillow >=5.3.0,!=8.3.0,!=8.3.1\n        - requests\n\n    test:\n      requires:\n        - pytest\n        - av\n        - requests\n        - scipy\n        - pytest-mock\n      source_files:\n        - test\n        - references\n      imports:\n        - torchvision\n        - torchvision.datasets\n        - torchvision.models\n        - torchvision.transforms\n        - torchvision.utils\n      commands:\n        # skip test_url_is_accessible instead of hitting 20+ servers per run, since\n        # each server might be occasionally unresponsive and end up failing our CI\n        {% set tests_to_skip = \"test_url_is_accessible\" %}\n        # spurious failure because upstream skip (Image.__version__ >= \"7\") does not trigger for Pillow \"10\"\n        {% set tests_to_skip = tests_to_skip + \" or (test_transforms and test_adjust_saturation)\" %}\n        # osx warns with nnpack if there is no AVX2, see conda-forge/pytorch-cpu-feedstock#56\n        {% set tests_to_skip = tests_to_skip + \" or test_adjust_sharpness\" %}  # [osx]\n        # 2021/10/28 hmaarrfk: I am able to run it locally on a large machine.\n        # It seems to fail around testing of vgg\n        # This test seems to just destroy the memory of the system.\n        {% set tests_to_skip = tests_to_skip + \" or test_forward_backward\" %}\n        {% set tests_to_skip = tests_to_skip + \" or test_jit_forward_backward\" %}\n        # 2022/01/21 hmaarrfk (test_frame_reading)\n        # They indicate that there can be a 1% error in their test.\n        # However, this test seems to causing the CIs to fail when this\n        # case is hit. For example the last CI failed with\n        #\n        # >                   assert mean_delta.item() < 2.5\n        # E                   assert 2.502098560333252 < 2.5\n        {% set tests_to_skip = tests_to_skip + \" or test_frame_reading\" %}\n        # Random perspective tests can fail if the perspective is too sharp\n        # https://github.com/conda-forge/torchvision-feedstock/issues/38\n        {% set tests_to_skip = tests_to_skip + \" or test_randomperspective_fill\" %}\n        # Tolerance on the test_frozenbatchnorm2d_eps test seems to be too strict\n        {% set tests_to_skip = tests_to_skip + \" or test_frozenbatchnorm2d_eps\" %}\n        {% set tests_to_skip = tests_to_skip + \" or test_random_apply\" %}\n        # 2022/03/29 hmaarrfk\n        # It seems that this test can cause segmentation faults on the CIs.\n        {% set tests_to_skip = tests_to_skip + \" or test_write_video_with_audio\" %}\n        {% set tests_to_skip = tests_to_skip + \" or test_video_clips_custom_fps\" %}\n        # 2022/07 hmaarrfk really large memory tests. Fail on CIs\n        {% set tests_to_skip = tests_to_skip + \" or test_memory_efficient_densenet\" %}\n        {% set tests_to_skip = tests_to_skip + \" or test_resnet_dilation\" %}\n        {% set tests_to_skip = tests_to_skip + \" or test_mobilenet_v2_residual_setting\" %}\n        {% set tests_to_skip = tests_to_skip + \" or test_mobilenet_norm_layer\" %}\n        {% set tests_to_skip = tests_to_skip + \" or test_inception_v3_eval\" %}\n        {% set tests_to_skip = tests_to_skip + \" or test_fasterrcnn_double\" %}\n        {% set tests_to_skip = tests_to_skip + \" or test_googlenet_eval\" %}\n        {% set tests_to_skip = tests_to_skip + \" or test_fasterrcnn_switch_devices\" %}\n        {% set tests_to_skip = tests_to_skip + \" or test_mobilenet_v2_residual_setting\" %}\n        {% set tests_to_skip = tests_to_skip + \" or test_vitc_models\" %}\n        {% set tests_to_skip = tests_to_skip + \" or test_classification_model\" %}\n        {% set tests_to_skip = tests_to_skip + \" or test_segmentation_model\" %}\n        {% set tests_to_skip = tests_to_skip + \" or test_detection_model\" %}\n        {% set tests_to_skip = tests_to_skip + \" or test_detection_model_validation\" %}\n        {% set tests_to_skip = tests_to_skip + \" or test_video_model\" %}\n        {% set tests_to_skip = tests_to_skip + \" or test_quantized_classification_model\" %}\n        {% set tests_to_skip = tests_to_skip + \" or test_detection_model_trainable_backbone_layers\" %}\n        {% set tests_to_skip = tests_to_skip + \" or test_raft\" %}\n        {% set tests_to_skip = tests_to_skip + \" or test_build_fx_feature_extractor\" %}\n        # 2023/01 These tests fail on newer numpy with module 'numpy' has no attribute 'int'\n        {% set tests_to_skip = tests_to_skip + \" or test_transformation_range\" %}\n        {% set tests_to_skip = tests_to_skip + \" or test_transformation_discrete\" %}\n        # 2023/05 The gaussian blur tests are known to be flaky due to some non-determinism on CUDA (see pytorch/vision#6755)\n        {% set tests_to_skip = tests_to_skip + \" or test_batched_vs_single\" %}\n        # 2023/11 Draw boxes test broken by pillow 1.10.0, but is non-critical and the test is patched upstream (pytorch/vision#8051)\n        {% set tests_to_skip = tests_to_skip + \" or test_draw_boxes\" %}\n        - pytest --verbose -k \"not ({{ tests_to_skip }})\" --durations=50 test/  # [not aarch64]\n        - pytest -k \"not ({{ tests_to_skip }})\" --durations=50 test/  # [aarch64 and (build_platform == target_platform)]\n\nabout:\n  home: http://pytorch.org/\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE\n  summary: Image and video datasets and models for torch deep learning\n  dev_url: https://github.com/pytorch/vision\n  doc_url: http://pytorch.org/docs/master/torchvision\n\nextra:\n  recipe-maintainers:\n    - nehaljwani\n    - hmaarrfk\n    - h-vetinari\n  feedstock-name: torchvision\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "cuda_compiler_stub",
   "cudnn",
   "cxx_compiler_stub",
   "libjpeg-turbo",
   "libpng",
   "numpy",
   "pillow",
   "pip",
   "python",
   "pytorch",
   "requests",
   "setuptools",
   "sysroot_linux-64"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "sysroot_linux-64"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda_compiler_stub",
    "cudnn",
    "cxx_compiler_stub",
    "libjpeg-turbo",
    "libpng",
    "numpy",
    "pillow",
    "pip",
    "python",
    "pytorch",
    "requests",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda_compiler_stub",
    "cudnn",
    "cxx_compiler_stub",
    "numpy",
    "pillow",
    "python",
    "pytorch",
    "requests"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "av",
    "pytest",
    "pytest-mock",
    "requests",
    "scipy"
   ]
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "sysroot_linux-64 ==2.17"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cudnn",
    "libjpeg-turbo",
    "libpng",
    "numpy",
    "pillow >=5.3.0,!=8.3.0,!=8.3.1",
    "pip",
    "python",
    "pytorch =2.1=cpu*",
    "pytorch =2.1=cuda112*",
    "requests",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cudnn",
    "numpy",
    "pillow >=5.3.0,!=8.3.0,!=8.3.1",
    "python",
    "pytorch =2.1=cpu*",
    "pytorch =2.1=cuda112*",
    "requests"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "av",
    "pytest",
    "pytest-mock",
    "requests",
    "scipy"
   ]
  }
 },
 "url": "https://github.com/pytorch/vision/archive/v0.16.1.tar.gz",
 "version": "0.16.1",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/torchvision.json"
 }
}