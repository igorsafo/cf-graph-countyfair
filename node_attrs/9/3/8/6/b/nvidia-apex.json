{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "conda_build": {
   "pkg_format": "2"
  },
  "conda_forge_output_validation": true,
  "github": {
   "branch_name": "main",
   "tooling_branch_name": "main"
  }
 },
 "feedstock_name": "nvidia-apex",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/NVIDIA/apex",
   "doc_url": "https://nvidia.github.io/apex/",
   "home": "https://nvidia.github.io/apex/",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "a Pytorch extension with NVIDIA-maintained utilities to streamline mixed precision and distributed training."
  },
  "build": {
   "number": "3"
  },
  "extra": {
   "feedstock-name": "nvidia-apex",
   "recipe-maintainers": [
    "h-vetinari",
    "oblute",
    "benhuff",
    "jakirkham",
    "rluria14",
    "h-vetinari",
    "oblute",
    "benhuff",
    "jakirkham",
    "rluria14",
    "h-vetinari",
    "oblute",
    "benhuff",
    "jakirkham",
    "rluria14",
    "h-vetinari",
    "oblute",
    "benhuff",
    "jakirkham",
    "rluria14",
    "h-vetinari",
    "oblute",
    "benhuff",
    "jakirkham",
    "rluria14",
    "h-vetinari",
    "oblute",
    "benhuff",
    "jakirkham",
    "rluria14",
    "h-vetinari",
    "oblute",
    "benhuff",
    "jakirkham",
    "rluria14",
    "h-vetinari",
    "oblute",
    "benhuff",
    "jakirkham",
    "rluria14"
   ]
  },
  "outputs": [
   {
    "about": {
     "home": "https://github.com/conda-forge/nvidia-apex-feedstock",
     "license": "BSD-3-Clause",
     "license_family": "BSD",
     "summary": "A meta-package to select CPU or GPU nvidia-apex build."
    },
    "build": {
     "string": "cuda"
    },
    "name": "nvidia-apex-proc",
    "test": {
     "commands": [
      "exit 0"
     ]
    },
    "version": "1.0.0"
   },
   {
    "about": {
     "dev_url": "https://github.com/NVIDIA/apex",
     "doc_url": "https://nvidia.github.io/apex/",
     "home": "https://nvidia.github.io/apex/",
     "license": "BSD-3-Clause",
     "license_family": "BSD",
     "license_file": "LICENSE",
     "summary": "a Pytorch extension with NVIDIA-maintained utilities to streamline mixed precision and distributed training."
    },
    "build": {
     "script": [
      "export TORCH_CUDA_ARCH_LIST=\"3.5;5.0;6.0;6.1;7.0;7.5;8.0;8.6\"",
      "python -m pip install . -vv"
     ],
     "string": "cuda112py310h1234567_3"
    },
    "name": "nvidia-apex",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub"
     ],
     "host": [
      "python",
      "pytorch",
      "pytorch =*=cuda*",
      "setuptools",
      "pip"
     ],
     "run": [
      "python",
      "cxxfilt",
      "tqdm",
      "numpy",
      "PyYAML",
      "pytest"
     ],
     "run_constrained": [
      "nvidia-apex-proc =*=cuda",
      "pytorch =*=cuda*"
     ]
    },
    "test": {
     "imports": [
      "apex",
      "apex.amp",
      "apex.parallel",
      "apex.optimizers",
      "apex.normalization.fused_layer_norm"
     ]
    },
    "version": "22.03"
   },
   {
    "about": {
     "home": "https://github.com/conda-forge/nvidia-apex-feedstock",
     "license": "BSD-3-Clause",
     "license_family": "BSD",
     "summary": "A meta-package to select CPU or GPU nvidia-apex build."
    },
    "build": {
     "string": "cuda"
    },
    "name": "nvidia-apex-proc",
    "test": {
     "commands": [
      "exit 0"
     ]
    },
    "version": "1.0.0"
   },
   {
    "about": {
     "dev_url": "https://github.com/NVIDIA/apex",
     "doc_url": "https://nvidia.github.io/apex/",
     "home": "https://nvidia.github.io/apex/",
     "license": "BSD-3-Clause",
     "license_family": "BSD",
     "license_file": "LICENSE",
     "summary": "a Pytorch extension with NVIDIA-maintained utilities to streamline mixed precision and distributed training."
    },
    "build": {
     "script": [
      "export TORCH_CUDA_ARCH_LIST=\"3.5;5.0;6.0;6.1;7.0;7.5;8.0;8.6\"",
      "python -m pip install . -vv"
     ],
     "string": "cuda112py311h1234567_3"
    },
    "name": "nvidia-apex",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub"
     ],
     "host": [
      "python",
      "pytorch",
      "pytorch =*=cuda*",
      "setuptools",
      "pip"
     ],
     "run": [
      "python",
      "cxxfilt",
      "tqdm",
      "numpy",
      "PyYAML",
      "pytest"
     ],
     "run_constrained": [
      "nvidia-apex-proc =*=cuda",
      "pytorch =*=cuda*"
     ]
    },
    "test": {
     "imports": [
      "apex",
      "apex.amp",
      "apex.parallel",
      "apex.optimizers",
      "apex.normalization.fused_layer_norm"
     ]
    },
    "version": "22.03"
   },
   {
    "about": {
     "home": "https://github.com/conda-forge/nvidia-apex-feedstock",
     "license": "BSD-3-Clause",
     "license_family": "BSD",
     "summary": "A meta-package to select CPU or GPU nvidia-apex build."
    },
    "build": {
     "string": "cuda"
    },
    "name": "nvidia-apex-proc",
    "test": {
     "commands": [
      "exit 0"
     ]
    },
    "version": "1.0.0"
   },
   {
    "about": {
     "dev_url": "https://github.com/NVIDIA/apex",
     "doc_url": "https://nvidia.github.io/apex/",
     "home": "https://nvidia.github.io/apex/",
     "license": "BSD-3-Clause",
     "license_family": "BSD",
     "license_file": "LICENSE",
     "summary": "a Pytorch extension with NVIDIA-maintained utilities to streamline mixed precision and distributed training."
    },
    "build": {
     "script": [
      "export TORCH_CUDA_ARCH_LIST=\"3.5;5.0;6.0;6.1;7.0;7.5;8.0;8.6\"",
      "python -m pip install . -vv"
     ],
     "string": "cuda112py38h1234567_3"
    },
    "name": "nvidia-apex",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub"
     ],
     "host": [
      "python",
      "pytorch",
      "pytorch =*=cuda*",
      "setuptools",
      "pip"
     ],
     "run": [
      "python",
      "cxxfilt",
      "tqdm",
      "numpy",
      "PyYAML",
      "pytest"
     ],
     "run_constrained": [
      "nvidia-apex-proc =*=cuda",
      "pytorch =*=cuda*"
     ]
    },
    "test": {
     "imports": [
      "apex",
      "apex.amp",
      "apex.parallel",
      "apex.optimizers",
      "apex.normalization.fused_layer_norm"
     ]
    },
    "version": "22.03"
   },
   {
    "about": {
     "home": "https://github.com/conda-forge/nvidia-apex-feedstock",
     "license": "BSD-3-Clause",
     "license_family": "BSD",
     "summary": "A meta-package to select CPU or GPU nvidia-apex build."
    },
    "build": {
     "string": "cuda"
    },
    "name": "nvidia-apex-proc",
    "test": {
     "commands": [
      "exit 0"
     ]
    },
    "version": "1.0.0"
   },
   {
    "about": {
     "dev_url": "https://github.com/NVIDIA/apex",
     "doc_url": "https://nvidia.github.io/apex/",
     "home": "https://nvidia.github.io/apex/",
     "license": "BSD-3-Clause",
     "license_family": "BSD",
     "license_file": "LICENSE",
     "summary": "a Pytorch extension with NVIDIA-maintained utilities to streamline mixed precision and distributed training."
    },
    "build": {
     "script": [
      "export TORCH_CUDA_ARCH_LIST=\"3.5;5.0;6.0;6.1;7.0;7.5;8.0;8.6\"",
      "python -m pip install . -vv"
     ],
     "string": "cuda112py39h1234567_3"
    },
    "name": "nvidia-apex",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub"
     ],
     "host": [
      "python",
      "pytorch",
      "pytorch =*=cuda*",
      "setuptools",
      "pip"
     ],
     "run": [
      "python",
      "cxxfilt",
      "tqdm",
      "numpy",
      "PyYAML",
      "pytest"
     ],
     "run_constrained": [
      "nvidia-apex-proc =*=cuda",
      "pytorch =*=cuda*"
     ]
    },
    "test": {
     "imports": [
      "apex",
      "apex.amp",
      "apex.parallel",
      "apex.optimizers",
      "apex.normalization.fused_layer_norm"
     ]
    },
    "version": "22.03"
   },
   {
    "about": {
     "home": "https://github.com/conda-forge/nvidia-apex-feedstock",
     "license": "BSD-3-Clause",
     "license_family": "BSD",
     "summary": "A meta-package to select CPU or GPU nvidia-apex build."
    },
    "build": {
     "string": "cpu"
    },
    "name": "nvidia-apex-proc",
    "test": {
     "commands": [
      "exit 0"
     ]
    },
    "version": "1.0.0"
   },
   {
    "about": {
     "dev_url": "https://github.com/NVIDIA/apex",
     "doc_url": "https://nvidia.github.io/apex/",
     "home": "https://nvidia.github.io/apex/",
     "license": "BSD-3-Clause",
     "license_family": "BSD",
     "license_file": "LICENSE",
     "summary": "a Pytorch extension with NVIDIA-maintained utilities to streamline mixed precision and distributed training."
    },
    "build": {
     "script": [
      "export TORCH_CUDA_ARCH_LIST=\"3.5;5.0;6.0;6.1;7.0;7.5;8.0;8.6\"",
      "python -m pip install . -vv"
     ],
     "string": "cpu_py310h1234567_3"
    },
    "name": "nvidia-apex",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "pytorch",
      "pytorch =*=cpu*",
      "setuptools",
      "pip"
     ],
     "run": [
      "python",
      "cxxfilt",
      "tqdm",
      "numpy",
      "PyYAML",
      "pytest"
     ],
     "run_constrained": [
      "nvidia-apex-proc =*=cpu",
      "pytorch =*=cpu*"
     ]
    },
    "test": {
     "imports": [
      "apex",
      "apex.amp",
      "apex.parallel",
      "apex.optimizers",
      "apex.normalization.fused_layer_norm"
     ]
    },
    "version": "22.03"
   },
   {
    "about": {
     "home": "https://github.com/conda-forge/nvidia-apex-feedstock",
     "license": "BSD-3-Clause",
     "license_family": "BSD",
     "summary": "A meta-package to select CPU or GPU nvidia-apex build."
    },
    "build": {
     "string": "cpu"
    },
    "name": "nvidia-apex-proc",
    "test": {
     "commands": [
      "exit 0"
     ]
    },
    "version": "1.0.0"
   },
   {
    "about": {
     "dev_url": "https://github.com/NVIDIA/apex",
     "doc_url": "https://nvidia.github.io/apex/",
     "home": "https://nvidia.github.io/apex/",
     "license": "BSD-3-Clause",
     "license_family": "BSD",
     "license_file": "LICENSE",
     "summary": "a Pytorch extension with NVIDIA-maintained utilities to streamline mixed precision and distributed training."
    },
    "build": {
     "script": [
      "export TORCH_CUDA_ARCH_LIST=\"3.5;5.0;6.0;6.1;7.0;7.5;8.0;8.6\"",
      "python -m pip install . -vv"
     ],
     "string": "cpu_py311h1234567_3"
    },
    "name": "nvidia-apex",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "pytorch",
      "pytorch =*=cpu*",
      "setuptools",
      "pip"
     ],
     "run": [
      "python",
      "cxxfilt",
      "tqdm",
      "numpy",
      "PyYAML",
      "pytest"
     ],
     "run_constrained": [
      "nvidia-apex-proc =*=cpu",
      "pytorch =*=cpu*"
     ]
    },
    "test": {
     "imports": [
      "apex",
      "apex.amp",
      "apex.parallel",
      "apex.optimizers",
      "apex.normalization.fused_layer_norm"
     ]
    },
    "version": "22.03"
   },
   {
    "about": {
     "home": "https://github.com/conda-forge/nvidia-apex-feedstock",
     "license": "BSD-3-Clause",
     "license_family": "BSD",
     "summary": "A meta-package to select CPU or GPU nvidia-apex build."
    },
    "build": {
     "string": "cpu"
    },
    "name": "nvidia-apex-proc",
    "test": {
     "commands": [
      "exit 0"
     ]
    },
    "version": "1.0.0"
   },
   {
    "about": {
     "dev_url": "https://github.com/NVIDIA/apex",
     "doc_url": "https://nvidia.github.io/apex/",
     "home": "https://nvidia.github.io/apex/",
     "license": "BSD-3-Clause",
     "license_family": "BSD",
     "license_file": "LICENSE",
     "summary": "a Pytorch extension with NVIDIA-maintained utilities to streamline mixed precision and distributed training."
    },
    "build": {
     "script": [
      "export TORCH_CUDA_ARCH_LIST=\"3.5;5.0;6.0;6.1;7.0;7.5;8.0;8.6\"",
      "python -m pip install . -vv"
     ],
     "string": "cpu_py38h1234567_3"
    },
    "name": "nvidia-apex",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "pytorch",
      "pytorch =*=cpu*",
      "setuptools",
      "pip"
     ],
     "run": [
      "python",
      "cxxfilt",
      "tqdm",
      "numpy",
      "PyYAML",
      "pytest"
     ],
     "run_constrained": [
      "nvidia-apex-proc =*=cpu",
      "pytorch =*=cpu*"
     ]
    },
    "test": {
     "imports": [
      "apex",
      "apex.amp",
      "apex.parallel",
      "apex.optimizers",
      "apex.normalization.fused_layer_norm"
     ]
    },
    "version": "22.03"
   },
   {
    "about": {
     "home": "https://github.com/conda-forge/nvidia-apex-feedstock",
     "license": "BSD-3-Clause",
     "license_family": "BSD",
     "summary": "A meta-package to select CPU or GPU nvidia-apex build."
    },
    "build": {
     "string": "cpu"
    },
    "name": "nvidia-apex-proc",
    "test": {
     "commands": [
      "exit 0"
     ]
    },
    "version": "1.0.0"
   },
   {
    "about": {
     "dev_url": "https://github.com/NVIDIA/apex",
     "doc_url": "https://nvidia.github.io/apex/",
     "home": "https://nvidia.github.io/apex/",
     "license": "BSD-3-Clause",
     "license_family": "BSD",
     "license_file": "LICENSE",
     "summary": "a Pytorch extension with NVIDIA-maintained utilities to streamline mixed precision and distributed training."
    },
    "build": {
     "script": [
      "export TORCH_CUDA_ARCH_LIST=\"3.5;5.0;6.0;6.1;7.0;7.5;8.0;8.6\"",
      "python -m pip install . -vv"
     ],
     "string": "cpu_py39h1234567_3"
    },
    "name": "nvidia-apex",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "pytorch",
      "pytorch =*=cpu*",
      "setuptools",
      "pip"
     ],
     "run": [
      "python",
      "cxxfilt",
      "tqdm",
      "numpy",
      "PyYAML",
      "pytest"
     ],
     "run_constrained": [
      "nvidia-apex-proc =*=cpu",
      "pytorch =*=cpu*"
     ]
    },
    "test": {
     "imports": [
      "apex",
      "apex.amp",
      "apex.parallel",
      "apex.optimizers",
      "apex.normalization.fused_layer_norm"
     ]
    },
    "version": "22.03"
   }
  ],
  "package": {
   "name": "nvidia-apex-split",
   "version": "22.03"
  },
  "source": {
   "patches": [
    "0001-use-torch.tensor-to-create-a-tensor-with-initializer.patch",
    "0001-use-torch.tensor-to-create-a-tensor-with-initializer.patch",
    "0001-use-torch.tensor-to-create-a-tensor-with-initializer.patch",
    "0001-use-torch.tensor-to-create-a-tensor-with-initializer.patch",
    "0001-use-torch.tensor-to-create-a-tensor-with-initializer.patch",
    "0001-use-torch.tensor-to-create-a-tensor-with-initializer.patch",
    "0001-use-torch.tensor-to-create-a-tensor-with-initializer.patch",
    "0001-use-torch.tensor-to-create-a-tensor-with-initializer.patch"
   ],
   "sha256": "694f1ac1aaed6435b2f0c2ebc1af56b8a215a5eaa96c2565a578e8734378ff66",
   "url": "https://github.com/NVIDIA/apex/archive/refs/tags/22.03.tar.gz"
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "pytorch",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cxxfilt",
    "numpy",
    "pytest",
    "python",
    "pyyaml",
    "tqdm"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "dev_url": "https://github.com/NVIDIA/apex",
   "doc_url": "https://nvidia.github.io/apex/",
   "home": "https://nvidia.github.io/apex/",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "a Pytorch extension with NVIDIA-maintained utilities to streamline mixed precision and distributed training."
  },
  "build": {
   "number": "3"
  },
  "extra": {
   "feedstock-name": "nvidia-apex",
   "recipe-maintainers": [
    "h-vetinari",
    "oblute",
    "benhuff",
    "jakirkham",
    "rluria14",
    "h-vetinari",
    "oblute",
    "benhuff",
    "jakirkham",
    "rluria14",
    "h-vetinari",
    "oblute",
    "benhuff",
    "jakirkham",
    "rluria14",
    "h-vetinari",
    "oblute",
    "benhuff",
    "jakirkham",
    "rluria14",
    "h-vetinari",
    "oblute",
    "benhuff",
    "jakirkham",
    "rluria14",
    "h-vetinari",
    "oblute",
    "benhuff",
    "jakirkham",
    "rluria14",
    "h-vetinari",
    "oblute",
    "benhuff",
    "jakirkham",
    "rluria14",
    "h-vetinari",
    "oblute",
    "benhuff",
    "jakirkham",
    "rluria14"
   ]
  },
  "outputs": [
   {
    "about": {
     "home": "https://github.com/conda-forge/nvidia-apex-feedstock",
     "license": "BSD-3-Clause",
     "license_family": "BSD",
     "summary": "A meta-package to select CPU or GPU nvidia-apex build."
    },
    "build": {
     "string": "cuda"
    },
    "name": "nvidia-apex-proc",
    "test": {
     "commands": [
      "exit 0"
     ]
    },
    "version": "1.0.0"
   },
   {
    "about": {
     "dev_url": "https://github.com/NVIDIA/apex",
     "doc_url": "https://nvidia.github.io/apex/",
     "home": "https://nvidia.github.io/apex/",
     "license": "BSD-3-Clause",
     "license_family": "BSD",
     "license_file": "LICENSE",
     "summary": "a Pytorch extension with NVIDIA-maintained utilities to streamline mixed precision and distributed training."
    },
    "build": {
     "script": [
      "export TORCH_CUDA_ARCH_LIST=\"3.5;5.0;6.0;6.1;7.0;7.5;8.0;8.6\"",
      "python -m pip install . -vv"
     ],
     "string": "cuda112py310h1234567_3"
    },
    "name": "nvidia-apex",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub"
     ],
     "host": [
      "python",
      "pytorch",
      "pytorch =*=cuda*",
      "setuptools",
      "pip"
     ],
     "run": [
      "python",
      "cxxfilt",
      "tqdm",
      "numpy",
      "PyYAML",
      "pytest"
     ],
     "run_constrained": [
      "nvidia-apex-proc =*=cuda",
      "pytorch =*=cuda*"
     ]
    },
    "test": {
     "imports": [
      "apex",
      "apex.amp",
      "apex.parallel",
      "apex.optimizers",
      "apex.normalization.fused_layer_norm"
     ]
    },
    "version": "22.03"
   },
   {
    "about": {
     "home": "https://github.com/conda-forge/nvidia-apex-feedstock",
     "license": "BSD-3-Clause",
     "license_family": "BSD",
     "summary": "A meta-package to select CPU or GPU nvidia-apex build."
    },
    "build": {
     "string": "cuda"
    },
    "name": "nvidia-apex-proc",
    "test": {
     "commands": [
      "exit 0"
     ]
    },
    "version": "1.0.0"
   },
   {
    "about": {
     "dev_url": "https://github.com/NVIDIA/apex",
     "doc_url": "https://nvidia.github.io/apex/",
     "home": "https://nvidia.github.io/apex/",
     "license": "BSD-3-Clause",
     "license_family": "BSD",
     "license_file": "LICENSE",
     "summary": "a Pytorch extension with NVIDIA-maintained utilities to streamline mixed precision and distributed training."
    },
    "build": {
     "script": [
      "export TORCH_CUDA_ARCH_LIST=\"3.5;5.0;6.0;6.1;7.0;7.5;8.0;8.6\"",
      "python -m pip install . -vv"
     ],
     "string": "cuda112py311h1234567_3"
    },
    "name": "nvidia-apex",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub"
     ],
     "host": [
      "python",
      "pytorch",
      "pytorch =*=cuda*",
      "setuptools",
      "pip"
     ],
     "run": [
      "python",
      "cxxfilt",
      "tqdm",
      "numpy",
      "PyYAML",
      "pytest"
     ],
     "run_constrained": [
      "nvidia-apex-proc =*=cuda",
      "pytorch =*=cuda*"
     ]
    },
    "test": {
     "imports": [
      "apex",
      "apex.amp",
      "apex.parallel",
      "apex.optimizers",
      "apex.normalization.fused_layer_norm"
     ]
    },
    "version": "22.03"
   },
   {
    "about": {
     "home": "https://github.com/conda-forge/nvidia-apex-feedstock",
     "license": "BSD-3-Clause",
     "license_family": "BSD",
     "summary": "A meta-package to select CPU or GPU nvidia-apex build."
    },
    "build": {
     "string": "cuda"
    },
    "name": "nvidia-apex-proc",
    "test": {
     "commands": [
      "exit 0"
     ]
    },
    "version": "1.0.0"
   },
   {
    "about": {
     "dev_url": "https://github.com/NVIDIA/apex",
     "doc_url": "https://nvidia.github.io/apex/",
     "home": "https://nvidia.github.io/apex/",
     "license": "BSD-3-Clause",
     "license_family": "BSD",
     "license_file": "LICENSE",
     "summary": "a Pytorch extension with NVIDIA-maintained utilities to streamline mixed precision and distributed training."
    },
    "build": {
     "script": [
      "export TORCH_CUDA_ARCH_LIST=\"3.5;5.0;6.0;6.1;7.0;7.5;8.0;8.6\"",
      "python -m pip install . -vv"
     ],
     "string": "cuda112py38h1234567_3"
    },
    "name": "nvidia-apex",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub"
     ],
     "host": [
      "python",
      "pytorch",
      "pytorch =*=cuda*",
      "setuptools",
      "pip"
     ],
     "run": [
      "python",
      "cxxfilt",
      "tqdm",
      "numpy",
      "PyYAML",
      "pytest"
     ],
     "run_constrained": [
      "nvidia-apex-proc =*=cuda",
      "pytorch =*=cuda*"
     ]
    },
    "test": {
     "imports": [
      "apex",
      "apex.amp",
      "apex.parallel",
      "apex.optimizers",
      "apex.normalization.fused_layer_norm"
     ]
    },
    "version": "22.03"
   },
   {
    "about": {
     "home": "https://github.com/conda-forge/nvidia-apex-feedstock",
     "license": "BSD-3-Clause",
     "license_family": "BSD",
     "summary": "A meta-package to select CPU or GPU nvidia-apex build."
    },
    "build": {
     "string": "cuda"
    },
    "name": "nvidia-apex-proc",
    "test": {
     "commands": [
      "exit 0"
     ]
    },
    "version": "1.0.0"
   },
   {
    "about": {
     "dev_url": "https://github.com/NVIDIA/apex",
     "doc_url": "https://nvidia.github.io/apex/",
     "home": "https://nvidia.github.io/apex/",
     "license": "BSD-3-Clause",
     "license_family": "BSD",
     "license_file": "LICENSE",
     "summary": "a Pytorch extension with NVIDIA-maintained utilities to streamline mixed precision and distributed training."
    },
    "build": {
     "script": [
      "export TORCH_CUDA_ARCH_LIST=\"3.5;5.0;6.0;6.1;7.0;7.5;8.0;8.6\"",
      "python -m pip install . -vv"
     ],
     "string": "cuda112py39h1234567_3"
    },
    "name": "nvidia-apex",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub"
     ],
     "host": [
      "python",
      "pytorch",
      "pytorch =*=cuda*",
      "setuptools",
      "pip"
     ],
     "run": [
      "python",
      "cxxfilt",
      "tqdm",
      "numpy",
      "PyYAML",
      "pytest"
     ],
     "run_constrained": [
      "nvidia-apex-proc =*=cuda",
      "pytorch =*=cuda*"
     ]
    },
    "test": {
     "imports": [
      "apex",
      "apex.amp",
      "apex.parallel",
      "apex.optimizers",
      "apex.normalization.fused_layer_norm"
     ]
    },
    "version": "22.03"
   },
   {
    "about": {
     "home": "https://github.com/conda-forge/nvidia-apex-feedstock",
     "license": "BSD-3-Clause",
     "license_family": "BSD",
     "summary": "A meta-package to select CPU or GPU nvidia-apex build."
    },
    "build": {
     "string": "cpu"
    },
    "name": "nvidia-apex-proc",
    "test": {
     "commands": [
      "exit 0"
     ]
    },
    "version": "1.0.0"
   },
   {
    "about": {
     "dev_url": "https://github.com/NVIDIA/apex",
     "doc_url": "https://nvidia.github.io/apex/",
     "home": "https://nvidia.github.io/apex/",
     "license": "BSD-3-Clause",
     "license_family": "BSD",
     "license_file": "LICENSE",
     "summary": "a Pytorch extension with NVIDIA-maintained utilities to streamline mixed precision and distributed training."
    },
    "build": {
     "script": [
      "export TORCH_CUDA_ARCH_LIST=\"3.5;5.0;6.0;6.1;7.0;7.5;8.0;8.6\"",
      "python -m pip install . -vv"
     ],
     "string": "cpu_py310h1234567_3"
    },
    "name": "nvidia-apex",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "pytorch",
      "pytorch =*=cpu*",
      "setuptools",
      "pip"
     ],
     "run": [
      "python",
      "cxxfilt",
      "tqdm",
      "numpy",
      "PyYAML",
      "pytest"
     ],
     "run_constrained": [
      "nvidia-apex-proc =*=cpu",
      "pytorch =*=cpu*"
     ]
    },
    "test": {
     "imports": [
      "apex",
      "apex.amp",
      "apex.parallel",
      "apex.optimizers",
      "apex.normalization.fused_layer_norm"
     ]
    },
    "version": "22.03"
   },
   {
    "about": {
     "home": "https://github.com/conda-forge/nvidia-apex-feedstock",
     "license": "BSD-3-Clause",
     "license_family": "BSD",
     "summary": "A meta-package to select CPU or GPU nvidia-apex build."
    },
    "build": {
     "string": "cpu"
    },
    "name": "nvidia-apex-proc",
    "test": {
     "commands": [
      "exit 0"
     ]
    },
    "version": "1.0.0"
   },
   {
    "about": {
     "dev_url": "https://github.com/NVIDIA/apex",
     "doc_url": "https://nvidia.github.io/apex/",
     "home": "https://nvidia.github.io/apex/",
     "license": "BSD-3-Clause",
     "license_family": "BSD",
     "license_file": "LICENSE",
     "summary": "a Pytorch extension with NVIDIA-maintained utilities to streamline mixed precision and distributed training."
    },
    "build": {
     "script": [
      "export TORCH_CUDA_ARCH_LIST=\"3.5;5.0;6.0;6.1;7.0;7.5;8.0;8.6\"",
      "python -m pip install . -vv"
     ],
     "string": "cpu_py311h1234567_3"
    },
    "name": "nvidia-apex",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "pytorch",
      "pytorch =*=cpu*",
      "setuptools",
      "pip"
     ],
     "run": [
      "python",
      "cxxfilt",
      "tqdm",
      "numpy",
      "PyYAML",
      "pytest"
     ],
     "run_constrained": [
      "nvidia-apex-proc =*=cpu",
      "pytorch =*=cpu*"
     ]
    },
    "test": {
     "imports": [
      "apex",
      "apex.amp",
      "apex.parallel",
      "apex.optimizers",
      "apex.normalization.fused_layer_norm"
     ]
    },
    "version": "22.03"
   },
   {
    "about": {
     "home": "https://github.com/conda-forge/nvidia-apex-feedstock",
     "license": "BSD-3-Clause",
     "license_family": "BSD",
     "summary": "A meta-package to select CPU or GPU nvidia-apex build."
    },
    "build": {
     "string": "cpu"
    },
    "name": "nvidia-apex-proc",
    "test": {
     "commands": [
      "exit 0"
     ]
    },
    "version": "1.0.0"
   },
   {
    "about": {
     "dev_url": "https://github.com/NVIDIA/apex",
     "doc_url": "https://nvidia.github.io/apex/",
     "home": "https://nvidia.github.io/apex/",
     "license": "BSD-3-Clause",
     "license_family": "BSD",
     "license_file": "LICENSE",
     "summary": "a Pytorch extension with NVIDIA-maintained utilities to streamline mixed precision and distributed training."
    },
    "build": {
     "script": [
      "export TORCH_CUDA_ARCH_LIST=\"3.5;5.0;6.0;6.1;7.0;7.5;8.0;8.6\"",
      "python -m pip install . -vv"
     ],
     "string": "cpu_py38h1234567_3"
    },
    "name": "nvidia-apex",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "pytorch",
      "pytorch =*=cpu*",
      "setuptools",
      "pip"
     ],
     "run": [
      "python",
      "cxxfilt",
      "tqdm",
      "numpy",
      "PyYAML",
      "pytest"
     ],
     "run_constrained": [
      "nvidia-apex-proc =*=cpu",
      "pytorch =*=cpu*"
     ]
    },
    "test": {
     "imports": [
      "apex",
      "apex.amp",
      "apex.parallel",
      "apex.optimizers",
      "apex.normalization.fused_layer_norm"
     ]
    },
    "version": "22.03"
   },
   {
    "about": {
     "home": "https://github.com/conda-forge/nvidia-apex-feedstock",
     "license": "BSD-3-Clause",
     "license_family": "BSD",
     "summary": "A meta-package to select CPU or GPU nvidia-apex build."
    },
    "build": {
     "string": "cpu"
    },
    "name": "nvidia-apex-proc",
    "test": {
     "commands": [
      "exit 0"
     ]
    },
    "version": "1.0.0"
   },
   {
    "about": {
     "dev_url": "https://github.com/NVIDIA/apex",
     "doc_url": "https://nvidia.github.io/apex/",
     "home": "https://nvidia.github.io/apex/",
     "license": "BSD-3-Clause",
     "license_family": "BSD",
     "license_file": "LICENSE",
     "summary": "a Pytorch extension with NVIDIA-maintained utilities to streamline mixed precision and distributed training."
    },
    "build": {
     "script": [
      "export TORCH_CUDA_ARCH_LIST=\"3.5;5.0;6.0;6.1;7.0;7.5;8.0;8.6\"",
      "python -m pip install . -vv"
     ],
     "string": "cpu_py39h1234567_3"
    },
    "name": "nvidia-apex",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "pytorch",
      "pytorch =*=cpu*",
      "setuptools",
      "pip"
     ],
     "run": [
      "python",
      "cxxfilt",
      "tqdm",
      "numpy",
      "PyYAML",
      "pytest"
     ],
     "run_constrained": [
      "nvidia-apex-proc =*=cpu",
      "pytorch =*=cpu*"
     ]
    },
    "test": {
     "imports": [
      "apex",
      "apex.amp",
      "apex.parallel",
      "apex.optimizers",
      "apex.normalization.fused_layer_norm"
     ]
    },
    "version": "22.03"
   }
  ],
  "package": {
   "name": "nvidia-apex-split",
   "version": "22.03"
  },
  "source": {
   "patches": [
    "0001-use-torch.tensor-to-create-a-tensor-with-initializer.patch",
    "0001-use-torch.tensor-to-create-a-tensor-with-initializer.patch",
    "0001-use-torch.tensor-to-create-a-tensor-with-initializer.patch",
    "0001-use-torch.tensor-to-create-a-tensor-with-initializer.patch",
    "0001-use-torch.tensor-to-create-a-tensor-with-initializer.patch",
    "0001-use-torch.tensor-to-create-a-tensor-with-initializer.patch",
    "0001-use-torch.tensor-to-create-a-tensor-with-initializer.patch",
    "0001-use-torch.tensor-to-create-a-tensor-with-initializer.patch"
   ],
   "sha256": "694f1ac1aaed6435b2f0c2ebc1af56b8a215a5eaa96c2565a578e8734378ff66",
   "url": "https://github.com/NVIDIA/apex/archive/refs/tags/22.03.tar.gz"
  }
 },
 "name": "nvidia-apex-split",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "nvidia-apex",
   "nvidia-apex-proc"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "linux_64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/nvidia-apex.json"
 },
 "raw_meta_yaml": "{% set version = \"22.03\" %}\n{% set proc_version = \"1.0.0\" %}\n\n# see github.com/conda-forge/conda-forge.github.io/issues/1059 for naming discussion\n{% set proc_type = \"cuda\" if cuda_compiler_version != \"None\" else \"cpu\" %}\n\npackage:\n  name: nvidia-apex-split\n  version: {{ version }}\n\nsource:\n  url: https://github.com/NVIDIA/apex/archive/refs/tags/{{ version }}.tar.gz\n  sha256: 694f1ac1aaed6435b2f0c2ebc1af56b8a215a5eaa96c2565a578e8734378ff66\n  patches:\n    # https://github.com/NVIDIA/apex/pull/1588\n    # https://github.com/NVIDIA/apex/commit/6943fd26e04c59327de32592cf5af68be8f5c44e\n    - 0001-use-torch.tensor-to-create-a-tensor-with-initializer.patch\n\nbuild:\n  number: 3\n  skip: True  # [osx or win]\n  # as of pytorch 1.13, conda-forge only builds for CUDA 11.2+, see\n  # https://github.com/conda-forge/conda-forge-pinning-feedstock/issues/3491\n  skip: true  # [cuda_compiler_version in (\"10.2\", \"11.0\", \"11.1\")]\n\noutputs:\n  - name: nvidia-apex-proc\n    version: {{ proc_version }}\n    build:\n      string: {{ proc_type }}\n    test:\n      commands:\n        - exit 0\n    about:\n      home: https://github.com/conda-forge/nvidia-apex-feedstock\n      license: BSD-3-Clause\n      license_family: BSD\n      summary: A meta-package to select CPU or GPU nvidia-apex build.\n\n  - name: nvidia-apex\n    version: {{ version }}\n    build:\n      string: cpu_py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}                                                # [cuda_compiler_version == \"None\"]\n      string: cuda{{ cuda_compiler_version | replace('.', '') }}py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version != \"None\"]\n      script:\n        - export TORCH_CUDA_ARCH_LIST=\"3.5;5.0;6.0;6.1;7.0;7.5;8.0;8.6\"\n        - python -m pip install . -vv\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - {{ compiler('cuda') }}  # [linux64 and cuda_compiler_version != \"None\"]\n      host:\n        - python\n        - pytorch\n        - pytorch =*={{ proc_type }}*\n        - setuptools\n        - pip\n      run:\n        - python\n        - cxxfilt  # [linux]\n        - tqdm\n        - numpy\n        - PyYAML\n        - pytest\n      run_constrained:\n        - nvidia-apex-proc =*=cuda         # [cuda_compiler_version != \"None\"]\n        - nvidia-apex-proc =*=cpu          # [cuda_compiler_version == \"None\"]\n        - pytorch =*={{ proc_type }}*\n    test:\n      imports:\n        - apex\n        - apex.amp\n        - apex.parallel\n        - apex.optimizers\n        - apex.normalization.fused_layer_norm\n    about:\n      home: \"https://nvidia.github.io/apex/\"\n      license: BSD-3-Clause\n      license_family: BSD\n      license_file: LICENSE\n      summary: \"a Pytorch extension with NVIDIA-maintained utilities to streamline mixed precision and distributed training.\"\n      doc_url: \"https://nvidia.github.io/apex/\"\n      dev_url: \"https://github.com/NVIDIA/apex\"\n\nabout:\n  home: \"https://nvidia.github.io/apex/\"\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE\n  summary: \"a Pytorch extension with NVIDIA-maintained utilities to streamline mixed precision and distributed training.\"\n  doc_url: \"https://nvidia.github.io/apex/\"\n  dev_url: \"https://github.com/NVIDIA/apex\"\n\nextra:\n  recipe-maintainers:\n    - h-vetinari\n    - oblute\n    - benhuff\n    - jakirkham\n    - rluria14\n  feedstock-name: nvidia-apex\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "cuda_compiler_stub",
   "cxx_compiler_stub",
   "cxxfilt",
   "numpy",
   "pip",
   "pytest",
   "python",
   "pytorch",
   "pyyaml",
   "setuptools",
   "tqdm"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "pip",
    "python",
    "pytorch",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "cxxfilt",
    "numpy",
    "pytest",
    "python",
    "pyyaml",
    "tqdm"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "pytorch",
    "pytorch =*=cpu*",
    "pytorch =*=cuda*",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "PyYAML",
    "cxxfilt",
    "numpy",
    "pytest",
    "python",
    "tqdm"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://github.com/NVIDIA/apex/archive/refs/tags/22.03.tar.gz",
 "version": "22.03",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/nvidia-apex.json"
 }
}