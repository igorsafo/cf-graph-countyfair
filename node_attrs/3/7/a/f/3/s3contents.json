{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "conda_build": {
   "pkg_format": "2"
  },
  "conda_forge_output_validation": true,
  "github": {
   "branch_name": "main",
   "tooling_branch_name": "main"
  }
 },
 "feedstock_name": "s3contents",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "A S3 and GCS backed ContentsManager implementation for Jupyter.\nIt aims to a be a transparent, drop-in replacement for Jupyter standard filesystem-backed storage system. With this implementation of a Jupyter Contents Manager you can save all your notebooks, regular files, directories structure directly to a S3/GCS bucket, this could be on AWS/GCP or a self hosted S3 API compatible like minio.",
   "dev_url": "https://github.com/danielfrg/s3contents",
   "home": "https://github.com/danielfrg/s3contents",
   "license": "Apache-2.0",
   "license_family": "APACHE",
   "license_file": "LICENSE.txt",
   "summary": "A S3-backed ContentsManager implementation for Jupyter"
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "PYTHON -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv"
  },
  "extra": {
   "recipe-maintainers": [
    "mariusvniekerk",
    "danielfrg"
   ]
  },
  "package": {
   "name": "s3contents",
   "version": "0.11.1"
  },
  "requirements": {
   "build": [
    "poetry"
   ],
   "host": [
    "python >=3",
    "pip",
    "poetry",
    "setuptools_scm"
   ],
   "run": [
    "python >=3",
    "aiobotocore >=1.4.0",
    "boto3",
    "notebook",
    "s3fs >=2021.11.0,<2022.0.0",
    "gcsfs >=2021.11.0,<2022.0.0"
   ]
  },
  "source": {
   "fn": "s3contents-0.11.1.tar.gz",
   "sha256": "cfcf6c56d9758ee6503b7aff16a7ec39ce1f5bcd1f743755636924b0939c166e",
   "url": "https://pypi.io/packages/source/s/s3contents/s3contents-0.11.1.tar.gz"
  },
  "test": {
   "imports": [
    "s3contents",
    "s3contents.tests"
   ],
   "requires": [
    "mock",
    "nose",
    "pytest"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "poetry"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "poetry",
    "python",
    "setuptools_scm"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "aiobotocore",
    "boto3",
    "gcsfs",
    "notebook",
    "python",
    "s3fs"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "mock",
    "nose",
    "pytest"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "A S3 and GCS backed ContentsManager implementation for Jupyter.\nIt aims to a be a transparent, drop-in replacement for Jupyter standard filesystem-backed storage system. With this implementation of a Jupyter Contents Manager you can save all your notebooks, regular files, directories structure directly to a S3/GCS bucket, this could be on AWS/GCP or a self hosted S3 API compatible like minio.",
   "dev_url": "https://github.com/danielfrg/s3contents",
   "home": "https://github.com/danielfrg/s3contents",
   "license": "Apache-2.0",
   "license_family": "APACHE",
   "license_file": "LICENSE.txt",
   "summary": "A S3-backed ContentsManager implementation for Jupyter"
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "PYTHON -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv"
  },
  "extra": {
   "recipe-maintainers": [
    "mariusvniekerk",
    "danielfrg"
   ]
  },
  "package": {
   "name": "s3contents",
   "version": "0.11.1"
  },
  "requirements": {
   "build": [
    "poetry"
   ],
   "host": [
    "python >=3",
    "pip",
    "poetry",
    "setuptools_scm"
   ],
   "run": [
    "python >=3",
    "aiobotocore >=1.4.0",
    "boto3",
    "notebook",
    "s3fs >=2021.11.0,<2022.0.0",
    "gcsfs >=2021.11.0,<2022.0.0"
   ]
  },
  "source": {
   "fn": "s3contents-0.11.1.tar.gz",
   "sha256": "cfcf6c56d9758ee6503b7aff16a7ec39ce1f5bcd1f743755636924b0939c166e",
   "url": "https://pypi.io/packages/source/s/s3contents/s3contents-0.11.1.tar.gz"
  },
  "test": {
   "imports": [
    "s3contents",
    "s3contents.tests"
   ],
   "requires": [
    "mock",
    "nose",
    "pytest"
   ]
  }
 },
 "name": "s3contents",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "s3contents"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "linux_64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/s3contents.json"
 },
 "raw_meta_yaml": "{% set name = \"s3contents\" %}\n{% set version = \"0.11.1\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: cfcf6c56d9758ee6503b7aff16a7ec39ce1f5bcd1f743755636924b0939c166e\n\nbuild:\n  number: 0\n  script: {{ PYTHON }} -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv\n  noarch: python\n\nrequirements:\n  build:\n    - poetry\n  host:\n    - python >=3\n    - pip\n    - poetry\n    - setuptools_scm\n  run:\n    - python >=3\n    - aiobotocore >=1.4.0\n    - boto3\n    - notebook\n    - s3fs >=2021.11.0,<2022.0.0\n    - gcsfs >=2021.11.0,<2022.0.0\n\ntest:\n  requires:\n    - mock\n    - nose\n    - pytest\n  imports:\n    - s3contents\n    - s3contents.tests\n\nabout:\n  home: https://github.com/danielfrg/s3contents\n  license: Apache-2.0\n  license_family: APACHE\n  license_file: LICENSE.txt\n  summary: A S3-backed ContentsManager implementation for Jupyter\n  description: \"A S3 and GCS backed ContentsManager implementation for Jupyter.\\nIt aims to a be a transparent, drop-in replacement for Jupyter standard filesystem-backed storage system. With this implementation of a Jupyter Contents Manager you can save all your notebooks, regular files, directories structure directly to\n    a S3/GCS bucket, this could be on AWS/GCP or a self hosted S3 API compatible like minio.\"\n  dev_url: https://github.com/danielfrg/s3contents\n\nextra:\n  recipe-maintainers:\n    - mariusvniekerk\n    - danielfrg\n",
 "req": {
  "__set__": true,
  "elements": [
   "aiobotocore",
   "boto3",
   "gcsfs",
   "notebook",
   "pip",
   "poetry",
   "python",
   "s3fs",
   "setuptools_scm"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "poetry"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "poetry",
    "python",
    "setuptools_scm"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "aiobotocore",
    "boto3",
    "gcsfs",
    "notebook",
    "python",
    "s3fs"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "mock",
    "nose",
    "pytest"
   ]
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "poetry"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "poetry",
    "python >=3",
    "setuptools_scm"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "aiobotocore >=1.4.0",
    "boto3",
    "gcsfs >=2021.11.0,<2022.0.0",
    "notebook",
    "python >=3",
    "s3fs >=2021.11.0,<2022.0.0"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "mock",
    "nose",
    "pytest"
   ]
  }
 },
 "url": "https://pypi.io/packages/source/s/s3contents/s3contents-0.11.1.tar.gz",
 "version": "0.11.1",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/s3contents.json"
 }
}