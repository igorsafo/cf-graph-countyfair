{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "conda_build": {
   "pkg_format": "2"
  },
  "conda_forge_output_validation": true,
  "github": {
   "branch_name": "main",
   "tooling_branch_name": "main"
  }
 },
 "feedstock_name": "dicomifier",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "Dicomifier is a set of tools to convert Bruker data to DICOM files, and\nDICOM files to NIfTI. It retains meta-data (e.g. MR parameters such as echo\ntime or subject parameters such as weight or height) throughout the\nconversion process, storing them in JSON format, allowing easy access in\nmultiple environments. The meta-data from Bruker is aligned on the DICOM\ndictionary for unified human and animal processing pipelines.\n",
   "dev_url": "https://github.com/lamyj/dicomifier",
   "doc_url": "https://github.com/lamyj/dicomifier",
   "home": "https://github.com/lamyj/dicomifier",
   "license": "CECILL-B",
   "license_family": "OTHER",
   "license_file": "LICENSE.txt",
   "summary": "Convert data from Bruker to DICOM and from DICOM to NIfTI"
  },
  "build": {
   "number": "1"
  },
  "extra": {
   "recipe-maintainers": [
    "lamyj",
    "lamyj",
    "lamyj",
    "lamyj"
   ]
  },
  "package": {
   "name": "dicomifier",
   "version": "2.4.0"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "cmake",
    "ninja"
   ],
   "host": [
    "libboost-headers",
    "odil >=0.12",
    "pybind11",
    "python",
    "libboost-headers",
    "odil >=0.12",
    "pybind11",
    "python",
    "libboost-headers",
    "odil >=0.12",
    "pybind11",
    "python",
    "libboost-headers",
    "odil >=0.12",
    "pybind11",
    "python"
   ],
   "run": [
    "nibabel",
    "numpy",
    "odil >=0.12",
    "python",
    "python-dateutil",
    "nibabel",
    "numpy",
    "odil >=0.12",
    "python",
    "python-dateutil",
    "nibabel",
    "numpy",
    "odil >=0.12",
    "python",
    "python-dateutil",
    "nibabel",
    "numpy",
    "odil >=0.12",
    "python",
    "python-dateutil"
   ]
  },
  "source": {
   "patches": [],
   "sha256": "9ae81a98a81446307324121c1900d4e647bc005b57600361c7899e8d07280a47",
   "url": "https://github.com/lamyj/dicomifier/archive/v2.4.0.tar.gz"
  },
  "test": {
   "commands": [
    "dicomifier to-dicom --help > /dev/null",
    "dicomifier to-nifti --help > /dev/null",
    "dicomifier to-dicom --help > /dev/null",
    "dicomifier to-nifti --help > /dev/null",
    "dicomifier to-dicom --help > /dev/null",
    "dicomifier to-nifti --help > /dev/null",
    "dicomifier to-dicom --help > /dev/null",
    "dicomifier to-nifti --help > /dev/null"
   ],
   "imports": [
    "dicomifier",
    "dicomifier",
    "dicomifier",
    "dicomifier"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "libboost-headers",
    "odil",
    "pybind11",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "nibabel",
    "numpy",
    "odil",
    "python",
    "python-dateutil"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "Dicomifier is a set of tools to convert Bruker data to DICOM files, and\nDICOM files to NIfTI. It retains meta-data (e.g. MR parameters such as echo\ntime or subject parameters such as weight or height) throughout the\nconversion process, storing them in JSON format, allowing easy access in\nmultiple environments. The meta-data from Bruker is aligned on the DICOM\ndictionary for unified human and animal processing pipelines.\n",
   "dev_url": "https://github.com/lamyj/dicomifier",
   "doc_url": "https://github.com/lamyj/dicomifier",
   "home": "https://github.com/lamyj/dicomifier",
   "license": "CECILL-B",
   "license_family": "OTHER",
   "license_file": "LICENSE.txt",
   "summary": "Convert data from Bruker to DICOM and from DICOM to NIfTI"
  },
  "build": {
   "number": "1"
  },
  "extra": {
   "recipe-maintainers": [
    "lamyj",
    "lamyj",
    "lamyj",
    "lamyj",
    "lamyj",
    "lamyj",
    "lamyj",
    "lamyj"
   ]
  },
  "package": {
   "name": "dicomifier",
   "version": "2.4.0"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "cmake",
    "ninja"
   ],
   "host": [
    "libboost-headers",
    "odil >=0.12",
    "pybind11",
    "python",
    "libboost-headers",
    "odil >=0.12",
    "pybind11",
    "python",
    "libboost-headers",
    "odil >=0.12",
    "pybind11",
    "python",
    "libboost-headers",
    "odil >=0.12",
    "pybind11",
    "python",
    "libboost-headers",
    "odil >=0.12",
    "pybind11",
    "python",
    "libboost-headers",
    "odil >=0.12",
    "pybind11",
    "python",
    "libboost-headers",
    "odil >=0.12",
    "pybind11",
    "python",
    "libboost-headers",
    "odil >=0.12",
    "pybind11",
    "python"
   ],
   "run": [
    "nibabel",
    "numpy",
    "odil >=0.12",
    "python",
    "python-dateutil",
    "nibabel",
    "numpy",
    "odil >=0.12",
    "python",
    "python-dateutil",
    "nibabel",
    "numpy",
    "odil >=0.12",
    "python",
    "python-dateutil",
    "nibabel",
    "numpy",
    "odil >=0.12",
    "python",
    "python-dateutil",
    "nibabel",
    "numpy",
    "odil >=0.12",
    "python",
    "python-dateutil",
    "nibabel",
    "numpy",
    "odil >=0.12",
    "python",
    "python-dateutil",
    "nibabel",
    "numpy",
    "odil >=0.12",
    "python",
    "python-dateutil",
    "nibabel",
    "numpy",
    "odil >=0.12",
    "python",
    "python-dateutil"
   ]
  },
  "source": {
   "patches": [],
   "sha256": "9ae81a98a81446307324121c1900d4e647bc005b57600361c7899e8d07280a47",
   "url": "https://github.com/lamyj/dicomifier/archive/v2.4.0.tar.gz"
  },
  "test": {
   "commands": [
    "dicomifier to-dicom --help > /dev/null",
    "dicomifier to-nifti --help > /dev/null",
    "dicomifier to-dicom --help > /dev/null",
    "dicomifier to-nifti --help > /dev/null",
    "dicomifier to-dicom --help > /dev/null",
    "dicomifier to-nifti --help > /dev/null",
    "dicomifier to-dicom --help > /dev/null",
    "dicomifier to-nifti --help > /dev/null",
    "dicomifier to-dicom --help > /dev/null",
    "dicomifier to-nifti --help > /dev/null",
    "dicomifier to-dicom --help > /dev/null",
    "dicomifier to-nifti --help > /dev/null",
    "dicomifier to-dicom --help > /dev/null",
    "dicomifier to-nifti --help > /dev/null",
    "dicomifier to-dicom --help > /dev/null",
    "dicomifier to-nifti --help > /dev/null"
   ],
   "imports": [
    "dicomifier",
    "dicomifier",
    "dicomifier",
    "dicomifier",
    "dicomifier",
    "dicomifier",
    "dicomifier",
    "dicomifier"
   ]
  }
 },
 "name": "dicomifier",
 "osx_64_meta_yaml": {
  "about": {
   "description": "Dicomifier is a set of tools to convert Bruker data to DICOM files, and\nDICOM files to NIfTI. It retains meta-data (e.g. MR parameters such as echo\ntime or subject parameters such as weight or height) throughout the\nconversion process, storing them in JSON format, allowing easy access in\nmultiple environments. The meta-data from Bruker is aligned on the DICOM\ndictionary for unified human and animal processing pipelines.\n",
   "dev_url": "https://github.com/lamyj/dicomifier",
   "doc_url": "https://github.com/lamyj/dicomifier",
   "home": "https://github.com/lamyj/dicomifier",
   "license": "CECILL-B",
   "license_family": "OTHER",
   "license_file": "LICENSE.txt",
   "summary": "Convert data from Bruker to DICOM and from DICOM to NIfTI"
  },
  "build": {
   "number": "1"
  },
  "extra": {
   "recipe-maintainers": [
    "lamyj",
    "lamyj",
    "lamyj",
    "lamyj"
   ]
  },
  "package": {
   "name": "dicomifier",
   "version": "2.4.0"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "cmake",
    "ninja"
   ],
   "host": [
    "libboost-headers",
    "odil >=0.12",
    "pybind11",
    "python",
    "libboost-headers",
    "odil >=0.12",
    "pybind11",
    "python",
    "libboost-headers",
    "odil >=0.12",
    "pybind11",
    "python",
    "libboost-headers",
    "odil >=0.12",
    "pybind11",
    "python"
   ],
   "run": [
    "nibabel",
    "numpy",
    "odil >=0.12",
    "python",
    "python-dateutil",
    "nibabel",
    "numpy",
    "odil >=0.12",
    "python",
    "python-dateutil",
    "nibabel",
    "numpy",
    "odil >=0.12",
    "python",
    "python-dateutil",
    "nibabel",
    "numpy",
    "odil >=0.12",
    "python",
    "python-dateutil"
   ]
  },
  "source": {
   "patches": [],
   "sha256": "9ae81a98a81446307324121c1900d4e647bc005b57600361c7899e8d07280a47",
   "url": "https://github.com/lamyj/dicomifier/archive/v2.4.0.tar.gz"
  },
  "test": {
   "commands": [
    "dicomifier to-dicom --help > /dev/null",
    "dicomifier to-nifti --help > /dev/null",
    "dicomifier to-dicom --help > /dev/null",
    "dicomifier to-nifti --help > /dev/null",
    "dicomifier to-dicom --help > /dev/null",
    "dicomifier to-nifti --help > /dev/null",
    "dicomifier to-dicom --help > /dev/null",
    "dicomifier to-nifti --help > /dev/null"
   ],
   "imports": [
    "dicomifier",
    "dicomifier",
    "dicomifier",
    "dicomifier"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "libboost-headers",
    "odil",
    "pybind11",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "nibabel",
    "numpy",
    "odil",
    "python",
    "python-dateutil"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "dicomifier"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "linux_64",
  "osx_64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/dicomifier.json"
 },
 "raw_meta_yaml": "{% set name = \"dicomifier\" %}\n{% set version = \"2.4.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/lamyj/{{ name }}/archive/v{{ version }}.tar.gz\n  sha256: 9ae81a98a81446307324121c1900d4e647bc005b57600361c7899e8d07280a47\n  patches: []\n\nbuild:\n  number: 1\n  skip: true  # [py<=35 or win]\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n    - cmake\n    - ninja\n  host:\n    - libboost-headers\n    - odil >=0.12\n    - pybind11\n    - python\n  run:\n    - nibabel\n    - numpy\n    - odil >=0.12\n    - python\n    - python-dateutil\n\ntest:\n  imports:\n    - dicomifier\n  commands:\n    - dicomifier to-dicom --help > /dev/null\n    - dicomifier to-nifti --help > /dev/null\n\nabout:\n  home: https://github.com/lamyj/dicomifier\n  license: CECILL-B\n  license_family: OTHER\n  license_file: LICENSE.txt\n  summary: Convert data from Bruker to DICOM and from DICOM to NIfTI\n\n  description: |\n    Dicomifier is a set of tools to convert Bruker data to DICOM files, and \n    DICOM files to NIfTI. It retains meta-data (e.g. MR parameters such as echo \n    time or subject parameters such as weight or height) throughout the \n    conversion process, storing them in JSON format, allowing easy access in \n    multiple environments. The meta-data from Bruker is aligned on the DICOM \n    dictionary for unified human and animal processing pipelines.\n\n  doc_url: https://github.com/lamyj/dicomifier\n  dev_url: https://github.com/lamyj/dicomifier\n\nextra:\n  recipe-maintainers:\n    - lamyj\n",
 "req": {
  "__set__": true,
  "elements": [
   "cmake",
   "cxx_compiler_stub",
   "libboost-headers",
   "nibabel",
   "ninja",
   "numpy",
   "odil",
   "pybind11",
   "python",
   "python-dateutil"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub",
    "libboost-headers",
    "odil",
    "pybind11",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub",
    "nibabel",
    "numpy",
    "odil",
    "python",
    "python-dateutil"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "libboost-headers",
    "odil >=0.12",
    "pybind11",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "nibabel",
    "numpy",
    "odil >=0.12",
    "python",
    "python-dateutil"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://github.com/lamyj/dicomifier/archive/v2.4.0.tar.gz",
 "version": "2.4.0",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/dicomifier.json"
 }
}