{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "conda_forge_output_validation": true,
  "github": {
   "branch_name": "main",
   "tooling_branch_name": "main"
  }
 },
 "feedstock_name": "cerbere",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "cerbere provides a unified python API to manipulate any type of spatio-temporal observations,\nwhich can be read from many existing storage formats using the same set of functions.\nIt also provides classes for specific types of observation features.\n",
   "home": "https://gitlab.ifremer.fr/cerbere/cerbere",
   "license": "GPL-3.0-or-later",
   "license_file": "LICENSE.txt",
   "summary": "cerbere provides a unified python API to manipulate any type of spatio-temporal observations"
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": [
    "PYTHON -m pip install . -vv"
   ],
   "script_env": [
    "POETRY_DYNAMIC_VERSIONING_BYPASS=2.1.1"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "marie59"
   ]
  },
  "package": {
   "name": "cerbere",
   "version": "2.1.1"
  },
  "requirements": {
   "host": [
    "python >=3.8",
    "pip",
    "poetry-core >=1.0.0",
    "poetry-dynamic-versioning"
   ],
   "run": [
    "python >=3.8",
    "pyyaml >=5.3",
    "netcdf4 >=1.5",
    "scipy >=1.5",
    "shapely >=1.7",
    "xarray >=2022.3.0"
   ]
  },
  "source": {
   "sha256": "f127d699086596c7434a8ab5b5562bd8f02973395d3e2d730e9dab01dbcfae51",
   "url": "https://gitlab.ifremer.fr/cerbere/cerbere/-/archive/V2.1.1/cerbere-V2.1.1.tar.gz"
  },
  "test": {
   "imports": [
    "cerbere"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "poetry-core",
    "poetry-dynamic-versioning",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "netcdf4",
    "python",
    "pyyaml",
    "scipy",
    "shapely",
    "xarray"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "cerbere provides a unified python API to manipulate any type of spatio-temporal observations,\nwhich can be read from many existing storage formats using the same set of functions.\nIt also provides classes for specific types of observation features.\n",
   "home": "https://gitlab.ifremer.fr/cerbere/cerbere",
   "license": "GPL-3.0-or-later",
   "license_file": "LICENSE.txt",
   "summary": "cerbere provides a unified python API to manipulate any type of spatio-temporal observations"
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": [
    "PYTHON -m pip install . -vv"
   ],
   "script_env": [
    "POETRY_DYNAMIC_VERSIONING_BYPASS=2.1.1"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "marie59"
   ]
  },
  "package": {
   "name": "cerbere",
   "version": "2.1.1"
  },
  "requirements": {
   "host": [
    "python >=3.8",
    "pip",
    "poetry-core >=1.0.0",
    "poetry-dynamic-versioning"
   ],
   "run": [
    "python >=3.8",
    "pyyaml >=5.3",
    "netcdf4 >=1.5",
    "scipy >=1.5",
    "shapely >=1.7",
    "xarray >=2022.3.0"
   ]
  },
  "source": {
   "sha256": "f127d699086596c7434a8ab5b5562bd8f02973395d3e2d730e9dab01dbcfae51",
   "url": "https://gitlab.ifremer.fr/cerbere/cerbere/-/archive/V2.1.1/cerbere-V2.1.1.tar.gz"
  },
  "test": {
   "imports": [
    "cerbere"
   ]
  }
 },
 "name": "cerbere",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "cerbere"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "linux_64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/cerbere.json"
 },
 "raw_meta_yaml": "{% set name = \"cerbere\" %}\n{% set version = \"2.1.1\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://gitlab.ifremer.fr/cerbere/cerbere/-/archive/V{{ version }}/cerbere-V{{ version }}.tar.gz\n  sha256: f127d699086596c7434a8ab5b5562bd8f02973395d3e2d730e9dab01dbcfae51\n\nbuild:\n  number: 0\n  noarch: python\n  script_env:\n    - POETRY_DYNAMIC_VERSIONING_BYPASS={{ version }}\n  script:\n    - {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  host:\n    - python >=3.8\n    - pip\n    - poetry-core >=1.0.0\n    - poetry-dynamic-versioning\n  run:\n    - python >=3.8\n    - pyyaml >=5.3\n    - netcdf4 >=1.5\n    - scipy >=1.5\n    - shapely >=1.7\n    - xarray >=2022.3.0\n\ntest:\n  imports:\n    - cerbere\n\nabout:\n  home: https://gitlab.ifremer.fr/cerbere/cerbere\n  license: GPL-3.0-or-later\n  license_file: LICENSE.txt\n  summary: cerbere provides a unified python API to manipulate any type of spatio-temporal observations\n  description: |\n    cerbere provides a unified python API to manipulate any type of spatio-temporal observations,\n    which can be read from many existing storage formats using the same set of functions.\n    It also provides classes for specific types of observation features.\n\nextra:\n  recipe-maintainers:\n    - marie59\n",
 "req": {
  "__set__": true,
  "elements": [
   "netcdf4",
   "pip",
   "poetry-core",
   "poetry-dynamic-versioning",
   "python",
   "pyyaml",
   "scipy",
   "shapely",
   "xarray"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "poetry-core",
    "poetry-dynamic-versioning",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "netcdf4",
    "python",
    "pyyaml",
    "scipy",
    "shapely",
    "xarray"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "poetry-core >=1.0.0",
    "poetry-dynamic-versioning",
    "python >=3.8"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "netcdf4 >=1.5",
    "python >=3.8",
    "pyyaml >=5.3",
    "scipy >=1.5",
    "shapely >=1.7",
    "xarray >=2022.3.0"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://gitlab.ifremer.fr/cerbere/cerbere/-/archive/V2.1.1/cerbere-V2.1.1.tar.gz",
 "version": "2.1.1",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/cerbere.json"
 }
}