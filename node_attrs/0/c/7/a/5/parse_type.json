{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "conda_build": {
   "pkg_format": "2"
  },
  "conda_forge_output_validation": true,
  "github": {
   "branch_name": "main",
   "tooling_branch_name": "main"
  },
  "provider": {
   "win": "azure"
  }
 },
 "feedstock_name": "parse_type",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "parse_type extends the parse module (opposite of string.format()) with the following features:\n  * build type converters for common use cases (enum/mapping, choice)\n  * build a type converter with a cardinality constraint (0..1, 0..*, 1..*) from the type converter with cardinality=1.\n  * compose a type converter from other type converters\n  * an extended parser that supports the CardinalityField naming schema and creates missing type variants (0..1, 0..*, 1..*) from the primary type converter\ndev_url: https://github.com/jenisys/parse_type\n",
   "home": "https://github.com/jenisys/parse_type",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "Simplifies to build parse types based on the parse module"
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "PYTHON -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "stuertz"
   ]
  },
  "package": {
   "name": "parse_type",
   "version": "0.6.2"
  },
  "requirements": {
   "host": [
    "python >=3.6",
    "setuptools",
    "pip"
   ],
   "run": [
    "python >=3.6",
    "parse >=1.6",
    "six"
   ]
  },
  "source": {
   "sha256": "79b1f2497060d0928bc46016793f1fca1057c4aacdf15ef876aa48d75a73a355",
   "url": "https://pypi.io/packages/source/p/parse_type/parse_type-0.6.2.tar.gz"
  },
  "test": {
   "imports": [
    "parse_type"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "parse",
    "python",
    "six"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "parse_type extends the parse module (opposite of string.format()) with the following features:\n  * build type converters for common use cases (enum/mapping, choice)\n  * build a type converter with a cardinality constraint (0..1, 0..*, 1..*) from the type converter with cardinality=1.\n  * compose a type converter from other type converters\n  * an extended parser that supports the CardinalityField naming schema and creates missing type variants (0..1, 0..*, 1..*) from the primary type converter\ndev_url: https://github.com/jenisys/parse_type\n",
   "home": "https://github.com/jenisys/parse_type",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "Simplifies to build parse types based on the parse module"
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "PYTHON -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "stuertz"
   ]
  },
  "package": {
   "name": "parse_type",
   "version": "0.6.2"
  },
  "requirements": {
   "host": [
    "python >=3.6",
    "setuptools",
    "pip"
   ],
   "run": [
    "python >=3.6",
    "parse >=1.6",
    "six"
   ]
  },
  "source": {
   "sha256": "79b1f2497060d0928bc46016793f1fca1057c4aacdf15ef876aa48d75a73a355",
   "url": "https://pypi.io/packages/source/p/parse_type/parse_type-0.6.2.tar.gz"
  },
  "test": {
   "imports": [
    "parse_type"
   ]
  }
 },
 "name": "parse_type",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "parse_type"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "linux_64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/parse_type.json"
 },
 "raw_meta_yaml": "{% set version = \"0.6.2\" %}\n\npackage:\n  name: parse_type\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/p/parse_type/parse_type-{{ version }}.tar.gz\n  sha256: 79b1f2497060d0928bc46016793f1fca1057c4aacdf15ef876aa48d75a73a355\n\nbuild:\n  number: 0\n  noarch: python\n  script: {{ PYTHON }} -m pip install . --no-deps -vv\n\nrequirements:\n  host:\n    - python >=3.6\n    - setuptools\n    - pip\n  run:\n    - python >=3.6\n    - parse >=1.6\n    - six\n\ntest:\n  imports:\n    - parse_type\n\nabout:\n  home: https://github.com/jenisys/parse_type\n  license: BSD-3-Clause\n  license_file: LICENSE\n  summary: Simplifies to build parse types based on the parse module\n  license_family: BSD\n  description: |\n    parse_type extends the parse module (opposite of string.format()) with the following features:\n      * build type converters for common use cases (enum/mapping, choice)\n      * build a type converter with a cardinality constraint (0..1, 0..*, 1..*) from the type converter with cardinality=1.\n      * compose a type converter from other type converters\n      * an extended parser that supports the CardinalityField naming schema and creates missing type variants (0..1, 0..*, 1..*) from the primary type converter\n    dev_url: https://github.com/jenisys/parse_type\n\nextra:\n  recipe-maintainers:\n    - stuertz\n",
 "req": {
  "__set__": true,
  "elements": [
   "parse",
   "pip",
   "python",
   "setuptools",
   "six"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "parse",
    "python",
    "six"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python >=3.6",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "parse >=1.6",
    "python >=3.6",
    "six"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://pypi.io/packages/source/p/parse_type/parse_type-0.6.2.tar.gz",
 "version": "0.6.2",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/parse_type.json"
 }
}